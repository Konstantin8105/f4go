(string) (len=3956) "COMMENT\t> \\brief \\b CSSCAL\nCOMMENT\t*\nCOMMENT\t*  =========== DOCUMENTATION ===========\nCOMMENT\t*\nCOMMENT\t* Online html documentation available at\nCOMMENT\t*            http://www.netlib.org/lapack/explore-html/\nCOMMENT\t*\nCOMMENT\t*  Definition:\nCOMMENT\t*  ===========\nCOMMENT\t*\nCOMMENT\t*       SUBROUTINE CSSCAL(N,SA,CX,INCX)\nCOMMENT\t*\nCOMMENT\t*       .. Scalar Arguments ..\nCOMMENT\t*       REAL SA\nCOMMENT\t*       INTEGER INCX,N\nCOMMENT\t*       ..\nCOMMENT\t*       .. Array Arguments ..\nCOMMENT\t*       COMPLEX CX(*)\nCOMMENT\t*       ..\nCOMMENT\t*\nCOMMENT\t*\nCOMMENT\t*> \\par Purpose:\nCOMMENT\t*  =============\nCOMMENT\t*>\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>\nCOMMENT\t*>    CSSCAL scales a complex vector by a real constant.\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*\nCOMMENT\t*  Arguments:\nCOMMENT\t*  ==========\nCOMMENT\t*\nCOMMENT\t*> \\param[in] N\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          N is INTEGER\nCOMMENT\t*>         number of elements in input vector(s)\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*> \\param[in] SA\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          SA is REAL\nCOMMENT\t*>           On entry, SA specifies the scalar alpha.\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*> \\param[in,out] CX\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          CX is COMPLEX array, dimension ( 1 + ( N - 1 )*abs( INCX ) )\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*> \\param[in] INCX\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          INCX is INTEGER\nCOMMENT\t*>         storage spacing between elements of CX\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*\nCOMMENT\t*  Authors:\nCOMMENT\t*  ========\nCOMMENT\t*\nCOMMENT\t*> \\author Univ. of Tennessee\nCOMMENT\t*> \\author Univ. of California Berkeley\nCOMMENT\t*> \\author Univ. of Colorado Denver\nCOMMENT\t*> \\author NAG Ltd.\nCOMMENT\t*\nCOMMENT\t*> \\date November 2017\nCOMMENT\t*\nCOMMENT\t*> \\ingroup complex_blas_level1\nCOMMENT\t*\nCOMMENT\t*> \\par Further Details:\nCOMMENT\t*  =====================\nCOMMENT\t*>\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>\nCOMMENT\t*>     jack dongarra, linpack, 3/11/78.\nCOMMENT\t*>     modified 3/93 to return if incx .le. 0.\nCOMMENT\t*>     modified 12/3/93, array(1) declarations changed to array(*)\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*  =====================================================================\nIDENT\tSUBROUTINE\nIDENT\tCSSCAL\n(\t(\nIDENT\tN\n,\t,\nIDENT\tSA\n,\t,\nIDENT\tCX\n,\t,\nIDENT\tINCX\n)\t)\nCOMMENT\t*\nCOMMENT\t*  -- Reference BLAS level1 routine (version 3.8.0) --\nCOMMENT\t*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --\nCOMMENT\t*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--\nCOMMENT\t*     November 2017\nCOMMENT\t*\nCOMMENT\t*     .. Scalar Arguments ..\nIDENT\tREAL\nIDENT\tSA\nIDENT\tINTEGER\nIDENT\tINCX\n,\t,\nIDENT\tN\nCOMMENT\t*     ..\nCOMMENT\t*     .. Array Arguments ..\nIDENT\tCOMPLEX\nIDENT\tCX\n(\t(\n*\t*)\nCOMMENT\t*     ..\nCOMMENT\t*\nCOMMENT\t*  =====================================================================\nCOMMENT\t*\nCOMMENT\t*     .. Local Scalars ..\nIDENT\tINTEGER\nIDENT\tI\n,\t,\nIDENT\tNINCX\nCOMMENT\t*     ..\nCOMMENT\t*     .. Intrinsic Functions ..\nIDENT\tINTRINSIC\nIDENT\tAIMAG\n,\t,\nIDENT\tCMPLX\n,\t,\nIDENT\tREAL\nCOMMENT\t*     ..\nIDENT\tIF\n(\t(\nIDENT\tN\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t0\n.\t.\nIDENT\tOR\n.\t.\nIDENT\tINCX\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t0\n)\t)\nIDENT\tRETURN\nIDENT\tIF\n(\t(\nIDENT\tINCX\n.\t.\nIDENT\tEQ\n.\t.\nIDENT\t1\n)\t)\nIDENT\tTHEN\nCOMMENT\t*\nCOMMENT\t*        code for increment equal to 1\nCOMMENT\t*\nIDENT\tDO\nIDENT\tI\n=\t=\nIDENT\t1\n,\t,\nIDENT\tN\nIDENT\tCX\n(\t(\nIDENT\tI\n)\t)\n=\t=\nIDENT\tCMPLX\n(\t(\nIDENT\tSA\n*\t*R\nIDENT\tEAL\n(\t(\nIDENT\tCX\n(\t(\nIDENT\tI\n)\t)\n)\t)\n,\t,\nIDENT\tSA\n*\t*A\nIDENT\tIMAG\n(\t(\nIDENT\tCX\n(\t(\nIDENT\tI\n)\t)\n)\t)\n)\t)\nIDENT\tEND\nIDENT\tDO\nIDENT\tELSE\nCOMMENT\t*\nCOMMENT\t*        code for increment not equal to 1\nCOMMENT\t*\nIDENT\tNINCX\n=\t=\nIDENT\tN\n*\t*I\nIDENT\tNCX\nIDENT\tDO\nIDENT\tI\n=\t=\nIDENT\t1\n,\t,\nIDENT\tNINCX\n,\t,\nIDENT\tINCX\nIDENT\tCX\n(\t(\nIDENT\tI\n)\t)\n=\t=\nIDENT\tCMPLX\n(\t(\nIDENT\tSA\n*\t*R\nIDENT\tEAL\n(\t(\nIDENT\tCX\n(\t(\nIDENT\tI\n)\t)\n)\t)\n,\t,\nIDENT\tSA\n*\t*A\nIDENT\tIMAG\n(\t(\nIDENT\tCX\n(\t(\nIDENT\tI\n)\t)\n)\t)\n)\t)\nIDENT\tEND\nIDENT\tDO\nIDENT\tEND\nIDENT\tIF\nIDENT\tRETURN\nIDENT\tEND\n"
