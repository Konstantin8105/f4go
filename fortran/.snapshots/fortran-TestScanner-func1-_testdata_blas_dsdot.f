(string) (len=6091) "COMMENT\t> \\brief \\b DSDOT\nCOMMENT\t*\nCOMMENT\t*  =========== DOCUMENTATION ===========\nCOMMENT\t*\nCOMMENT\t* Online html documentation available at\nCOMMENT\t*            http://www.netlib.org/lapack/explore-html/\nCOMMENT\t*\nCOMMENT\t*  Definition:\nCOMMENT\t*  ===========\nCOMMENT\t*\nCOMMENT\t*       DOUBLE PRECISION FUNCTION DSDOT(N,SX,INCX,SY,INCY)\nCOMMENT\t*\nCOMMENT\t*       .. Scalar Arguments ..\nCOMMENT\t*       INTEGER INCX,INCY,N\nCOMMENT\t*       ..\nCOMMENT\t*       .. Array Arguments ..\nCOMMENT\t*       REAL SX(*),SY(*)\nCOMMENT\t*       ..\nCOMMENT\t*\nCOMMENT\t*    AUTHORS\nCOMMENT\t*    =======\nCOMMENT\t*    Lawson, C. L., (JPL), Hanson, R. J., (SNLA),\nCOMMENT\t*    Kincaid, D. R., (U. of Texas), Krogh, F. T., (JPL)\nCOMMENT\t*\nCOMMENT\t*\nCOMMENT\t*> \\par Purpose:\nCOMMENT\t*  =============\nCOMMENT\t*>\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>\nCOMMENT\t*> Compute the inner product of two vectors with extended\nCOMMENT\t*> precision accumulation and result.\nCOMMENT\t*>\nCOMMENT\t*> Returns D.P. dot product accumulated in D.P., for S.P. SX and SY\nCOMMENT\t*> DSDOT = sum for I = 0 to N-1 of  SX(LX+I*INCX) * SY(LY+I*INCY),\nCOMMENT\t*> where LX = 1 if INCX .GE. 0, else LX = 1+(1-N)*INCX, and LY is\nCOMMENT\t*> defined in a similar way using INCY.\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*\nCOMMENT\t*  Arguments:\nCOMMENT\t*  ==========\nCOMMENT\t*\nCOMMENT\t*> \\param[in] N\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          N is INTEGER\nCOMMENT\t*>         number of elements in input vector(s)\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*> \\param[in] SX\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          SX is REAL array, dimension(N)\nCOMMENT\t*>         single precision vector with N elements\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*> \\param[in] INCX\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          INCX is INTEGER\nCOMMENT\t*>          storage spacing between elements of SX\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*> \\param[in] SY\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          SY is REAL array, dimension(N)\nCOMMENT\t*>         single precision vector with N elements\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*> \\param[in] INCY\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          INCY is INTEGER\nCOMMENT\t*>         storage spacing between elements of SY\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*> \\result DSDOT\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          DSDOT is DOUBLE PRECISION\nCOMMENT\t*>         DSDOT  double precision dot product (zero if N.LE.0)\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*\nCOMMENT\t*  Authors:\nCOMMENT\t*  ========\nCOMMENT\t*\nCOMMENT\t*> \\author Univ. of Tennessee\nCOMMENT\t*> \\author Univ. of California Berkeley\nCOMMENT\t*> \\author Univ. of Colorado Denver\nCOMMENT\t*> \\author NAG Ltd.\nCOMMENT\t*\nCOMMENT\t*> \\date December 2016\nCOMMENT\t*\nCOMMENT\t*> \\ingroup double_blas_level1\nCOMMENT\t*\nCOMMENT\t*> \\par Further Details:\nCOMMENT\t*  =====================\nCOMMENT\t*>\nCOMMENT\t*> \\verbatim\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*\nCOMMENT\t*> \\par References:\nCOMMENT\t*  ================\nCOMMENT\t*>\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>\nCOMMENT\t*>\nCOMMENT\t*>  C. L. Lawson, R. J. Hanson, D. R. Kincaid and F. T.\nCOMMENT\t*>  Krogh, Basic linear algebra subprograms for Fortran\nCOMMENT\t*>  usage, Algorithm No. 539, Transactions on Mathematical\nCOMMENT\t*>  Software 5, 3 (September 1979), pp. 308-323.\nCOMMENT\t*>\nCOMMENT\t*>  REVISION HISTORY  (YYMMDD)\nCOMMENT\t*>\nCOMMENT\t*>  791001  DATE WRITTEN\nCOMMENT\t*>  890831  Modified array declarations.  (WRB)\nCOMMENT\t*>  890831  REVISION DATE from Version 3.2\nCOMMENT\t*>  891214  Prologue converted to Version 4.0 format.  (BAB)\nCOMMENT\t*>  920310  Corrected definition of LX in DESCRIPTION.  (WRB)\nCOMMENT\t*>  920501  Reformatted the REFERENCES section.  (WRB)\nCOMMENT\t*>  070118  Reformat to LAPACK style (JL)\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*  =====================================================================\nIDENT\tDOUBLE\nIDENT\tPRECISION\nIDENT\tFUNCTION\nIDENT\tDSDOT\n(\t(\nIDENT\tN\n,\t,\nIDENT\tSX\n,\t,\nIDENT\tINCX\n,\t,\nIDENT\tSY\n,\t,\nIDENT\tINCY\n)\t)\nCOMMENT\t*\nCOMMENT\t*  -- Reference BLAS level1 routine (version 3.7.0) --\nCOMMENT\t*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --\nCOMMENT\t*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--\nCOMMENT\t*     December 2016\nCOMMENT\t*\nCOMMENT\t*     .. Scalar Arguments ..\nIDENT\tINTEGER\nIDENT\tINCX\n,\t,\nIDENT\tINCY\n,\t,\nIDENT\tN\nCOMMENT\t*     ..\nCOMMENT\t*     .. Array Arguments ..\nIDENT\tREAL\nIDENT\tSX\n(\t(\n*\t*)\n,\t,\nIDENT\tSY\n(\t(\n*\t*)\nCOMMENT\t*     ..\nCOMMENT\t*\nCOMMENT\t*  Authors:\nCOMMENT\t*  ========\nCOMMENT\t*  Lawson, C. L., (JPL), Hanson, R. J., (SNLA),\nCOMMENT\t*  Kincaid, D. R., (U. of Texas), Krogh, F. T., (JPL)\nCOMMENT\t*\nCOMMENT\t*  =====================================================================\nCOMMENT\t*\nCOMMENT\t*     .. Local Scalars ..\nIDENT\tINTEGER\nIDENT\tI\n,\t,\nIDENT\tKX\n,\t,\nIDENT\tKY\n,\t,\nIDENT\tNS\nCOMMENT\t*     ..\nCOMMENT\t*     .. Intrinsic Functions ..\nIDENT\tINTRINSIC\nIDENT\tDBLE\nCOMMENT\t*     ..\nIDENT\tDSDOT\n=\t=\nIDENT\t0\n.\t.\nIDENT\t0\nIDENT\tD0\nIDENT\tIF\n(\t(\nIDENT\tN\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t0\n)\t)\nIDENT\tRETURN\nIDENT\tIF\n(\t(\nIDENT\tINCX\n.\t.\nIDENT\tEQ\n.\t.\nIDENT\tINCY\n.\t.\nIDENT\tAND\n.\t.\nIDENT\tINCX\n.\t.\nIDENT\tGT\n.\t.\nIDENT\t0\n)\t)\nIDENT\tTHEN\nCOMMENT\t*\nCOMMENT\t*     Code for equal, positive, non-unit increments.\nCOMMENT\t*\nIDENT\tNS\n=\t=\nIDENT\tN\n*\t*I\nIDENT\tNCX\nIDENT\tDO\nIDENT\tI\n=\t=\nIDENT\t1\n,\t,\nIDENT\tNS\n,\t,\nIDENT\tINCX\nIDENT\tDSDOT\n=\t=\nIDENT\tDSDOT\n+\t+\nIDENT\tDBLE\n(\t(\nIDENT\tSX\n(\t(\nIDENT\tI\n)\t)\n)\t)\n*\t*D\nIDENT\tBLE\n(\t(\nIDENT\tSY\n(\t(\nIDENT\tI\n)\t)\n)\t)\nIDENT\tEND\nIDENT\tDO\nIDENT\tELSE\nCOMMENT\t*\nCOMMENT\t*     Code for unequal or nonpositive increments.\nCOMMENT\t*\nIDENT\tKX\n=\t=\nIDENT\t1\nIDENT\tKY\n=\t=\nIDENT\t1\nIDENT\tIF\n(\t(\nIDENT\tINCX\n.\t.\nIDENT\tLT\n.\t.\nIDENT\t0\n)\t)\nIDENT\tKX\n=\t=\nIDENT\t1\n+\t+\n(\t(\nIDENT\t1\n-\t-\nIDENT\tN\n)\t)\n*\t*I\nIDENT\tNCX\nIDENT\tIF\n(\t(\nIDENT\tINCY\n.\t.\nIDENT\tLT\n.\t.\nIDENT\t0\n)\t)\nIDENT\tKY\n=\t=\nIDENT\t1\n+\t+\n(\t(\nIDENT\t1\n-\t-\nIDENT\tN\n)\t)\n*\t*I\nIDENT\tNCY\nIDENT\tDO\nIDENT\tI\n=\t=\nIDENT\t1\n,\t,\nIDENT\tN\nIDENT\tDSDOT\n=\t=\nIDENT\tDSDOT\n+\t+\nIDENT\tDBLE\n(\t(\nIDENT\tSX\n(\t(\nIDENT\tKX\n)\t)\n)\t)\n*\t*D\nIDENT\tBLE\n(\t(\nIDENT\tSY\n(\t(\nIDENT\tKY\n)\t)\n)\t)\nIDENT\tKX\n=\t=\nIDENT\tKX\n+\t+\nIDENT\tINCX\nIDENT\tKY\n=\t=\nIDENT\tKY\n+\t+\nIDENT\tINCY\nIDENT\tEND\nIDENT\tDO\nIDENT\tEND\nIDENT\tIF\nIDENT\tRETURN\nIDENT\tEND\n"
