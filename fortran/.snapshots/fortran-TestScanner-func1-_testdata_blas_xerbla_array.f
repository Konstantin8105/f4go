(string) (len=4286) "COMMENT\t> \\brief \\b XERBLA_ARRAY\nCOMMENT\t*\nCOMMENT\t*  =========== DOCUMENTATION ===========\nCOMMENT\t*\nCOMMENT\t* Online html documentation available at\nCOMMENT\t*            http://www.netlib.org/lapack/explore-html/\nCOMMENT\t*\nCOMMENT\t*  Definition:\nCOMMENT\t*  ===========\nCOMMENT\t*\nCOMMENT\t*       SUBROUTINE XERBLA_ARRAY(SRNAME_ARRAY, SRNAME_LEN, INFO)\nCOMMENT\t*\nCOMMENT\t*       .. Scalar Arguments ..\nCOMMENT\t*       INTEGER SRNAME_LEN, INFO\nCOMMENT\t*       ..\nCOMMENT\t*       .. Array Arguments ..\nCOMMENT\t*       CHARACTER(1) SRNAME_ARRAY(SRNAME_LEN)\nCOMMENT\t*       ..\nCOMMENT\t*\nCOMMENT\t*\nCOMMENT\t*> \\par Purpose:\nCOMMENT\t*  =============\nCOMMENT\t*>\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>\nCOMMENT\t*> XERBLA_ARRAY assists other languages in calling XERBLA, the LAPACK\nCOMMENT\t*> and BLAS error handler.  Rather than taking a Fortran string argument\nCOMMENT\t*> as the function's name, XERBLA_ARRAY takes an array of single\nCOMMENT\t*> characters along with the array's length.  XERBLA_ARRAY then copies\nCOMMENT\t*> up to 32 characters of that array into a Fortran string and passes\nCOMMENT\t*> that to XERBLA.  If called with a non-positive SRNAME_LEN,\nCOMMENT\t*> XERBLA_ARRAY will call XERBLA with a string of all blank characters.\nCOMMENT\t*>\nCOMMENT\t*> Say some macro or other device makes XERBLA_ARRAY available to C99\nCOMMENT\t*> by a name lapack_xerbla and with a common Fortran calling convention.\nCOMMENT\t*> Then a C99 program could invoke XERBLA via:\nCOMMENT\t*>    {\nCOMMENT\t*>      int flen = strlen(__func__);\nCOMMENT\t*>      lapack_xerbla(__func__, &flen, &info);\nCOMMENT\t*>    }\nCOMMENT\t*>\nCOMMENT\t*> Providing XERBLA_ARRAY is not necessary for intercepting LAPACK\nCOMMENT\t*> errors.  XERBLA_ARRAY calls XERBLA.\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*\nCOMMENT\t*  Arguments:\nCOMMENT\t*  ==========\nCOMMENT\t*\nCOMMENT\t*> \\param[in] SRNAME_ARRAY\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          SRNAME_ARRAY is CHARACTER(1) array, dimension (SRNAME_LEN)\nCOMMENT\t*>          The name of the routine which called XERBLA_ARRAY.\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*> \\param[in] SRNAME_LEN\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          SRNAME_LEN is INTEGER\nCOMMENT\t*>          The length of the name in SRNAME_ARRAY.\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*> \\param[in] INFO\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          INFO is INTEGER\nCOMMENT\t*>          The position of the invalid parameter in the parameter list\nCOMMENT\t*>          of the calling routine.\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*\nCOMMENT\t*  Authors:\nCOMMENT\t*  ========\nCOMMENT\t*\nCOMMENT\t*> \\author Univ. of Tennessee\nCOMMENT\t*> \\author Univ. of California Berkeley\nCOMMENT\t*> \\author Univ. of Colorado Denver\nCOMMENT\t*> \\author NAG Ltd.\nCOMMENT\t*\nCOMMENT\t*> \\date December 2016\nCOMMENT\t*\nCOMMENT\t*> \\ingroup aux_blas\nCOMMENT\t*\nCOMMENT\t*  =====================================================================\nIDENT\tSUBROUTINE\nIDENT\tXERBLA_ARRAY\n(\t(\nIDENT\tSRNAME_ARRAY\n,\t,\nIDENT\tSRNAME_LEN\n,\t,\nIDENT\tINFO\n)\t)\nCOMMENT\t*\nCOMMENT\t*  -- Reference BLAS level1 routine (version 3.7.0) --\nCOMMENT\t*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --\nCOMMENT\t*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--\nCOMMENT\t*     December 2016\nCOMMENT\t*\nCOMMENT\t*     .. Scalar Arguments ..\nIDENT\tINTEGER\nIDENT\tSRNAME_LEN\n,\t,\nIDENT\tINFO\nCOMMENT\t*     ..\nCOMMENT\t*     .. Array Arguments ..\nIDENT\tCHARACTER\n(\t(\nIDENT\t1\n)\t)\nIDENT\tSRNAME_ARRAY\n(\t(\nIDENT\tSRNAME_LEN\n)\t)\nCOMMENT\t*     ..\nCOMMENT\t*\nCOMMENT\t* =====================================================================\nCOMMENT\t*\nCOMMENT\t*     ..\nCOMMENT\t*     .. Local Scalars ..\nIDENT\tINTEGER\nIDENT\tI\nCOMMENT\t*     ..\nCOMMENT\t*     .. Local Arrays ..\nIDENT\tCHARACTER\n*\t*3\nIDENT\t2\nIDENT\tSRNAME\nCOMMENT\t*     ..\nCOMMENT\t*     .. Intrinsic Functions ..\nIDENT\tINTRINSIC\nIDENT\tMIN\n,\t,\nIDENT\tLEN\nCOMMENT\t*     ..\nCOMMENT\t*     .. External Functions ..\nIDENT\tEXTERNAL\nIDENT\tXERBLA\nCOMMENT\t*     ..\nCOMMENT\t*     .. Executable Statements ..\nIDENT\tSRNAME\n=\t=\nSTRING\t''\nIDENT\tDO\nIDENT\tI\n=\t=\nIDENT\t1\n,\t,\nIDENT\tMIN\n(\t(\nIDENT\tSRNAME_LEN\n,\t,\nIDENT\tLEN\n(\t(\nIDENT\tSRNAME\n)\t)\n)\t)\nIDENT\tSRNAME\n(\t(\nIDENT\tI\n:\t:\nIDENT\tI\n)\t)\n=\t=\nIDENT\tSRNAME_ARRAY\n(\t(\nIDENT\tI\n)\t)\nIDENT\tEND\nIDENT\tDO\nIDENT\tCALL\nIDENT\tXERBLA\n(\t(\nIDENT\tSRNAME\n,\t,\nIDENT\tINFO\n)\t)\nIDENT\tRETURN\nIDENT\tEND\n"
