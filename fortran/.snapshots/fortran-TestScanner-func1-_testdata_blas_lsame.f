(string) (len=5191) "COMMENT\t> \\brief \\b LSAME\nCOMMENT\t*\nCOMMENT\t*  =========== DOCUMENTATION ===========\nCOMMENT\t*\nCOMMENT\t* Online html documentation available at\nCOMMENT\t*            http://www.netlib.org/lapack/explore-html/\nCOMMENT\t*\nCOMMENT\t*  Definition:\nCOMMENT\t*  ===========\nCOMMENT\t*\nCOMMENT\t*       LOGICAL FUNCTION LSAME(CA,CB)\nCOMMENT\t*\nCOMMENT\t*       .. Scalar Arguments ..\nCOMMENT\t*       CHARACTER CA,CB\nCOMMENT\t*       ..\nCOMMENT\t*\nCOMMENT\t*\nCOMMENT\t*> \\par Purpose:\nCOMMENT\t*  =============\nCOMMENT\t*>\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>\nCOMMENT\t*> LSAME returns .TRUE. if CA is the same letter as CB regardless of\nCOMMENT\t*> case.\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*\nCOMMENT\t*  Arguments:\nCOMMENT\t*  ==========\nCOMMENT\t*\nCOMMENT\t*> \\param[in] CA\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          CA is CHARACTER*1\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*>\nCOMMENT\t*> \\param[in] CB\nCOMMENT\t*> \\verbatim\nCOMMENT\t*>          CB is CHARACTER*1\nCOMMENT\t*>          CA and CB specify the single characters to be compared.\nCOMMENT\t*> \\endverbatim\nCOMMENT\t*\nCOMMENT\t*  Authors:\nCOMMENT\t*  ========\nCOMMENT\t*\nCOMMENT\t*> \\author Univ. of Tennessee\nCOMMENT\t*> \\author Univ. of California Berkeley\nCOMMENT\t*> \\author Univ. of Colorado Denver\nCOMMENT\t*> \\author NAG Ltd.\nCOMMENT\t*\nCOMMENT\t*> \\date December 2016\nCOMMENT\t*\nCOMMENT\t*> \\ingroup aux_blas\nCOMMENT\t*\nCOMMENT\t*  =====================================================================\nIDENT\tLOGICAL\nIDENT\tFUNCTION\nIDENT\tLSAME\n(\t(\nIDENT\tCA\n,\t,\nIDENT\tCB\n)\t)\nCOMMENT\t*\nCOMMENT\t*  -- Reference BLAS level1 routine (version 3.1) --\nCOMMENT\t*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --\nCOMMENT\t*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--\nCOMMENT\t*     December 2016\nCOMMENT\t*\nCOMMENT\t*     .. Scalar Arguments ..\nIDENT\tCHARACTER\nIDENT\tCA\n,\t,\nIDENT\tCB\nCOMMENT\t*     ..\nCOMMENT\t*\nCOMMENT\t* =====================================================================\nCOMMENT\t*\nCOMMENT\t*     .. Intrinsic Functions ..\nIDENT\tINTRINSIC\nIDENT\tICHAR\nCOMMENT\t*     ..\nCOMMENT\t*     .. Local Scalars ..\nIDENT\tINTEGER\nIDENT\tINTA\n,\t,\nIDENT\tINTB\n,\t,\nIDENT\tZCODE\nCOMMENT\t*     ..\nCOMMENT\t*\nCOMMENT\t*     Test if the characters are equal\nCOMMENT\t*\nIDENT\tLSAME\n=\t=\nIDENT\tCA\n.\t.\nIDENT\tEQ\n.\t.\nIDENT\tCB\nIDENT\tIF\n(\t(\nIDENT\tLSAME\n)\t)\nIDENT\tRETURN\nCOMMENT\t*\nCOMMENT\t*     Now test for equivalence if both characters are alphabetic.\nCOMMENT\t*\nIDENT\tZCODE\n=\t=\nIDENT\tICHAR\n(\t(\nSTRING\t'Z'\n)\t)\nCOMMENT\t*\nCOMMENT\t*     Use 'Z' rather than 'A' so that ASCII can be detected on Prime\nCOMMENT\t*     machines, on which ICHAR returns a value with bit 8 set.\nCOMMENT\t*     ICHAR('A') on Prime machines returns 193 which is the same as\nCOMMENT\t*     ICHAR('A') on an EBCDIC machine.\nCOMMENT\t*\nIDENT\tINTA\n=\t=\nIDENT\tICHAR\n(\t(\nIDENT\tCA\n)\t)\nIDENT\tINTB\n=\t=\nIDENT\tICHAR\n(\t(\nIDENT\tCB\n)\t)\nCOMMENT\t*\nIDENT\tIF\n(\t(\nIDENT\tZCODE\n.\t.\nIDENT\tEQ\n.\t.\nIDENT\t90\n.\t.\nIDENT\tOR\n.\t.\nIDENT\tZCODE\n.\t.\nIDENT\tEQ\n.\t.\nIDENT\t122\n)\t)\nIDENT\tTHEN\nCOMMENT\t*\nCOMMENT\t*        ASCII is assumed - ZCODE is the ASCII code of either lower or\nCOMMENT\t*        upper case 'Z'.\nCOMMENT\t*\nIDENT\tIF\n(\t(\nIDENT\tINTA\n.\t.\nIDENT\tGE\n.\t.\nIDENT\t97\n.\t.\nIDENT\tAND\n.\t.\nIDENT\tINTA\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t122\n)\t)\nIDENT\tINTA\n=\t=\nIDENT\tINTA\n-\t-\nIDENT\t32\nIDENT\tIF\n(\t(\nIDENT\tINTB\n.\t.\nIDENT\tGE\n.\t.\nIDENT\t97\n.\t.\nIDENT\tAND\n.\t.\nIDENT\tINTB\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t122\n)\t)\nIDENT\tINTB\n=\t=\nIDENT\tINTB\n-\t-\nIDENT\t32\nCOMMENT\t*\nIDENT\tELSE\nIDENT\tIF\n(\t(\nIDENT\tZCODE\n.\t.\nIDENT\tEQ\n.\t.\nIDENT\t233\n.\t.\nIDENT\tOR\n.\t.\nIDENT\tZCODE\n.\t.\nIDENT\tEQ\n.\t.\nIDENT\t169\n)\t)\nIDENT\tTHEN\nCOMMENT\t*\nCOMMENT\t*        EBCDIC is assumed - ZCODE is the EBCDIC code of either lower or\nCOMMENT\t*        upper case 'Z'.\nCOMMENT\t*\nIDENT\tIF\n(\t(\nIDENT\tINTA\n.\t.\nIDENT\tGE\n.\t.\nIDENT\t129\n.\t.\nIDENT\tAND\n.\t.\nIDENT\tINTA\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t137\n.\t.\nIDENT\tOR\n.\t.\n+\t+\nIDENT\tINTA\n.\t.\nIDENT\tGE\n.\t.\nIDENT\t145\n.\t.\nIDENT\tAND\n.\t.\nIDENT\tINTA\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t153\n.\t.\nIDENT\tOR\n.\t.\n+\t+\nIDENT\tINTA\n.\t.\nIDENT\tGE\n.\t.\nIDENT\t162\n.\t.\nIDENT\tAND\n.\t.\nIDENT\tINTA\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t169\n)\t)\nIDENT\tINTA\n=\t=\nIDENT\tINTA\n+\t+\nIDENT\t64\nIDENT\tIF\n(\t(\nIDENT\tINTB\n.\t.\nIDENT\tGE\n.\t.\nIDENT\t129\n.\t.\nIDENT\tAND\n.\t.\nIDENT\tINTB\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t137\n.\t.\nIDENT\tOR\n.\t.\n+\t+\nIDENT\tINTB\n.\t.\nIDENT\tGE\n.\t.\nIDENT\t145\n.\t.\nIDENT\tAND\n.\t.\nIDENT\tINTB\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t153\n.\t.\nIDENT\tOR\n.\t.\n+\t+\nIDENT\tINTB\n.\t.\nIDENT\tGE\n.\t.\nIDENT\t162\n.\t.\nIDENT\tAND\n.\t.\nIDENT\tINTB\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t169\n)\t)\nIDENT\tINTB\n=\t=\nIDENT\tINTB\n+\t+\nIDENT\t64\nCOMMENT\t*\nIDENT\tELSE\nIDENT\tIF\n(\t(\nIDENT\tZCODE\n.\t.\nIDENT\tEQ\n.\t.\nIDENT\t218\n.\t.\nIDENT\tOR\n.\t.\nIDENT\tZCODE\n.\t.\nIDENT\tEQ\n.\t.\nIDENT\t250\n)\t)\nIDENT\tTHEN\nCOMMENT\t*\nCOMMENT\t*        ASCII is assumed, on Prime machines - ZCODE is the ASCII code\nCOMMENT\t*        plus 128 of either lower or upper case 'Z'.\nCOMMENT\t*\nIDENT\tIF\n(\t(\nIDENT\tINTA\n.\t.\nIDENT\tGE\n.\t.\nIDENT\t225\n.\t.\nIDENT\tAND\n.\t.\nIDENT\tINTA\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t250\n)\t)\nIDENT\tINTA\n=\t=\nIDENT\tINTA\n-\t-\nIDENT\t32\nIDENT\tIF\n(\t(\nIDENT\tINTB\n.\t.\nIDENT\tGE\n.\t.\nIDENT\t225\n.\t.\nIDENT\tAND\n.\t.\nIDENT\tINTB\n.\t.\nIDENT\tLE\n.\t.\nIDENT\t250\n)\t)\nIDENT\tINTB\n=\t=\nIDENT\tINTB\n-\t-\nIDENT\t32\nIDENT\tEND\nIDENT\tIF\nIDENT\tLSAME\n=\t=\nIDENT\tINTA\n.\t.\nIDENT\tEQ\n.\t.\nIDENT\tINTB\nCOMMENT\t*\nCOMMENT\t*     RETURN\nCOMMENT\t*\nCOMMENT\t*     End of LSAME\nCOMMENT\t*\nIDENT\tEND\n"
