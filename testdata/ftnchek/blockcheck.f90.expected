PROGRAM             	program
IDENT               	blocks
NEW_LINE            	

COMMENT             	! program to check parsing of block structures
NEW_LINE            	

IDENT               	real
IDENT               	x
NEW_LINE            	

INTEGER             	integer
IDENT               	n
NEW_LINE            	

IDENT               	x
=                   	=
IDENT               	bar
(                   	(
FLOAT               	1.0
)                   	)
NEW_LINE            	

if                  	if
(                   	(
IDENT               	x
>                   	.gt.
INT                 	0
)                   	)
THEN                	then
NEW_LINE            	

CALL                	call
IDENT               	baz
(                   	(
IDENT               	x
)                   	)
NEW_LINE            	

IDENT               	n
=                   	=
IDENT               	int
(                   	(
IDENT               	x
)                   	)
NEW_LINE            	

IDENT               	select
IDENT               	case
(                   	(
IDENT               	n
)                   	)
NEW_LINE            	

IDENT               	case
(                   	(
INT                 	1
)                   	)
NEW_LINE            	

CALL                	call
IDENT               	baz
(                   	(
FLOAT               	2.0
)                   	)
NEW_LINE            	

IDENT               	case
(                   	(
INT                 	2
:                   	:
INT                 	10
)                   	)
NEW_LINE            	

CALL                	call
IDENT               	baz
(                   	(
FLOAT               	3.0
)                   	)
NEW_LINE            	

IDENT               	case
(                   	(
-                   	-
INT                 	1
,                   	,
INT                 	11
:                   	:
INT                 	100
,                   	,
INT                 	300
)                   	)
NEW_LINE            	

CALL                	call
IDENT               	baz
(                   	(
FLOAT               	4.0
)                   	)
NEW_LINE            	

IDENT               	case
IDENT               	default
NEW_LINE            	

CALL                	call
IDENT               	baz
(                   	(
FLOAT               	5.0
)                   	)
NEW_LINE            	

END                 	end
IDENT               	select
NEW_LINE            	

else                	else
NEW_LINE            	

IDENT               	k
=                   	=
INT                 	0
NEW_LINE            	

IDENT               	loop1
:                   	:
DO                  	do
IDENT               	i
=                   	=
INT                 	1
,                   	,
INT                 	100
NEW_LINE            	

IDENT               	loop2
:                   	:
DO                  	do
IDENT               	j
=                   	=
INT                 	1
,                   	,
INT                 	10
NEW_LINE            	

IDENT               	write
(                   	(
*                   	*
,                   	,
*                   	*
)                   	)
IDENT               	i
,                   	,
IDENT               	j
,                   	,
IDENT               	i
*                   	*
IDENT               	j
NEW_LINE            	

if                  	if
(                   	(
IDENT               	i
==                  	.eq.
INT                 	50
)                   	)
IDENT               	exit
IDENT               	loop1
NEW_LINE            	

IDENT               	k
=                   	=
IDENT               	k
+                   	+
IDENT               	j
NEW_LINE            	

if                  	if
(                   	(
IDENT               	k
==                  	.eq.
INT                 	50
)                   	)
IDENT               	cycle
IDENT               	loop2
NEW_LINE            	

END                 	end
DO                  	do
IDENT               	loop2
NEW_LINE            	

IDENT               	write
(                   	(
*                   	*
,                   	,
*                   	*
)                   	)
IDENT               	k
*                   	*
IDENT               	i
                    	**
INT                 	2
NEW_LINE            	

ENDDO               	enddo
IDENT               	loop1
NEW_LINE            	

IDENT               	case2
:                   	:
IDENT               	select
IDENT               	case
(                   	(
IDENT               	n
)                   	)
NEW_LINE            	

IDENT               	case
(                   	(
INT                 	1
)                   	)
IDENT               	case2
NEW_LINE            	

CALL                	call
IDENT               	baz
(                   	(
FLOAT               	2.0
)                   	)
NEW_LINE            	

IDENT               	case
(                   	(
INT                 	2
:                   	:
INT                 	10
)                   	)
IDENT               	case2
NEW_LINE            	

CALL                	call
IDENT               	baz
(                   	(
FLOAT               	3.0
)                   	)
NEW_LINE            	

IDENT               	case
(                   	(
-                   	-
INT                 	1
,                   	,
INT                 	11
:                   	:
INT                 	100
,                   	,
INT                 	300
)                   	)
IDENT               	case2
NEW_LINE            	

CALL                	call
IDENT               	baz
(                   	(
FLOAT               	4.0
)                   	)
NEW_LINE            	

IDENT               	case
IDENT               	default
IDENT               	case2
NEW_LINE            	

DO                  	do
IDENT               	i
=                   	=
INT                 	1
,                   	,
INT                 	10
NEW_LINE            	

if                  	if
(                   	(
IDENT               	i
=                   	=
=                   	=
INT                 	7
)                   	)
IDENT               	goto
INT                 	200
NEW_LINE            	

CALL                	call
IDENT               	baz
(                   	(
FLOAT               	5.0
)                   	)
NEW_LINE            	

INT                 	200
END                 	end
DO                  	do
NEW_LINE            	

END                 	end
IDENT               	select
IDENT               	case2
NEW_LINE            	

END                 	end
if                  	if
NEW_LINE            	

END                 	end
PROGRAM             	program
IDENT               	blocks
NEW_LINE            	

FUNCTION            	function
IDENT               	bar
(                   	(
IDENT               	c
)                   	)
NEW_LINE            	

IDENT               	real
IDENT               	a
,                   	,
IDENT               	b
,                   	,
IDENT               	c
,                   	,
IDENT               	d
NEW_LINE            	

IDENT               	read
*                   	*
,                   	,
IDENT               	a
NEW_LINE            	

COMMENT             	! This block is from section 8.1.2.3 of the F90 standard, except for
NEW_LINE            	

COMMENT             	! removing space between some keywords
NEW_LINE            	

if                  	if
(                   	(
IDENT               	a
>                   	.gt.
INT                 	0
)                   	)
THEN                	then
NEW_LINE            	

IDENT               	b
=                   	=
IDENT               	c
/                   	/
IDENT               	a
NEW_LINE            	

if                  	if
(                   	(
IDENT               	b
>                   	.gt.
INT                 	0
)                   	)
THEN                	then
NEW_LINE            	

IDENT               	d
=                   	=
FLOAT               	1.0
NEW_LINE            	

IDENT               	endif
NEW_LINE            	

IDENT               	elseif
(                   	(
IDENT               	c
>                   	.gt.
INT                 	0
)                   	)
THEN                	then
NEW_LINE            	

IDENT               	b
=                   	=
IDENT               	a
/                   	/
IDENT               	c
NEW_LINE            	

IDENT               	d
=                   	=
-                   	-
FLOAT               	1.0
NEW_LINE            	

else                	else
NEW_LINE            	

IDENT               	b
=                   	=
IDENT               	abs
(                   	(
IDENT               	max
(                   	(
IDENT               	a
,                   	,
IDENT               	c
)                   	)
)                   	)
NEW_LINE            	

IDENT               	d
=                   	=
INT                 	0
NEW_LINE            	

IDENT               	endif
NEW_LINE            	

IDENT               	bar
=                   	=
IDENT               	d
*                   	*
IDENT               	b
NEW_LINE            	

END                 	end
FUNCTION            	function
IDENT               	bar
NEW_LINE            	

SUBROUTINE          	subroutine
IDENT               	baz
(                   	(
IDENT               	c
)                   	)
NEW_LINE            	

IDENT               	real
IDENT               	a
,                   	,
IDENT               	b
,                   	,
IDENT               	c
,                   	,
IDENT               	d
NEW_LINE            	

IDENT               	read
*                   	*
,                   	,
IDENT               	a
NEW_LINE            	

COMMENT             	! Same as above but with spaces restored and construct names added
NEW_LINE            	

IDENT               	first_if
:                   	:
if                  	if
(                   	(
IDENT               	a
>                   	.gt.
INT                 	0
)                   	)
THEN                	then
NEW_LINE            	

IDENT               	b
=                   	=
IDENT               	c
/                   	/
IDENT               	a
NEW_LINE            	

IDENT               	second_if
:                   	:
if                  	if
(                   	(
IDENT               	b
>                   	.gt.
INT                 	0
)                   	)
THEN                	then
NEW_LINE            	

IDENT               	d
=                   	=
FLOAT               	1.0
NEW_LINE            	

END                 	end
if                  	if
IDENT               	second_if
NEW_LINE            	

else                	else
if                  	if
(                   	(
IDENT               	c
>                   	.gt.
INT                 	0
)                   	)
THEN                	then
IDENT               	first_if
NEW_LINE            	

IDENT               	b
=                   	=
IDENT               	a
/                   	/
IDENT               	c
NEW_LINE            	

IDENT               	d
=                   	=
-                   	-
FLOAT               	1.0
NEW_LINE            	

else                	else
IDENT               	first_if
NEW_LINE            	

IDENT               	b
=                   	=
IDENT               	abs
(                   	(
IDENT               	max
(                   	(
IDENT               	a
,                   	,
IDENT               	c
)                   	)
)                   	)
NEW_LINE            	

IDENT               	d
=                   	=
INT                 	0
NEW_LINE            	

END                 	end
if                  	if
IDENT               	first_if
NEW_LINE            	

IDENT               	print
*                   	*
,                   	,
IDENT               	a
,                   	,
IDENT               	b
,                   	,
IDENT               	c
,                   	,
IDENT               	d
NEW_LINE            	

END                 	end
SUBROUTINE          	subroutine
IDENT               	baz
NEW_LINE            	

NEW_LINE            	

