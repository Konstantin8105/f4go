COMMENT             	**** for old version, "send otqlrat from eispack"
NEW_LINE            	

COMMENT             	** From dana!moler Tue, 1 Sep 87 10:15:40 PDT
NEW_LINE            	

COMMENT             	** New TQLRAT
NEW_LINE            	

SUBROUTINE          	SUBROUTINE
IDENT               	TQLRAT
(                   	(
IDENT               	N
,                   	,
IDENT               	D
,                   	,
IDENT               	E2
,                   	,
IDENT               	IERR
)                   	)
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

INTEGER             	INTEGER
IDENT               	I
,                   	,
IDENT               	J
,                   	,
IDENT               	L
,                   	,
IDENT               	M
,                   	,
IDENT               	N
,                   	,
IDENT               	II
,                   	,
IDENT               	L1
,                   	,
IDENT               	MML
,                   	,
IDENT               	IERR
NEW_LINE            	

IDENT               	DOUBLE
IDENT               	PRECISION
IDENT               	D
(                   	(
IDENT               	N
)                   	)
,                   	,
IDENT               	E2
(                   	(
IDENT               	N
)                   	)
NEW_LINE            	

IDENT               	DOUBLE
IDENT               	PRECISION
IDENT               	B
,                   	,
IDENT               	C
,                   	,
IDENT               	F
,                   	,
IDENT               	G
,                   	,
IDENT               	H
,                   	,
IDENT               	P
,                   	,
IDENT               	R
,                   	,
IDENT               	S
,                   	,
IDENT               	T
,                   	,
IDENT               	EPSLON
,                   	,
IDENT               	PYTHAG
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C     This subroutine is a translation of the Algol procedure tqlrat,
NEW_LINE            	

COMMENT             	C     Algorithm 464, Comm. ACM 16, 689(1973) by Reinsch.
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C     This subroutine finds the eigenvalues of a symmetric
NEW_LINE            	

COMMENT             	C     tridiagonal matrix by the rational QL method.
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C     On input
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C        N is the order of the matrix.
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C        D contains the diagonal elements of the input matrix.
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C        E2 contains the squares of the subdiagonal elements of the
NEW_LINE            	

COMMENT             	C          input matrix in its last N-1 positions.  E2(1) is arbitrary.
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C      On output
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C        D contains the eigenvalues in ascending order.  If an
NEW_LINE            	

COMMENT             	C          error exit is made, the eigenvalues are correct and
NEW_LINE            	

COMMENT             	C          ordered for indices 1,2,...IERR-1, but may not be
NEW_LINE            	

COMMENT             	C          the smallest eigenvalues.
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C        E2 has been destroyed.
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C        IERR is set to
NEW_LINE            	

COMMENT             	C          zero       for normal return,
NEW_LINE            	

COMMENT             	C          J          if the J-th eigenvalue has not been
NEW_LINE            	

COMMENT             	C                     determined after 30 iterations.
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C     Calls PYTHAG for  DSQRT(A*A + B*B) .
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C     Questions and comments should be directed to Burton S. Garbow,
NEW_LINE            	

COMMENT             	C     Mathematics and Computer Science Div, Argonne National Laboratory
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C     This version dated August 1987.
NEW_LINE            	

COMMENT             	C     Modified by C. Moler to fix underflow/overflow difficulties,
NEW_LINE            	

COMMENT             	C     especially on the VAX and other machines where epslon(1.0d0)**2
NEW_LINE            	

COMMENT             	C     nearly underflows.  See the loop involving statement 102 and
NEW_LINE            	

COMMENT             	C     the two statements just before statement 200.
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

COMMENT             	C     ------------------------------------------------------------------
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

IDENT               	IERR
=                   	=
INT                 	0
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	N
==                  	.EQ.
INT                 	1
)                   	)
IDENT               	GO
IDENT               	TO
INT                 	1001
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

DO                  	DO
INT                 	100
IDENT               	I
=                   	=
INT                 	2
,                   	,
IDENT               	N
NEW_LINE            	

INT                 	100
IDENT               	E2
(                   	(
IDENT               	I
-                   	-
INT                 	1
)                   	)
=                   	=
IDENT               	E2
(                   	(
IDENT               	I
)                   	)
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

IDENT               	F
=                   	=
FLOAT               	0.0D0
NEW_LINE            	

IDENT               	T
=                   	=
FLOAT               	0.0D0
NEW_LINE            	

IDENT               	E2
(                   	(
IDENT               	N
)                   	)
=                   	=
FLOAT               	0.0D0
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

DO                  	DO
INT                 	290
IDENT               	L
=                   	=
INT                 	1
,                   	,
IDENT               	N
NEW_LINE            	

IDENT               	J
=                   	=
INT                 	0
NEW_LINE            	

IDENT               	H
=                   	=
IDENT               	DABS
(                   	(
IDENT               	D
(                   	(
IDENT               	L
)                   	)
)                   	)
+                   	+
IDENT               	DSQRT
(                   	(
IDENT               	E2
(                   	(
IDENT               	L
)                   	)
)                   	)
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	T
>                   	.GT.
IDENT               	H
)                   	)
IDENT               	GO
IDENT               	TO
INT                 	105
NEW_LINE            	

IDENT               	T
=                   	=
IDENT               	H
NEW_LINE            	

IDENT               	B
=                   	=
IDENT               	EPSLON
(                   	(
IDENT               	T
)                   	)
NEW_LINE            	

IDENT               	C
=                   	=
IDENT               	B
*                   	*
IDENT               	B
NEW_LINE            	

if                  	if
(                   	(
IDENT               	c
!=                  	.ne.
FLOAT               	0.0d0
)                   	)
IDENT               	go
IDENT               	to
INT                 	105
NEW_LINE            	

COMMENT             	C        Spliting tolerance underflowed.  Look for larger value.
NEW_LINE            	

DO                  	do
INT                 	102
IDENT               	i
=                   	=
IDENT               	l
,                   	,
IDENT               	n
NEW_LINE            	

IDENT               	h
=                   	=
IDENT               	dabs
(                   	(
IDENT               	d
(                   	(
IDENT               	i
)                   	)
)                   	)
+                   	+
IDENT               	dsqrt
(                   	(
IDENT               	e2
(                   	(
IDENT               	i
)                   	)
)                   	)
NEW_LINE            	

if                  	if
(                   	(
IDENT               	h
>                   	.gt.
IDENT               	t
)                   	)
IDENT               	t
=                   	=
IDENT               	h
NEW_LINE            	

INT                 	102
continue            	continue
NEW_LINE            	

IDENT               	b
=                   	=
IDENT               	epslon
(                   	(
IDENT               	t
)                   	)
NEW_LINE            	

IDENT               	c
=                   	=
IDENT               	b
*                   	*
IDENT               	b
NEW_LINE            	

COMMENT             	C     .......... LOOK FOR SMALL SQUARED SUB-DIAGONAL ELEMENT ..........
NEW_LINE            	

INT                 	105
DO                  	DO
INT                 	110
IDENT               	M
=                   	=
IDENT               	L
,                   	,
IDENT               	N
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	E2
(                   	(
IDENT               	M
)                   	)
<=                  	.LE.
IDENT               	C
)                   	)
IDENT               	GO
IDENT               	TO
INT                 	120
NEW_LINE            	

COMMENT             	C     .......... E2(N) IS ALWAYS ZERO, SO THERE IS NO EXIT
NEW_LINE            	

COMMENT             	C                THROUGH THE BOTTOM OF THE LOOP ..........
NEW_LINE            	

INT                 	110
continue            	CONTINUE
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

INT                 	120
if                  	IF
(                   	(
IDENT               	M
==                  	.EQ.
IDENT               	L
)                   	)
IDENT               	GO
IDENT               	TO
INT                 	210
NEW_LINE            	

INT                 	130
if                  	IF
(                   	(
IDENT               	J
==                  	.EQ.
INT                 	30
)                   	)
IDENT               	GO
IDENT               	TO
INT                 	1000
NEW_LINE            	

IDENT               	J
=                   	=
IDENT               	J
+                   	+
INT                 	1
NEW_LINE            	

COMMENT             	C     .......... FORM SHIFT ..........
NEW_LINE            	

IDENT               	L1
=                   	=
IDENT               	L
+                   	+
INT                 	1
NEW_LINE            	

IDENT               	S
=                   	=
IDENT               	DSQRT
(                   	(
IDENT               	E2
(                   	(
IDENT               	L
)                   	)
)                   	)
NEW_LINE            	

IDENT               	G
=                   	=
IDENT               	D
(                   	(
IDENT               	L
)                   	)
NEW_LINE            	

IDENT               	P
=                   	=
(                   	(
IDENT               	D
(                   	(
IDENT               	L1
)                   	)
-                   	-
IDENT               	G
)                   	)
/                   	/
(                   	(
FLOAT               	2.0D0
*                   	*
IDENT               	S
)                   	)
NEW_LINE            	

IDENT               	R
=                   	=
IDENT               	PYTHAG
(                   	(
IDENT               	P
,                   	,
FLOAT               	1.0D0
)                   	)
NEW_LINE            	

IDENT               	D
(                   	(
IDENT               	L
)                   	)
=                   	=
IDENT               	S
/                   	/
(                   	(
IDENT               	P
+                   	+
IDENT               	DSIGN
(                   	(
IDENT               	R
,                   	,
IDENT               	P
)                   	)
)                   	)
NEW_LINE            	

IDENT               	H
=                   	=
IDENT               	G
-                   	-
IDENT               	D
(                   	(
IDENT               	L
)                   	)
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

DO                  	DO
INT                 	140
IDENT               	I
=                   	=
IDENT               	L1
,                   	,
IDENT               	N
NEW_LINE            	

INT                 	140
IDENT               	D
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	D
(                   	(
IDENT               	I
)                   	)
-                   	-
IDENT               	H
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

IDENT               	F
=                   	=
IDENT               	F
+                   	+
IDENT               	H
NEW_LINE            	

COMMENT             	C     .......... RATIONAL QL TRANSFORMATION ..........
NEW_LINE            	

IDENT               	G
=                   	=
IDENT               	D
(                   	(
IDENT               	M
)                   	)
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	G
==                  	.EQ.
FLOAT               	0.0D0
)                   	)
IDENT               	G
=                   	=
IDENT               	B
NEW_LINE            	

IDENT               	H
=                   	=
IDENT               	G
NEW_LINE            	

IDENT               	S
=                   	=
FLOAT               	0.0D0
NEW_LINE            	

IDENT               	MML
=                   	=
IDENT               	M
-                   	-
IDENT               	L
NEW_LINE            	

COMMENT             	C     .......... FOR I=M-1 STEP -1 UNTIL L DO -- ..........
NEW_LINE            	

DO                  	DO
INT                 	200
IDENT               	II
=                   	=
INT                 	1
,                   	,
IDENT               	MML
NEW_LINE            	

IDENT               	I
=                   	=
IDENT               	M
-                   	-
IDENT               	II
NEW_LINE            	

IDENT               	P
=                   	=
IDENT               	G
*                   	*
IDENT               	H
NEW_LINE            	

IDENT               	R
=                   	=
IDENT               	P
+                   	+
IDENT               	E2
(                   	(
IDENT               	I
)                   	)
NEW_LINE            	

IDENT               	E2
(                   	(
IDENT               	I
+                   	+
INT                 	1
)                   	)
=                   	=
IDENT               	S
*                   	*
IDENT               	R
NEW_LINE            	

IDENT               	S
=                   	=
IDENT               	E2
(                   	(
IDENT               	I
)                   	)
/                   	/
IDENT               	R
NEW_LINE            	

IDENT               	D
(                   	(
IDENT               	I
+                   	+
INT                 	1
)                   	)
=                   	=
IDENT               	H
+                   	+
IDENT               	S
*                   	*
(                   	(
IDENT               	H
+                   	+
IDENT               	D
(                   	(
IDENT               	I
)                   	)
)                   	)
NEW_LINE            	

IDENT               	G
=                   	=
IDENT               	D
(                   	(
IDENT               	I
)                   	)
-                   	-
IDENT               	E2
(                   	(
IDENT               	I
)                   	)
/                   	/
IDENT               	G
NEW_LINE            	

COMMENT             	C           Avoid division by zero on next pass
NEW_LINE            	

if                  	if
(                   	(
IDENT               	g
==                  	.eq.
FLOAT               	0.0d0
)                   	)
IDENT               	g
=                   	=
IDENT               	epslon
(                   	(
IDENT               	d
(                   	(
IDENT               	i
)                   	)
)                   	)
NEW_LINE            	

IDENT               	h
=                   	=
IDENT               	g
*                   	*
(                   	(
IDENT               	p
/                   	/
IDENT               	r
)                   	)
NEW_LINE            	

INT                 	200
continue            	CONTINUE
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

IDENT               	E2
(                   	(
IDENT               	L
)                   	)
=                   	=
IDENT               	S
*                   	*
IDENT               	G
NEW_LINE            	

IDENT               	D
(                   	(
IDENT               	L
)                   	)
=                   	=
IDENT               	H
NEW_LINE            	

COMMENT             	C     .......... GUARD AGAINST UNDERFLOW IN CONVERGENCE TEST ..........
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	H
==                  	.EQ.
FLOAT               	0.0D0
)                   	)
IDENT               	GO
IDENT               	TO
INT                 	210
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	DABS
(                   	(
IDENT               	E2
(                   	(
IDENT               	L
)                   	)
)                   	)
<=                  	.LE.
IDENT               	DABS
(                   	(
IDENT               	C
/                   	/
IDENT               	H
)                   	)
)                   	)
IDENT               	GO
IDENT               	TO
INT                 	210
NEW_LINE            	

IDENT               	E2
(                   	(
IDENT               	L
)                   	)
=                   	=
IDENT               	H
*                   	*
IDENT               	E2
(                   	(
IDENT               	L
)                   	)
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	E2
(                   	(
IDENT               	L
)                   	)
!=                  	.NE.
FLOAT               	0.0D0
)                   	)
IDENT               	GO
IDENT               	TO
INT                 	130
NEW_LINE            	

INT                 	210
IDENT               	P
=                   	=
IDENT               	D
(                   	(
IDENT               	L
)                   	)
+                   	+
IDENT               	F
NEW_LINE            	

COMMENT             	C     .......... ORDER EIGENVALUES ..........
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	L
==                  	.EQ.
INT                 	1
)                   	)
IDENT               	GO
IDENT               	TO
INT                 	250
NEW_LINE            	

COMMENT             	C     .......... FOR I=L STEP -1 UNTIL 2 DO -- ..........
NEW_LINE            	

DO                  	DO
INT                 	230
IDENT               	II
=                   	=
INT                 	2
,                   	,
IDENT               	L
NEW_LINE            	

IDENT               	I
=                   	=
IDENT               	L
+                   	+
INT                 	2
-                   	-
IDENT               	II
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	P
>=                  	.GE.
IDENT               	D
(                   	(
IDENT               	I
-                   	-
INT                 	1
)                   	)
)                   	)
IDENT               	GO
IDENT               	TO
INT                 	270
NEW_LINE            	

IDENT               	D
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	D
(                   	(
IDENT               	I
-                   	-
INT                 	1
)                   	)
NEW_LINE            	

INT                 	230
continue            	CONTINUE
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

INT                 	250
IDENT               	I
=                   	=
INT                 	1
NEW_LINE            	

INT                 	270
IDENT               	D
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	P
NEW_LINE            	

INT                 	290
continue            	CONTINUE
NEW_LINE            	

COMMENT             	C
NEW_LINE            	

IDENT               	GO
IDENT               	TO
INT                 	1001
NEW_LINE            	

COMMENT             	C     .......... SET ERROR -- NO CONVERGENCE TO AN
NEW_LINE            	

COMMENT             	C                EIGENVALUE AFTER 30 ITERATIONS ..........
NEW_LINE            	

INT                 	1000
IDENT               	IERR
=                   	=
IDENT               	L
NEW_LINE            	

INT                 	1001
return              	RETURN
NEW_LINE            	

END                 	END
NEW_LINE            	

