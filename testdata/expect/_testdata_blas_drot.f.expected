COMMENT	> \brief \b DROT
COMMENT	*
COMMENT	*  =========== DOCUMENTATION ===========
COMMENT	*
COMMENT	* Online html documentation available at
COMMENT	*            http://www.netlib.org/lapack/explore-html/
COMMENT	*
COMMENT	*  Definition:
COMMENT	*  ===========
COMMENT	*
COMMENT	*       SUBROUTINE DROT(N,DX,INCX,DY,INCY,C,S)
COMMENT	*
COMMENT	*       .. Scalar Arguments ..
COMMENT	*       DOUBLE PRECISION C,S
COMMENT	*       INTEGER INCX,INCY,N
COMMENT	*       ..
COMMENT	*       .. Array Arguments ..
COMMENT	*       DOUBLE PRECISION DX(*),DY(*)
COMMENT	*       ..
COMMENT	*
COMMENT	*
COMMENT	*> \par Purpose:
COMMENT	*  =============
COMMENT	*>
COMMENT	*> \verbatim
COMMENT	*>
COMMENT	*>    DROT applies a plane rotation.
COMMENT	*> \endverbatim
COMMENT	*
COMMENT	*  Arguments:
COMMENT	*  ==========
COMMENT	*
COMMENT	*> \param[in] N
COMMENT	*> \verbatim
COMMENT	*>          N is INTEGER
COMMENT	*>         number of elements in input vector(s)
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[in,out] DX
COMMENT	*> \verbatim
COMMENT	*>          DX is DOUBLE PRECISION array, dimension ( 1 + ( N - 1 )*abs( INCX ) )
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[in] INCX
COMMENT	*> \verbatim
COMMENT	*>          INCX is INTEGER
COMMENT	*>         storage spacing between elements of DX
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[in,out] DY
COMMENT	*> \verbatim
COMMENT	*>          DY is DOUBLE PRECISION array, dimension ( 1 + ( N - 1 )*abs( INCY ) )
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[in] INCY
COMMENT	*> \verbatim
COMMENT	*>          INCY is INTEGER
COMMENT	*>         storage spacing between elements of DY
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[in] C
COMMENT	*> \verbatim
COMMENT	*>          C is DOUBLE PRECISION
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[in] S
COMMENT	*> \verbatim
COMMENT	*>          S is DOUBLE PRECISION
COMMENT	*> \endverbatim
COMMENT	*
COMMENT	*  Authors:
COMMENT	*  ========
COMMENT	*
COMMENT	*> \author Univ. of Tennessee
COMMENT	*> \author Univ. of California Berkeley
COMMENT	*> \author Univ. of Colorado Denver
COMMENT	*> \author NAG Ltd.
COMMENT	*
COMMENT	*> \date November 2017
COMMENT	*
COMMENT	*> \ingroup double_blas_level1
COMMENT	*
COMMENT	*> \par Further Details:
COMMENT	*  =====================
COMMENT	*>
COMMENT	*> \verbatim
COMMENT	*>
COMMENT	*>     jack dongarra, linpack, 3/11/78.
COMMENT	*>     modified 12/3/93, array(1) declarations changed to array(*)
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*  =====================================================================
token(96)	SUBROUTINE
IDENT	DROT
(	(
IDENT	N
,	,
IDENT	DX
,	,
IDENT	INCX
,	,
IDENT	DY
,	,
IDENT	INCY
,	,
IDENT	C
,	,
IDENT	S
)	)
COMMENT	*
COMMENT	*  -- Reference BLAS level1 routine (version 3.8.0) --
COMMENT	*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
COMMENT	*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
COMMENT	*     November 2017
COMMENT	*
COMMENT	*     .. Scalar Arguments ..
IDENT	DOUBLE
IDENT	PRECISION
IDENT	C
,	,
IDENT	S
IDENT	INTEGER
IDENT	INCX
,	,
IDENT	INCY
,	,
IDENT	N
COMMENT	*     ..
COMMENT	*     .. Array Arguments ..
IDENT	DOUBLE
IDENT	PRECISION
IDENT	DX
(	(
*	*)
,	,
IDENT	DY
(	(
*	*)
COMMENT	*     ..
COMMENT	*
COMMENT	*  =====================================================================
COMMENT	*
COMMENT	*     .. Local Scalars ..
IDENT	DOUBLE
IDENT	PRECISION
IDENT	DTEMP
IDENT	INTEGER
IDENT	I
,	,
IDENT	IX
,	,
IDENT	IY
COMMENT	*     ..
IDENT	IF
(	(
IDENT	N
.	.
IDENT	LE
.	.
IDENT	0
)	)
IDENT	RETURN
IDENT	IF
(	(
IDENT	INCX
.	.
IDENT	EQ
.	.
IDENT	1
.	.
IDENT	AND
.	.
IDENT	INCY
.	.
IDENT	EQ
.	.
IDENT	1
)	)
IDENT	THEN
COMMENT	*
COMMENT	*       code for both increments equal to 1
COMMENT	*
IDENT	DO
IDENT	I
=	=
IDENT	1
,	,
IDENT	N
IDENT	DTEMP
=	=
IDENT	C
*	*D
IDENT	X
(	(
IDENT	I
)	)
+	+
IDENT	S
*	*D
IDENT	Y
(	(
IDENT	I
)	)
IDENT	DY
(	(
IDENT	I
)	)
=	=
IDENT	C
*	*D
IDENT	Y
(	(
IDENT	I
)	)
-	-
IDENT	S
*	*D
IDENT	X
(	(
IDENT	I
)	)
IDENT	DX
(	(
IDENT	I
)	)
=	=
IDENT	DTEMP
IDENT	END
IDENT	DO
IDENT	ELSE
COMMENT	*
COMMENT	*       code for unequal increments or equal increments not equal
COMMENT	*         to 1
COMMENT	*
IDENT	IX
=	=
IDENT	1
IDENT	IY
=	=
IDENT	1
IDENT	IF
(	(
IDENT	INCX
.	.
IDENT	LT
.	.
IDENT	0
)	)
IDENT	IX
=	=
(	(
-	-
IDENT	N
+	+
IDENT	1
)	)
*	*I
IDENT	NCX
+	+
IDENT	1
IDENT	IF
(	(
IDENT	INCY
.	.
IDENT	LT
.	.
IDENT	0
)	)
IDENT	IY
=	=
(	(
-	-
IDENT	N
+	+
IDENT	1
)	)
*	*I
IDENT	NCY
+	+
IDENT	1
IDENT	DO
IDENT	I
=	=
IDENT	1
,	,
IDENT	N
IDENT	DTEMP
=	=
IDENT	C
*	*D
IDENT	X
(	(
IDENT	IX
)	)
+	+
IDENT	S
*	*D
IDENT	Y
(	(
IDENT	IY
)	)
IDENT	DY
(	(
IDENT	IY
)	)
=	=
IDENT	C
*	*D
IDENT	Y
(	(
IDENT	IY
)	)
-	-
IDENT	S
*	*D
IDENT	X
(	(
IDENT	IX
)	)
IDENT	DX
(	(
IDENT	IX
)	)
=	=
IDENT	DTEMP
IDENT	IX
=	=
IDENT	IX
+	+
IDENT	INCX
IDENT	IY
=	=
IDENT	IY
+	+
IDENT	INCY
IDENT	END
IDENT	DO
IDENT	END
IDENT	IF
IDENT	RETURN
IDENT	END
