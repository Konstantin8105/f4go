COMMENT	> \brief \b DASUM
COMMENT	*
COMMENT	*  =========== DOCUMENTATION ===========
COMMENT	*
COMMENT	* Online html documentation available at
COMMENT	*            http://www.netlib.org/lapack/explore-html/
COMMENT	*
COMMENT	*  Definition:
COMMENT	*  ===========
COMMENT	*
COMMENT	*       DOUBLE PRECISION FUNCTION DASUM(N,DX,INCX)
COMMENT	*
COMMENT	*       .. Scalar Arguments ..
COMMENT	*       INTEGER INCX,N
COMMENT	*       ..
COMMENT	*       .. Array Arguments ..
COMMENT	*       DOUBLE PRECISION DX(*)
COMMENT	*       ..
COMMENT	*
COMMENT	*
COMMENT	*> \par Purpose:
COMMENT	*  =============
COMMENT	*>
COMMENT	*> \verbatim
COMMENT	*>
COMMENT	*>    DASUM takes the sum of the absolute values.
COMMENT	*> \endverbatim
COMMENT	*
COMMENT	*  Arguments:
COMMENT	*  ==========
COMMENT	*
COMMENT	*> \param[in] N
COMMENT	*> \verbatim
COMMENT	*>          N is INTEGER
COMMENT	*>         number of elements in input vector(s)
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[in] DX
COMMENT	*> \verbatim
COMMENT	*>          DX is DOUBLE PRECISION array, dimension ( 1 + ( N - 1 )*abs( INCX ) )
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[in] INCX
COMMENT	*> \verbatim
COMMENT	*>          INCX is INTEGER
COMMENT	*>         storage spacing between elements of DX
COMMENT	*> \endverbatim
COMMENT	*
COMMENT	*  Authors:
COMMENT	*  ========
COMMENT	*
COMMENT	*> \author Univ. of Tennessee
COMMENT	*> \author Univ. of California Berkeley
COMMENT	*> \author Univ. of Colorado Denver
COMMENT	*> \author NAG Ltd.
COMMENT	*
COMMENT	*> \date November 2017
COMMENT	*
COMMENT	*> \ingroup double_blas_level1
COMMENT	*
COMMENT	*> \par Further Details:
COMMENT	*  =====================
COMMENT	*>
COMMENT	*> \verbatim
COMMENT	*>
COMMENT	*>     jack dongarra, linpack, 3/11/78.
COMMENT	*>     modified 3/93 to return if incx .le. 0.
COMMENT	*>     modified 12/3/93, array(1) declarations changed to array(*)
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*  =====================================================================
IDENT	DOUBLE
IDENT	PRECISION
token(101)	FUNCTION
IDENT	DASUM
(	(
IDENT	N
,	,
IDENT	DX
,	,
IDENT	INCX
)	)
COMMENT	*
COMMENT	*  -- Reference BLAS level1 routine (version 3.8.0) --
COMMENT	*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
COMMENT	*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
COMMENT	*     November 2017
COMMENT	*
COMMENT	*     .. Scalar Arguments ..
token(98)	INTEGER
IDENT	INCX
,	,
IDENT	N
COMMENT	*     ..
COMMENT	*     .. Array Arguments ..
IDENT	DOUBLE
IDENT	PRECISION
IDENT	DX
(	(
*	*
)	)
COMMENT	*     ..
COMMENT	*
COMMENT	*  =====================================================================
COMMENT	*
COMMENT	*     .. Local Scalars ..
IDENT	DOUBLE
IDENT	PRECISION
IDENT	DTEMP
token(98)	INTEGER
IDENT	I
,	,
IDENT	M
,	,
IDENT	MP1
,	,
IDENT	NINCX
COMMENT	*     ..
COMMENT	*     .. Intrinsic Functions ..
IDENT	INTRINSIC
IDENT	DABS
,	,
IDENT	MOD
COMMENT	*     ..
IDENT	DASUM
=	=
IDENT	0
.	.
IDENT	0
IDENT	d0
IDENT	DTEMP
=	=
IDENT	0
.	.
IDENT	0
IDENT	d0
if	IF
(	(
IDENT	N
.	.
IDENT	LE
.	.
IDENT	0
.	.
IDENT	OR
.	.
IDENT	INCX
.	.
IDENT	LE
.	.
IDENT	0
)	)
IDENT	RETURN
if	IF
(	(
IDENT	INCX
.	.
IDENT	EQ
.	.
IDENT	1
)	)
IDENT	THEN
COMMENT	*        code for increment equal to 1
COMMENT	*
COMMENT	*
COMMENT	*        clean-up loop
COMMENT	*
IDENT	M
=	=
IDENT	MOD
(	(
IDENT	N
,	,
IDENT	6
)	)
if	IF
(	(
IDENT	M
.	.
IDENT	NE
.	.
IDENT	0
)	)
IDENT	THEN
IDENT	DO
IDENT	I
=	=
IDENT	1
,	,
IDENT	M
IDENT	DTEMP
=	=
IDENT	DTEMP
+	+
IDENT	DABS
(	(
IDENT	DX
(	(
IDENT	I
)	)
)	)
IDENT	END
IDENT	DO
if	IF
(	(
IDENT	N
.	.
IDENT	LT
.	.
IDENT	6
)	)
IDENT	THEN
IDENT	DASUM
=	=
IDENT	DTEMP
IDENT	RETURN
IDENT	END
if	IF
IDENT	END
if	IF
IDENT	MP1
=	=
IDENT	M
+	+
IDENT	1
IDENT	DO
IDENT	I
=	=
IDENT	MP1
,	,
IDENT	N
,	,
IDENT	6
IDENT	DTEMP
=	=
IDENT	DTEMP
+	+
IDENT	DABS
(	(
IDENT	DX
(	(
IDENT	I
)	)
)	)
+	+
IDENT	DABS
(	(
IDENT	DX
(	(
IDENT	I
+	+
IDENT	1
)	)
)	)
+	+
IDENT	DABS
(	(
IDENT	DX
(	(
IDENT	I
+	+
IDENT	2
)	)
)	)
+	+
IDENT	DABS
(	(
IDENT	DX
(	(
IDENT	I
+	+
IDENT	3
)	)
)	)
+	+
IDENT	DABS
(	(
IDENT	DX
(	(
IDENT	I
+	+
IDENT	4
)	)
)	)
+	+
IDENT	DABS
(	(
IDENT	DX
(	(
IDENT	I
+	+
IDENT	5
)	)
)	)
IDENT	END
IDENT	DO
else	ELSE
COMMENT	*
COMMENT	*        code for increment not equal to 1
COMMENT	*
IDENT	NINCX
=	=
IDENT	N
*	*
IDENT	INCX
IDENT	DO
IDENT	I
=	=
IDENT	1
,	,
IDENT	NINCX
,	,
IDENT	INCX
IDENT	DTEMP
=	=
IDENT	DTEMP
+	+
IDENT	DABS
(	(
IDENT	DX
(	(
IDENT	I
)	)
)	)
IDENT	END
IDENT	DO
IDENT	END
if	IF
IDENT	DASUM
=	=
IDENT	DTEMP
IDENT	RETURN
IDENT	END
