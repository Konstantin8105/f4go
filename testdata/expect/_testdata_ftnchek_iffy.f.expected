token(96)	SUBROUTINE
IDENT	IFFY
(	(
IDENT	USE1
,	,
IDENT	USE2
,	,
IDENT	L
)	)
COMMENT	* Tests parsing & type-checking of various IF forms.
COMMENT	*
IDENT	LOGICAL
IDENT	USE1
,	,
IDENT	USE2
token(98)	INTEGER
IDENT	L
token(98)	INTEGER
IDENT	M
IDENT	REAL
IDENT	X
COMMENT	* this block-if statement is OK
IDENT	IF
(	(
IDENT	USE1
)	)
IDENT	THEN
IDENT	M
=	=
IDENT	1
COMMENT	* else-if statement is OK
IDENT	ELSE
IDENT	IF
(	(
IDENT	USE2
)	)
IDENT	THEN
IDENT	M
=	=
IDENT	2
IDENT	ELSE
IDENT	M
=	=
IDENT	3
IDENT	END
IDENT	IF
COMMENT	* this logical if is OK
IDENT	IF
(	(
IDENT	M
.	.
IDENT	eq
.	.
IDENT	3
)	)
IDENT	L
=	=
IDENT	L
+	+
IDENT	1
COMMENT	* this arithmetic if is OK
IDENT	IF
(	(
IDENT	L
)	)
IDENT	100
,	,
IDENT	100
,	,
IDENT	100
IDENT	100
IDENT	X
=	=
IDENT	L
COMMENT	* this arithmetic if is OK
IDENT	IF
(	(
IDENT	X
)	)
IDENT	150
,	,
IDENT	150
,	,
IDENT	150
IDENT	150
IDENT	CONTINUE
COMMENT	* violate a block if statement
IDENT	IF
(	(
IDENT	L
)	)
IDENT	THEN
IDENT	M
=	=
IDENT	M
+	+
IDENT	1
COMMENT	* violate an elseif statement
IDENT	ELSE
IDENT	IF
(	(
IDENT	M
)	)
IDENT	THEN
IDENT	M
=	=
IDENT	M
+	+
IDENT	2
IDENT	ELSE
IDENT	M
=	=
IDENT	M
+	+
IDENT	3
IDENT	END
IDENT	IF
COMMENT	* violate a logical if statement
IDENT	IF
(	(
IDENT	M
)	)
IDENT	L
=	=
IDENT	L
+	+
IDENT	1
COMMENT	* violate an arithmetic if statement
IDENT	IF
(	(
IDENT	L
.	.
IDENT	EQ
.	.
IDENT	3
)	)
IDENT	200
,	,
IDENT	200
,	,
IDENT	200
IDENT	200
IDENT	CONTINUE
IDENT	END
