COMMENT	> \brief \b ZCOPY
COMMENT	*
COMMENT	*  =========== DOCUMENTATION ===========
COMMENT	*
COMMENT	* Online html documentation available at
COMMENT	*            http://www.netlib.org/lapack/explore-html/
COMMENT	*
COMMENT	*  Definition:
COMMENT	*  ===========
COMMENT	*
COMMENT	*       SUBROUTINE ZCOPY(N,ZX,INCX,ZY,INCY)
COMMENT	*
COMMENT	*       .. Scalar Arguments ..
COMMENT	*       INTEGER INCX,INCY,N
COMMENT	*       ..
COMMENT	*       .. Array Arguments ..
COMMENT	*       COMPLEX*16 ZX(*),ZY(*)
COMMENT	*       ..
COMMENT	*
COMMENT	*
COMMENT	*> \par Purpose:
COMMENT	*  =============
COMMENT	*>
COMMENT	*> \verbatim
COMMENT	*>
COMMENT	*>    ZCOPY copies a vector, x, to a vector, y.
COMMENT	*> \endverbatim
COMMENT	*
COMMENT	*  Arguments:
COMMENT	*  ==========
COMMENT	*
COMMENT	*> \param[in] N
COMMENT	*> \verbatim
COMMENT	*>          N is INTEGER
COMMENT	*>         number of elements in input vector(s)
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[in] ZX
COMMENT	*> \verbatim
COMMENT	*>          ZX is COMPLEX*16 array, dimension ( 1 + ( N - 1 )*abs( INCX ) )
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[in] INCX
COMMENT	*> \verbatim
COMMENT	*>          INCX is INTEGER
COMMENT	*>         storage spacing between elements of ZX
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[out] ZY
COMMENT	*> \verbatim
COMMENT	*>          ZY is COMPLEX*16 array, dimension ( 1 + ( N - 1 )*abs( INCY ) )
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*> \param[in] INCY
COMMENT	*> \verbatim
COMMENT	*>          INCY is INTEGER
COMMENT	*>         storage spacing between elements of ZY
COMMENT	*> \endverbatim
COMMENT	*
COMMENT	*  Authors:
COMMENT	*  ========
COMMENT	*
COMMENT	*> \author Univ. of Tennessee
COMMENT	*> \author Univ. of California Berkeley
COMMENT	*> \author Univ. of Colorado Denver
COMMENT	*> \author NAG Ltd.
COMMENT	*
COMMENT	*> \date November 2017
COMMENT	*
COMMENT	*> \ingroup complex16_blas_level1
COMMENT	*
COMMENT	*> \par Further Details:
COMMENT	*  =====================
COMMENT	*>
COMMENT	*> \verbatim
COMMENT	*>
COMMENT	*>     jack dongarra, linpack, 4/11/78.
COMMENT	*>     modified 12/3/93, array(1) declarations changed to array(*)
COMMENT	*> \endverbatim
COMMENT	*>
COMMENT	*  =====================================================================
token(96)	SUBROUTINE
IDENT	ZCOPY
(	(
IDENT	N
,	,
IDENT	ZX
,	,
IDENT	INCX
,	,
IDENT	ZY
,	,
IDENT	INCY
)	)
COMMENT	*
COMMENT	*  -- Reference BLAS level1 routine (version 3.8.0) --
COMMENT	*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
COMMENT	*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
COMMENT	*     November 2017
COMMENT	*
COMMENT	*     .. Scalar Arguments ..
IDENT	INTEGER
IDENT	INCX
,	,
IDENT	INCY
,	,
IDENT	N
COMMENT	*     ..
COMMENT	*     .. Array Arguments ..
IDENT	COMPLEX
*	*1
IDENT	6
IDENT	ZX
(	(
*	*)
,	,
IDENT	ZY
(	(
*	*)
COMMENT	*     ..
COMMENT	*
COMMENT	*  =====================================================================
COMMENT	*
COMMENT	*     .. Local Scalars ..
IDENT	INTEGER
IDENT	I
,	,
IDENT	IX
,	,
IDENT	IY
COMMENT	*     ..
IDENT	IF
(	(
IDENT	N
.	.
IDENT	LE
.	.
IDENT	0
)	)
IDENT	RETURN
IDENT	IF
(	(
IDENT	INCX
.	.
IDENT	EQ
.	.
IDENT	1
.	.
IDENT	AND
.	.
IDENT	INCY
.	.
IDENT	EQ
.	.
IDENT	1
)	)
IDENT	THEN
COMMENT	*
COMMENT	*        code for both increments equal to 1
COMMENT	*
IDENT	DO
IDENT	I
=	=
IDENT	1
,	,
IDENT	N
IDENT	ZY
(	(
IDENT	I
)	)
=	=
IDENT	ZX
(	(
IDENT	I
)	)
IDENT	END
IDENT	DO
IDENT	ELSE
COMMENT	*
COMMENT	*        code for unequal increments or equal increments
COMMENT	*          not equal to 1
COMMENT	*
IDENT	IX
=	=
IDENT	1
IDENT	IY
=	=
IDENT	1
IDENT	IF
(	(
IDENT	INCX
.	.
IDENT	LT
.	.
IDENT	0
)	)
IDENT	IX
=	=
(	(
-	-
IDENT	N
+	+
IDENT	1
)	)
*	*I
IDENT	NCX
+	+
IDENT	1
IDENT	IF
(	(
IDENT	INCY
.	.
IDENT	LT
.	.
IDENT	0
)	)
IDENT	IY
=	=
(	(
-	-
IDENT	N
+	+
IDENT	1
)	)
*	*I
IDENT	NCY
+	+
IDENT	1
IDENT	DO
IDENT	I
=	=
IDENT	1
,	,
IDENT	N
IDENT	ZY
(	(
IDENT	IY
)	)
=	=
IDENT	ZX
(	(
IDENT	IX
)	)
IDENT	IX
=	=
IDENT	IX
+	+
IDENT	INCX
IDENT	IY
=	=
IDENT	IY
+	+
IDENT	INCY
IDENT	END
IDENT	DO
IDENT	END
IDENT	IF
IDENT	RETURN
IDENT	END
