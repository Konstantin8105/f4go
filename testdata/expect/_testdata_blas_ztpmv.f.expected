COMMENT             	> \brief \b ZTPMV
COMMENT             	*
COMMENT             	*  =========== DOCUMENTATION ===========
COMMENT             	*
COMMENT             	* Online html documentation available at
COMMENT             	*            http://www.netlib.org/lapack/explore-html/
COMMENT             	*
COMMENT             	*  Definition:
COMMENT             	*  ===========
COMMENT             	*
COMMENT             	*       SUBROUTINE ZTPMV(UPLO,TRANS,DIAG,N,AP,X,INCX)
COMMENT             	*
COMMENT             	*       .. Scalar Arguments ..
COMMENT             	*       INTEGER INCX,N
COMMENT             	*       CHARACTER DIAG,TRANS,UPLO
COMMENT             	*       ..
COMMENT             	*       .. Array Arguments ..
COMMENT             	*       COMPLEX*16 AP(*),X(*)
COMMENT             	*       ..
COMMENT             	*
COMMENT             	*
COMMENT             	*> \par Purpose:
COMMENT             	*  =============
COMMENT             	*>
COMMENT             	*> \verbatim
COMMENT             	*>
COMMENT             	*> ZTPMV  performs one of the matrix-vector operations
COMMENT             	*>
COMMENT             	*>    x := A*x,   or   x := A**T*x,   or   x := A**H*x,
COMMENT             	*>
COMMENT             	*> where x is an n element vector and  A is an n by n unit, or non-unit,
COMMENT             	*> upper or lower triangular matrix, supplied in packed form.
COMMENT             	*> \endverbatim
COMMENT             	*
COMMENT             	*  Arguments:
COMMENT             	*  ==========
COMMENT             	*
COMMENT             	*> \param[in] UPLO
COMMENT             	*> \verbatim
COMMENT             	*>          UPLO is CHARACTER*1
COMMENT             	*>           On entry, UPLO specifies whether the matrix is an upper or
COMMENT             	*>           lower triangular matrix as follows:
COMMENT             	*>
COMMENT             	*>              UPLO = 'U' or 'u'   A is an upper triangular matrix.
COMMENT             	*>
COMMENT             	*>              UPLO = 'L' or 'l'   A is a lower triangular matrix.
COMMENT             	*> \endverbatim
COMMENT             	*>
COMMENT             	*> \param[in] TRANS
COMMENT             	*> \verbatim
COMMENT             	*>          TRANS is CHARACTER*1
COMMENT             	*>           On entry, TRANS specifies the operation to be performed as
COMMENT             	*>           follows:
COMMENT             	*>
COMMENT             	*>              TRANS = 'N' or 'n'   x := A*x.
COMMENT             	*>
COMMENT             	*>              TRANS = 'T' or 't'   x := A**T*x.
COMMENT             	*>
COMMENT             	*>              TRANS = 'C' or 'c'   x := A**H*x.
COMMENT             	*> \endverbatim
COMMENT             	*>
COMMENT             	*> \param[in] DIAG
COMMENT             	*> \verbatim
COMMENT             	*>          DIAG is CHARACTER*1
COMMENT             	*>           On entry, DIAG specifies whether or not A is unit
COMMENT             	*>           triangular as follows:
COMMENT             	*>
COMMENT             	*>              DIAG = 'U' or 'u'   A is assumed to be unit triangular.
COMMENT             	*>
COMMENT             	*>              DIAG = 'N' or 'n'   A is not assumed to be unit
COMMENT             	*>                                  triangular.
COMMENT             	*> \endverbatim
COMMENT             	*>
COMMENT             	*> \param[in] N
COMMENT             	*> \verbatim
COMMENT             	*>          N is INTEGER
COMMENT             	*>           On entry, N specifies the order of the matrix A.
COMMENT             	*>           N must be at least zero.
COMMENT             	*> \endverbatim
COMMENT             	*>
COMMENT             	*> \param[in] AP
COMMENT             	*> \verbatim
COMMENT             	*>          AP is COMPLEX*16 array, dimension at least
COMMENT             	*>           ( ( n*( n + 1 ) )/2 ).
COMMENT             	*>           Before entry with  UPLO = 'U' or 'u', the array AP must
COMMENT             	*>           contain the upper triangular matrix packed sequentially,
COMMENT             	*>           column by column, so that AP( 1 ) contains a( 1, 1 ),
COMMENT             	*>           AP( 2 ) and AP( 3 ) contain a( 1, 2 ) and a( 2, 2 )
COMMENT             	*>           respectively, and so on.
COMMENT             	*>           Before entry with UPLO = 'L' or 'l', the array AP must
COMMENT             	*>           contain the lower triangular matrix packed sequentially,
COMMENT             	*>           column by column, so that AP( 1 ) contains a( 1, 1 ),
COMMENT             	*>           AP( 2 ) and AP( 3 ) contain a( 2, 1 ) and a( 3, 1 )
COMMENT             	*>           respectively, and so on.
COMMENT             	*>           Note that when  DIAG = 'U' or 'u', the diagonal elements of
COMMENT             	*>           A are not referenced, but are assumed to be unity.
COMMENT             	*> \endverbatim
COMMENT             	*>
COMMENT             	*> \param[in,out] X
COMMENT             	*> \verbatim
COMMENT             	*>          X is COMPLEX*16 array, dimension at least
COMMENT             	*>           ( 1 + ( n - 1 )*abs( INCX ) ).
COMMENT             	*>           Before entry, the incremented array X must contain the n
COMMENT             	*>           element vector x. On exit, X is overwritten with the
COMMENT             	*>           transformed vector x.
COMMENT             	*> \endverbatim
COMMENT             	*>
COMMENT             	*> \param[in] INCX
COMMENT             	*> \verbatim
COMMENT             	*>          INCX is INTEGER
COMMENT             	*>           On entry, INCX specifies the increment for the elements of
COMMENT             	*>           X. INCX must not be zero.
COMMENT             	*> \endverbatim
COMMENT             	*
COMMENT             	*  Authors:
COMMENT             	*  ========
COMMENT             	*
COMMENT             	*> \author Univ. of Tennessee
COMMENT             	*> \author Univ. of California Berkeley
COMMENT             	*> \author Univ. of Colorado Denver
COMMENT             	*> \author NAG Ltd.
COMMENT             	*
COMMENT             	*> \date December 2016
COMMENT             	*
COMMENT             	*> \ingroup complex16_blas_level2
COMMENT             	*
COMMENT             	*> \par Further Details:
COMMENT             	*  =====================
COMMENT             	*>
COMMENT             	*> \verbatim
COMMENT             	*>
COMMENT             	*>  Level 2 Blas routine.
COMMENT             	*>  The vector and matrix arguments are not referenced when N = 0, or M = 0
COMMENT             	*>
COMMENT             	*>  -- Written on 22-October-1986.
COMMENT             	*>     Jack Dongarra, Argonne National Lab.
COMMENT             	*>     Jeremy Du Croz, Nag Central Office.
COMMENT             	*>     Sven Hammarling, Nag Central Office.
COMMENT             	*>     Richard Hanson, Sandia National Labs.
COMMENT             	*> \endverbatim
COMMENT             	*>
COMMENT             	*  =====================================================================
token(96)           	SUBROUTINE
IDENT               	ZTPMV
(                   	(
IDENT               	UPLO
,                   	,
IDENT               	TRANS
,                   	,
IDENT               	DIAG
,                   	,
IDENT               	N
,                   	,
IDENT               	AP
,                   	,
IDENT               	X
,                   	,
IDENT               	INCX
)                   	)
COMMENT             	*
COMMENT             	*  -- Reference BLAS level2 routine (version 3.7.0) --
COMMENT             	*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
COMMENT             	*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
COMMENT             	*     December 2016
COMMENT             	*
COMMENT             	*     .. Scalar Arguments ..
token(98)           	INTEGER
IDENT               	INCX
,                   	,
IDENT               	N
IDENT               	CHARACTER
IDENT               	DIAG
,                   	,
IDENT               	TRANS
,                   	,
IDENT               	UPLO
COMMENT             	*     ..
COMMENT             	*     .. Array Arguments ..
IDENT               	COMPLEX
*                   	*
IDENT               	16
IDENT               	AP
(                   	(
*                   	*
)                   	)
,                   	,
IDENT               	X
(                   	(
*                   	*
)                   	)
COMMENT             	*     ..
COMMENT             	*
COMMENT             	*  =====================================================================
COMMENT             	*
COMMENT             	*     .. Parameters ..
IDENT               	COMPLEX
*                   	*
IDENT               	16
IDENT               	ZERO
IDENT               	PARAMETER
(                   	(
IDENT               	ZERO
=                   	=
(                   	(
IDENT               	0
.                   	.
IDENT               	0
IDENT               	D
+                   	+
IDENT               	0
,                   	,
IDENT               	0
.                   	.
IDENT               	0
IDENT               	D
+                   	+
IDENT               	0
)                   	)
)                   	)
COMMENT             	*     ..
COMMENT             	*     .. Local Scalars ..
IDENT               	COMPLEX
*                   	*
IDENT               	16
IDENT               	TEMP
token(98)           	INTEGER
IDENT               	I
,                   	,
IDENT               	INFO
,                   	,
IDENT               	IX
,                   	,
IDENT               	J
,                   	,
IDENT               	JX
,                   	,
IDENT               	K
,                   	,
IDENT               	KK
,                   	,
IDENT               	KX
IDENT               	LOGICAL
IDENT               	NOCONJ
,                   	,
IDENT               	NOUNIT
COMMENT             	*     ..
COMMENT             	*     .. External Functions ..
IDENT               	LOGICAL
IDENT               	LSAME
IDENT               	EXTERNAL
IDENT               	LSAME
COMMENT             	*     ..
COMMENT             	*     .. External Subroutines ..
IDENT               	EXTERNAL
IDENT               	XERBLA
COMMENT             	*     ..
COMMENT             	*     .. Intrinsic Functions ..
IDENT               	INTRINSIC
IDENT               	DCONJG
COMMENT             	*     ..
COMMENT             	*
COMMENT             	*     Test the input parameters.
COMMENT             	*
IDENT               	INFO
=                   	=
IDENT               	0
if                  	IF
(                   	(
.                   	.
IDENT               	NOT
.                   	.
IDENT               	LSAME
(                   	(
IDENT               	UPLO
,                   	,
STRING              	'U'
)                   	)
.                   	.
IDENT               	AND
.                   	.
.                   	.
IDENT               	NOT
.                   	.
IDENT               	LSAME
(                   	(
IDENT               	UPLO
,                   	,
STRING              	'L'
)                   	)
)                   	)
IDENT               	THEN
IDENT               	INFO
=                   	=
IDENT               	1
else                	ELSE
if                  	IF
(                   	(
.                   	.
IDENT               	NOT
.                   	.
IDENT               	LSAME
(                   	(
IDENT               	TRANS
,                   	,
STRING              	'N'
)                   	)
.                   	.
IDENT               	AND
.                   	.
.                   	.
IDENT               	NOT
.                   	.
IDENT               	LSAME
(                   	(
IDENT               	TRANS
,                   	,
STRING              	'T'
)                   	)
.                   	.
IDENT               	AND
.                   	.
+                   	+
.                   	.
IDENT               	NOT
.                   	.
IDENT               	LSAME
(                   	(
IDENT               	TRANS
,                   	,
STRING              	'C'
)                   	)
)                   	)
IDENT               	THEN
IDENT               	INFO
=                   	=
IDENT               	2
else                	ELSE
if                  	IF
(                   	(
.                   	.
IDENT               	NOT
.                   	.
IDENT               	LSAME
(                   	(
IDENT               	DIAG
,                   	,
STRING              	'U'
)                   	)
.                   	.
IDENT               	AND
.                   	.
.                   	.
IDENT               	NOT
.                   	.
IDENT               	LSAME
(                   	(
IDENT               	DIAG
,                   	,
STRING              	'N'
)                   	)
)                   	)
IDENT               	THEN
IDENT               	INFO
=                   	=
IDENT               	3
else                	ELSE
if                  	IF
(                   	(
IDENT               	N
.                   	.
IDENT               	LT
.                   	.
IDENT               	0
)                   	)
IDENT               	THEN
IDENT               	INFO
=                   	=
IDENT               	4
else                	ELSE
if                  	IF
(                   	(
IDENT               	INCX
.                   	.
IDENT               	EQ
.                   	.
IDENT               	0
)                   	)
IDENT               	THEN
IDENT               	INFO
=                   	=
IDENT               	7
IDENT               	END
if                  	IF
if                  	IF
(                   	(
IDENT               	INFO
.                   	.
IDENT               	NE
.                   	.
IDENT               	0
)                   	)
IDENT               	THEN
IDENT               	CALL
IDENT               	XERBLA
(                   	(
STRING              	'ZTPMV '
,                   	,
IDENT               	INFO
)                   	)
IDENT               	RETURN
IDENT               	END
if                  	IF
COMMENT             	*
COMMENT             	*     Quick return if possible.
COMMENT             	*
if                  	IF
(                   	(
IDENT               	N
.                   	.
IDENT               	EQ
.                   	.
IDENT               	0
)                   	)
IDENT               	RETURN
COMMENT             	*
IDENT               	NOCONJ
=                   	=
IDENT               	LSAME
(                   	(
IDENT               	TRANS
,                   	,
STRING              	'T'
)                   	)
IDENT               	NOUNIT
=                   	=
IDENT               	LSAME
(                   	(
IDENT               	DIAG
,                   	,
STRING              	'N'
)                   	)
COMMENT             	*
COMMENT             	*     Set up the start point in X if the increment is not unity. This
COMMENT             	*     will be  ( N - 1 )*INCX  too small for descending loops.
COMMENT             	*
if                  	IF
(                   	(
IDENT               	INCX
.                   	.
IDENT               	LE
.                   	.
IDENT               	0
)                   	)
IDENT               	THEN
IDENT               	KX
=                   	=
IDENT               	1
-                   	-
(                   	(
IDENT               	N
-                   	-
IDENT               	1
)                   	)
*                   	*
IDENT               	INCX
else                	ELSE
if                  	IF
(                   	(
IDENT               	INCX
.                   	.
IDENT               	NE
.                   	.
IDENT               	1
)                   	)
IDENT               	THEN
IDENT               	KX
=                   	=
IDENT               	1
IDENT               	END
if                  	IF
COMMENT             	*
COMMENT             	*     Start the operations. In this version the elements of AP are
COMMENT             	*     accessed sequentially with one pass through AP.
COMMENT             	*
if                  	IF
(                   	(
IDENT               	LSAME
(                   	(
IDENT               	TRANS
,                   	,
STRING              	'N'
)                   	)
)                   	)
IDENT               	THEN
COMMENT             	*
COMMENT             	*        Form  x:= A*x.
COMMENT             	*
if                  	IF
(                   	(
IDENT               	LSAME
(                   	(
IDENT               	UPLO
,                   	,
STRING              	'U'
)                   	)
)                   	)
IDENT               	THEN
IDENT               	KK
=                   	=
IDENT               	1
if                  	IF
(                   	(
IDENT               	INCX
.                   	.
IDENT               	EQ
.                   	.
IDENT               	1
)                   	)
IDENT               	THEN
IDENT               	DO
IDENT               	20
IDENT               	J
=                   	=
IDENT               	1
,                   	,
IDENT               	N
if                  	IF
(                   	(
IDENT               	X
(                   	(
IDENT               	J
)                   	)
.                   	.
IDENT               	NE
.                   	.
IDENT               	ZERO
)                   	)
IDENT               	THEN
IDENT               	TEMP
=                   	=
IDENT               	X
(                   	(
IDENT               	J
)                   	)
IDENT               	K
=                   	=
IDENT               	KK
IDENT               	DO
IDENT               	10
IDENT               	I
=                   	=
IDENT               	1
,                   	,
IDENT               	J
-                   	-
IDENT               	1
IDENT               	X
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	X
(                   	(
IDENT               	I
)                   	)
+                   	+
IDENT               	TEMP
*                   	*
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
IDENT               	K
=                   	=
IDENT               	K
+                   	+
IDENT               	1
IDENT               	10
IDENT               	CONTINUE
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	X
(                   	(
IDENT               	J
)                   	)
=                   	=
IDENT               	X
(                   	(
IDENT               	J
)                   	)
*                   	*
IDENT               	AP
(                   	(
IDENT               	KK
+                   	+
IDENT               	J
-                   	-
IDENT               	1
)                   	)
IDENT               	END
if                  	IF
IDENT               	KK
=                   	=
IDENT               	KK
+                   	+
IDENT               	J
IDENT               	20
IDENT               	CONTINUE
else                	ELSE
IDENT               	JX
=                   	=
IDENT               	KX
IDENT               	DO
IDENT               	40
IDENT               	J
=                   	=
IDENT               	1
,                   	,
IDENT               	N
if                  	IF
(                   	(
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
.                   	.
IDENT               	NE
.                   	.
IDENT               	ZERO
)                   	)
IDENT               	THEN
IDENT               	TEMP
=                   	=
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
IDENT               	IX
=                   	=
IDENT               	KX
IDENT               	DO
IDENT               	30
IDENT               	K
=                   	=
IDENT               	KK
,                   	,
IDENT               	KK
+                   	+
IDENT               	J
-                   	-
IDENT               	2
IDENT               	X
(                   	(
IDENT               	IX
)                   	)
=                   	=
IDENT               	X
(                   	(
IDENT               	IX
)                   	)
+                   	+
IDENT               	TEMP
*                   	*
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
IDENT               	IX
=                   	=
IDENT               	IX
+                   	+
IDENT               	INCX
IDENT               	30
IDENT               	CONTINUE
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
=                   	=
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
*                   	*
IDENT               	AP
(                   	(
IDENT               	KK
+                   	+
IDENT               	J
-                   	-
IDENT               	1
)                   	)
IDENT               	END
if                  	IF
IDENT               	JX
=                   	=
IDENT               	JX
+                   	+
IDENT               	INCX
IDENT               	KK
=                   	=
IDENT               	KK
+                   	+
IDENT               	J
IDENT               	40
IDENT               	CONTINUE
IDENT               	END
if                  	IF
else                	ELSE
IDENT               	KK
=                   	=
(                   	(
IDENT               	N
*                   	*
(                   	(
IDENT               	N
+                   	+
IDENT               	1
)                   	)
)                   	)
/                   	/
IDENT               	2
if                  	IF
(                   	(
IDENT               	INCX
.                   	.
IDENT               	EQ
.                   	.
IDENT               	1
)                   	)
IDENT               	THEN
IDENT               	DO
IDENT               	60
IDENT               	J
=                   	=
IDENT               	N
,                   	,
IDENT               	1
,                   	,
-                   	-
IDENT               	1
if                  	IF
(                   	(
IDENT               	X
(                   	(
IDENT               	J
)                   	)
.                   	.
IDENT               	NE
.                   	.
IDENT               	ZERO
)                   	)
IDENT               	THEN
IDENT               	TEMP
=                   	=
IDENT               	X
(                   	(
IDENT               	J
)                   	)
IDENT               	K
=                   	=
IDENT               	KK
IDENT               	DO
IDENT               	50
IDENT               	I
=                   	=
IDENT               	N
,                   	,
IDENT               	J
+                   	+
IDENT               	1
,                   	,
-                   	-
IDENT               	1
IDENT               	X
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	X
(                   	(
IDENT               	I
)                   	)
+                   	+
IDENT               	TEMP
*                   	*
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
IDENT               	K
=                   	=
IDENT               	K
-                   	-
IDENT               	1
IDENT               	50
IDENT               	CONTINUE
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	X
(                   	(
IDENT               	J
)                   	)
=                   	=
IDENT               	X
(                   	(
IDENT               	J
)                   	)
*                   	*
IDENT               	AP
(                   	(
IDENT               	KK
-                   	-
IDENT               	N
+                   	+
IDENT               	J
)                   	)
IDENT               	END
if                  	IF
IDENT               	KK
=                   	=
IDENT               	KK
-                   	-
(                   	(
IDENT               	N
-                   	-
IDENT               	J
+                   	+
IDENT               	1
)                   	)
IDENT               	60
IDENT               	CONTINUE
else                	ELSE
IDENT               	KX
=                   	=
IDENT               	KX
+                   	+
(                   	(
IDENT               	N
-                   	-
IDENT               	1
)                   	)
*                   	*
IDENT               	INCX
IDENT               	JX
=                   	=
IDENT               	KX
IDENT               	DO
IDENT               	80
IDENT               	J
=                   	=
IDENT               	N
,                   	,
IDENT               	1
,                   	,
-                   	-
IDENT               	1
if                  	IF
(                   	(
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
.                   	.
IDENT               	NE
.                   	.
IDENT               	ZERO
)                   	)
IDENT               	THEN
IDENT               	TEMP
=                   	=
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
IDENT               	IX
=                   	=
IDENT               	KX
IDENT               	DO
IDENT               	70
IDENT               	K
=                   	=
IDENT               	KK
,                   	,
IDENT               	KK
-                   	-
(                   	(
IDENT               	N
-                   	-
(                   	(
IDENT               	J
+                   	+
IDENT               	1
)                   	)
)                   	)
,                   	,
-                   	-
IDENT               	1
IDENT               	X
(                   	(
IDENT               	IX
)                   	)
=                   	=
IDENT               	X
(                   	(
IDENT               	IX
)                   	)
+                   	+
IDENT               	TEMP
*                   	*
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
IDENT               	IX
=                   	=
IDENT               	IX
-                   	-
IDENT               	INCX
IDENT               	70
IDENT               	CONTINUE
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
=                   	=
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
*                   	*
IDENT               	AP
(                   	(
IDENT               	KK
-                   	-
IDENT               	N
+                   	+
IDENT               	J
)                   	)
IDENT               	END
if                  	IF
IDENT               	JX
=                   	=
IDENT               	JX
-                   	-
IDENT               	INCX
IDENT               	KK
=                   	=
IDENT               	KK
-                   	-
(                   	(
IDENT               	N
-                   	-
IDENT               	J
+                   	+
IDENT               	1
)                   	)
IDENT               	80
IDENT               	CONTINUE
IDENT               	END
if                  	IF
IDENT               	END
if                  	IF
else                	ELSE
COMMENT             	*
COMMENT             	*        Form  x := A**T*x  or  x := A**H*x.
COMMENT             	*
if                  	IF
(                   	(
IDENT               	LSAME
(                   	(
IDENT               	UPLO
,                   	,
STRING              	'U'
)                   	)
)                   	)
IDENT               	THEN
IDENT               	KK
=                   	=
(                   	(
IDENT               	N
*                   	*
(                   	(
IDENT               	N
+                   	+
IDENT               	1
)                   	)
)                   	)
/                   	/
IDENT               	2
if                  	IF
(                   	(
IDENT               	INCX
.                   	.
IDENT               	EQ
.                   	.
IDENT               	1
)                   	)
IDENT               	THEN
IDENT               	DO
IDENT               	110
IDENT               	J
=                   	=
IDENT               	N
,                   	,
IDENT               	1
,                   	,
-                   	-
IDENT               	1
IDENT               	TEMP
=                   	=
IDENT               	X
(                   	(
IDENT               	J
)                   	)
IDENT               	K
=                   	=
IDENT               	KK
-                   	-
IDENT               	1
if                  	IF
(                   	(
IDENT               	NOCONJ
)                   	)
IDENT               	THEN
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	TEMP
=                   	=
IDENT               	TEMP
*                   	*
IDENT               	AP
(                   	(
IDENT               	KK
)                   	)
IDENT               	DO
IDENT               	90
IDENT               	I
=                   	=
IDENT               	J
-                   	-
IDENT               	1
,                   	,
IDENT               	1
,                   	,
-                   	-
IDENT               	1
IDENT               	TEMP
=                   	=
IDENT               	TEMP
+                   	+
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
*                   	*
IDENT               	X
(                   	(
IDENT               	I
)                   	)
IDENT               	K
=                   	=
IDENT               	K
-                   	-
IDENT               	1
IDENT               	90
IDENT               	CONTINUE
else                	ELSE
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	TEMP
=                   	=
IDENT               	TEMP
*                   	*
IDENT               	DCONJG
(                   	(
IDENT               	AP
(                   	(
IDENT               	KK
)                   	)
)                   	)
IDENT               	DO
IDENT               	100
IDENT               	I
=                   	=
IDENT               	J
-                   	-
IDENT               	1
,                   	,
IDENT               	1
,                   	,
-                   	-
IDENT               	1
IDENT               	TEMP
=                   	=
IDENT               	TEMP
+                   	+
IDENT               	DCONJG
(                   	(
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
)                   	)
*                   	*
IDENT               	X
(                   	(
IDENT               	I
)                   	)
IDENT               	K
=                   	=
IDENT               	K
-                   	-
IDENT               	1
IDENT               	100
IDENT               	CONTINUE
IDENT               	END
if                  	IF
IDENT               	X
(                   	(
IDENT               	J
)                   	)
=                   	=
IDENT               	TEMP
IDENT               	KK
=                   	=
IDENT               	KK
-                   	-
IDENT               	J
IDENT               	110
IDENT               	CONTINUE
else                	ELSE
IDENT               	JX
=                   	=
IDENT               	KX
+                   	+
(                   	(
IDENT               	N
-                   	-
IDENT               	1
)                   	)
*                   	*
IDENT               	INCX
IDENT               	DO
IDENT               	140
IDENT               	J
=                   	=
IDENT               	N
,                   	,
IDENT               	1
,                   	,
-                   	-
IDENT               	1
IDENT               	TEMP
=                   	=
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
IDENT               	IX
=                   	=
IDENT               	JX
if                  	IF
(                   	(
IDENT               	NOCONJ
)                   	)
IDENT               	THEN
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	TEMP
=                   	=
IDENT               	TEMP
*                   	*
IDENT               	AP
(                   	(
IDENT               	KK
)                   	)
IDENT               	DO
IDENT               	120
IDENT               	K
=                   	=
IDENT               	KK
-                   	-
IDENT               	1
,                   	,
IDENT               	KK
-                   	-
IDENT               	J
+                   	+
IDENT               	1
,                   	,
-                   	-
IDENT               	1
IDENT               	IX
=                   	=
IDENT               	IX
-                   	-
IDENT               	INCX
IDENT               	TEMP
=                   	=
IDENT               	TEMP
+                   	+
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
*                   	*
IDENT               	X
(                   	(
IDENT               	IX
)                   	)
IDENT               	120
IDENT               	CONTINUE
else                	ELSE
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	TEMP
=                   	=
IDENT               	TEMP
*                   	*
IDENT               	DCONJG
(                   	(
IDENT               	AP
(                   	(
IDENT               	KK
)                   	)
)                   	)
IDENT               	DO
IDENT               	130
IDENT               	K
=                   	=
IDENT               	KK
-                   	-
IDENT               	1
,                   	,
IDENT               	KK
-                   	-
IDENT               	J
+                   	+
IDENT               	1
,                   	,
-                   	-
IDENT               	1
IDENT               	IX
=                   	=
IDENT               	IX
-                   	-
IDENT               	INCX
IDENT               	TEMP
=                   	=
IDENT               	TEMP
+                   	+
IDENT               	DCONJG
(                   	(
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
)                   	)
*                   	*
IDENT               	X
(                   	(
IDENT               	IX
)                   	)
IDENT               	130
IDENT               	CONTINUE
IDENT               	END
if                  	IF
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
=                   	=
IDENT               	TEMP
IDENT               	JX
=                   	=
IDENT               	JX
-                   	-
IDENT               	INCX
IDENT               	KK
=                   	=
IDENT               	KK
-                   	-
IDENT               	J
IDENT               	140
IDENT               	CONTINUE
IDENT               	END
if                  	IF
else                	ELSE
IDENT               	KK
=                   	=
IDENT               	1
if                  	IF
(                   	(
IDENT               	INCX
.                   	.
IDENT               	EQ
.                   	.
IDENT               	1
)                   	)
IDENT               	THEN
IDENT               	DO
IDENT               	170
IDENT               	J
=                   	=
IDENT               	1
,                   	,
IDENT               	N
IDENT               	TEMP
=                   	=
IDENT               	X
(                   	(
IDENT               	J
)                   	)
IDENT               	K
=                   	=
IDENT               	KK
+                   	+
IDENT               	1
if                  	IF
(                   	(
IDENT               	NOCONJ
)                   	)
IDENT               	THEN
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	TEMP
=                   	=
IDENT               	TEMP
*                   	*
IDENT               	AP
(                   	(
IDENT               	KK
)                   	)
IDENT               	DO
IDENT               	150
IDENT               	I
=                   	=
IDENT               	J
+                   	+
IDENT               	1
,                   	,
IDENT               	N
IDENT               	TEMP
=                   	=
IDENT               	TEMP
+                   	+
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
*                   	*
IDENT               	X
(                   	(
IDENT               	I
)                   	)
IDENT               	K
=                   	=
IDENT               	K
+                   	+
IDENT               	1
IDENT               	150
IDENT               	CONTINUE
else                	ELSE
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	TEMP
=                   	=
IDENT               	TEMP
*                   	*
IDENT               	DCONJG
(                   	(
IDENT               	AP
(                   	(
IDENT               	KK
)                   	)
)                   	)
IDENT               	DO
IDENT               	160
IDENT               	I
=                   	=
IDENT               	J
+                   	+
IDENT               	1
,                   	,
IDENT               	N
IDENT               	TEMP
=                   	=
IDENT               	TEMP
+                   	+
IDENT               	DCONJG
(                   	(
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
)                   	)
*                   	*
IDENT               	X
(                   	(
IDENT               	I
)                   	)
IDENT               	K
=                   	=
IDENT               	K
+                   	+
IDENT               	1
IDENT               	160
IDENT               	CONTINUE
IDENT               	END
if                  	IF
IDENT               	X
(                   	(
IDENT               	J
)                   	)
=                   	=
IDENT               	TEMP
IDENT               	KK
=                   	=
IDENT               	KK
+                   	+
(                   	(
IDENT               	N
-                   	-
IDENT               	J
+                   	+
IDENT               	1
)                   	)
IDENT               	170
IDENT               	CONTINUE
else                	ELSE
IDENT               	JX
=                   	=
IDENT               	KX
IDENT               	DO
IDENT               	200
IDENT               	J
=                   	=
IDENT               	1
,                   	,
IDENT               	N
IDENT               	TEMP
=                   	=
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
IDENT               	IX
=                   	=
IDENT               	JX
if                  	IF
(                   	(
IDENT               	NOCONJ
)                   	)
IDENT               	THEN
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	TEMP
=                   	=
IDENT               	TEMP
*                   	*
IDENT               	AP
(                   	(
IDENT               	KK
)                   	)
IDENT               	DO
IDENT               	180
IDENT               	K
=                   	=
IDENT               	KK
+                   	+
IDENT               	1
,                   	,
IDENT               	KK
+                   	+
IDENT               	N
-                   	-
IDENT               	J
IDENT               	IX
=                   	=
IDENT               	IX
+                   	+
IDENT               	INCX
IDENT               	TEMP
=                   	=
IDENT               	TEMP
+                   	+
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
*                   	*
IDENT               	X
(                   	(
IDENT               	IX
)                   	)
IDENT               	180
IDENT               	CONTINUE
else                	ELSE
if                  	IF
(                   	(
IDENT               	NOUNIT
)                   	)
IDENT               	TEMP
=                   	=
IDENT               	TEMP
*                   	*
IDENT               	DCONJG
(                   	(
IDENT               	AP
(                   	(
IDENT               	KK
)                   	)
)                   	)
IDENT               	DO
IDENT               	190
IDENT               	K
=                   	=
IDENT               	KK
+                   	+
IDENT               	1
,                   	,
IDENT               	KK
+                   	+
IDENT               	N
-                   	-
IDENT               	J
IDENT               	IX
=                   	=
IDENT               	IX
+                   	+
IDENT               	INCX
IDENT               	TEMP
=                   	=
IDENT               	TEMP
+                   	+
IDENT               	DCONJG
(                   	(
IDENT               	AP
(                   	(
IDENT               	K
)                   	)
)                   	)
*                   	*
IDENT               	X
(                   	(
IDENT               	IX
)                   	)
IDENT               	190
IDENT               	CONTINUE
IDENT               	END
if                  	IF
IDENT               	X
(                   	(
IDENT               	JX
)                   	)
=                   	=
IDENT               	TEMP
IDENT               	JX
=                   	=
IDENT               	JX
+                   	+
IDENT               	INCX
IDENT               	KK
=                   	=
IDENT               	KK
+                   	+
(                   	(
IDENT               	N
-                   	-
IDENT               	J
+                   	+
IDENT               	1
)                   	)
IDENT               	200
IDENT               	CONTINUE
IDENT               	END
if                  	IF
IDENT               	END
if                  	IF
IDENT               	END
if                  	IF
COMMENT             	*
IDENT               	RETURN
COMMENT             	*
COMMENT             	*     End of ZTPMV .
COMMENT             	*
IDENT               	END
