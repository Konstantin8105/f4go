COMMENT             	*> \brief \b DROTG
COMMENT             	*
COMMENT             	*  =========== DOCUMENTATION ===========
COMMENT             	*
COMMENT             	* Online html documentation available at
COMMENT             	*            http://www.netlib.org/lapack/explore-html/
COMMENT             	*
COMMENT             	*  Definition:
COMMENT             	*  ===========
COMMENT             	*
COMMENT             	*       SUBROUTINE DROTG(DA,DB,C,S)
COMMENT             	*
COMMENT             	*       .. Scalar Arguments ..
COMMENT             	*       DOUBLE PRECISION C,DA,DB,S
COMMENT             	*       ..
COMMENT             	*
COMMENT             	*
COMMENT             	*> \par Purpose:
COMMENT             	*  =============
COMMENT             	*>
COMMENT             	*> \verbatim
COMMENT             	*>
COMMENT             	*>    DROTG construct givens plane rotation.
COMMENT             	*> \endverbatim
COMMENT             	*
COMMENT             	*  Arguments:
COMMENT             	*  ==========
COMMENT             	*
COMMENT             	*> \param[in] DA
COMMENT             	*> \verbatim
COMMENT             	*>          DA is DOUBLE PRECISION
COMMENT             	*> \endverbatim
COMMENT             	*>
COMMENT             	*> \param[in] DB
COMMENT             	*> \verbatim
COMMENT             	*>          DB is DOUBLE PRECISION
COMMENT             	*> \endverbatim
COMMENT             	*>
COMMENT             	*> \param[out] C
COMMENT             	*> \verbatim
COMMENT             	*>          C is DOUBLE PRECISION
COMMENT             	*> \endverbatim
COMMENT             	*>
COMMENT             	*> \param[out] S
COMMENT             	*> \verbatim
COMMENT             	*>          S is DOUBLE PRECISION
COMMENT             	*> \endverbatim
COMMENT             	*
COMMENT             	*  Authors:
COMMENT             	*  ========
COMMENT             	*
COMMENT             	*> \author Univ. of Tennessee
COMMENT             	*> \author Univ. of California Berkeley
COMMENT             	*> \author Univ. of Colorado Denver
COMMENT             	*> \author NAG Ltd.
COMMENT             	*
COMMENT             	*> \date November 2017
COMMENT             	*
COMMENT             	*> \ingroup double_blas_level1
COMMENT             	*
COMMENT             	*> \par Further Details:
COMMENT             	*  =====================
COMMENT             	*>
COMMENT             	*> \verbatim
COMMENT             	*>
COMMENT             	*>     jack dongarra, linpack, 3/11/78.
COMMENT             	*> \endverbatim
COMMENT             	*>
COMMENT             	*  =====================================================================
token(96)           	SUBROUTINE
IDENT               	DROTG
(                   	(
IDENT               	DA
,                   	,
IDENT               	DB
,                   	,
IDENT               	C
,                   	,
IDENT               	S
)                   	)
COMMENT             	*
COMMENT             	*  -- Reference BLAS level1 routine (version 3.8.0) --
COMMENT             	*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
COMMENT             	*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
COMMENT             	*     November 2017
COMMENT             	*
COMMENT             	*     .. Scalar Arguments ..
IDENT               	DOUBLE
IDENT               	PRECISION
IDENT               	C
,                   	,
IDENT               	DA
,                   	,
IDENT               	DB
,                   	,
IDENT               	S
COMMENT             	*     ..
COMMENT             	*
COMMENT             	*  =====================================================================
COMMENT             	*
COMMENT             	*     .. Local Scalars ..
IDENT               	DOUBLE
IDENT               	PRECISION
IDENT               	R
,                   	,
IDENT               	ROE
,                   	,
IDENT               	SCALE
,                   	,
IDENT               	Z
COMMENT             	*     ..
COMMENT             	*     .. Intrinsic Functions ..
IDENT               	INTRINSIC
IDENT               	DABS
,                   	,
IDENT               	DSIGN
,                   	,
IDENT               	DSQRT
COMMENT             	*     ..
IDENT               	ROE
=                   	=
IDENT               	DB
if                  	IF
(                   	(
IDENT               	DABS
(                   	(
IDENT               	DA
)                   	)
>                   	.GT.
IDENT               	DABS
(                   	(
IDENT               	DB
)                   	)
)                   	)
IDENT               	ROE
=                   	=
IDENT               	DA
IDENT               	SCALE
=                   	=
IDENT               	DABS
(                   	(
IDENT               	DA
)                   	)
+                   	+
IDENT               	DABS
(                   	(
IDENT               	DB
)                   	)
if                  	IF
(                   	(
IDENT               	SCALE
==                  	.EQ.
FLOAT               	0.0
IDENT               	d0
)                   	)
IDENT               	THEN
IDENT               	C
=                   	=
FLOAT               	1.0
IDENT               	d0
IDENT               	S
=                   	=
FLOAT               	0.0
IDENT               	d0
IDENT               	R
=                   	=
FLOAT               	0.0
IDENT               	d0
IDENT               	Z
=                   	=
FLOAT               	0.0
IDENT               	d0
else                	ELSE
IDENT               	R
=                   	=
IDENT               	SCALE
*                   	*
IDENT               	DSQRT
(                   	(
(                   	(
IDENT               	DA
/                   	/
IDENT               	SCALE
)                   	)
token(95)           	**
INT                 	2
+                   	+
(                   	(
IDENT               	DB
/                   	/
IDENT               	SCALE
)                   	)
token(95)           	**
INT                 	2
)                   	)
IDENT               	R
=                   	=
IDENT               	DSIGN
(                   	(
FLOAT               	1.0
IDENT               	d0
,                   	,
IDENT               	ROE
)                   	)
*                   	*
IDENT               	R
IDENT               	C
=                   	=
IDENT               	DA
/                   	/
IDENT               	R
IDENT               	S
=                   	=
IDENT               	DB
/                   	/
IDENT               	R
IDENT               	Z
=                   	=
FLOAT               	1.0
IDENT               	d0
if                  	IF
(                   	(
IDENT               	DABS
(                   	(
IDENT               	DA
)                   	)
>                   	.GT.
IDENT               	DABS
(                   	(
IDENT               	DB
)                   	)
)                   	)
IDENT               	Z
=                   	=
IDENT               	S
if                  	IF
(                   	(
IDENT               	DABS
(                   	(
IDENT               	DB
)                   	)
>=                  	.GE.
IDENT               	DABS
(                   	(
IDENT               	DA
)                   	)
&&                  	.AND.
IDENT               	C
!=                  	.NE.
FLOAT               	0.0
IDENT               	d0
)                   	)
IDENT               	Z
=                   	=
FLOAT               	1.0
IDENT               	d0
/                   	/
IDENT               	C
token(102)          	END
if                  	IF
IDENT               	DA
=                   	=
IDENT               	R
IDENT               	DB
=                   	=
IDENT               	Z
IDENT               	RETURN
token(102)          	END
