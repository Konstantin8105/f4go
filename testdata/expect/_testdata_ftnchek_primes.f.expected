token(100)          	implicit
IDENT               	none
token(98)           	integer
IDENT               	M
,                   	,
IDENT               	numprimes
token(98)           	integer
IDENT               	MAXPRIMES
IDENT               	parameter
(                   	(
IDENT               	MAXPRIMES
=                   	=
INT                 	10000
)                   	)
token(98)           	integer
IDENT               	primes
(                   	(
IDENT               	MAXPRIMES
)                   	)
token(98)           	integer
IDENT               	makeprimes
IDENT               	write
(                   	(
*                   	*
,                   	,
*                   	*
)                   	)
STRING              	'Enter ceiling on primes'
IDENT               	read
(                   	(
*                   	*
,                   	,
*                   	*
)                   	)
IDENT               	M
COMMENT             	C Get list of primes up to M
IDENT               	numprimes
=                   	=
IDENT               	makeprimes
(                   	(
IDENT               	primes
,                   	,
IDENT               	M
,                   	,
IDENT               	MAXPRIMES
)                   	)
COMMENT             	C Print the primes
IDENT               	call
IDENT               	printarray
(                   	(
STRING              	'Primes'
,                   	,
IDENT               	primes
,                   	,
IDENT               	numprimes
)                   	)
token(102)          	end
token(96)           	subroutine
IDENT               	printarray
(                   	(
IDENT               	heading
,                   	,
IDENT               	a
,                   	,
IDENT               	n
)                   	)
token(100)          	implicit
IDENT               	none
IDENT               	character
*                   	*
(                   	(
*                   	*
)                   	)
IDENT               	heading
token(98)           	integer
IDENT               	i
,                   	,
IDENT               	n
,                   	,
IDENT               	a
(                   	(
INT                 	1
)                   	)
IDENT               	write
(                   	(
*                   	*
,                   	,
*                   	*
)                   	)
IDENT               	heading
token(103)          	do
IDENT               	i
=                   	=
INT                 	1
,                   	,
IDENT               	n
IDENT               	write
(                   	(
*                   	*
,                   	,
STRING              	'(1x,i4,1x,i5)'
)                   	)
IDENT               	i
,                   	,
IDENT               	a
(                   	(
IDENT               	i
)                   	)
token(102)          	end
token(103)          	do
token(102)          	end
token(98)           	integer
token(101)          	function
IDENT               	makeprimes
(                   	(
IDENT               	p
,                   	,
IDENT               	n
,                   	,
IDENT               	max
)                   	)
COMMENT             	C computes array of primes less than or equal to n.
COMMENT             	C note: max = limit of number of primes, must be at least 1.
token(100)          	implicit
IDENT               	none
token(98)           	integer
IDENT               	n
,                   	,
IDENT               	max
,                   	,
IDENT               	p
(                   	(
IDENT               	max
)                   	)
token(98)           	integer
IDENT               	i
,                   	,
IDENT               	numprimes
IDENT               	logical
IDENT               	divisible
COMMENT             	C put the even prime into the list
IDENT               	numprimes
=                   	=
INT                 	1
IDENT               	p
(                   	(
IDENT               	numprimes
)                   	)
=                   	=
INT                 	2
COMMENT             	C loop thru odd integers, testing if divisible
token(103)          	do
IDENT               	i
=                   	=
INT                 	3
,                   	,
IDENT               	n
,                   	,
INT                 	2
if                  	if
(                   	(
!=                  	.not.
IDENT               	divisible
(                   	(
IDENT               	i
,                   	,
IDENT               	p
,                   	,
IDENT               	numprimes
)                   	)
)                   	)
IDENT               	then
IDENT               	numprimes
=                   	=
IDENT               	numprimes
+                   	+
INT                 	1
if                  	if
(                   	(
IDENT               	numprimes
>                   	.gt.
IDENT               	max
)                   	)
IDENT               	then
IDENT               	write
(                   	(
*                   	*
,                   	,
*                   	*
)                   	)
STRING              	'Ran out of space at p='
,                   	,
IDENT               	i
IDENT               	stop
else                	else
IDENT               	p
(                   	(
IDENT               	numprimes
)                   	)
=                   	=
IDENT               	i
token(102)          	end
if                  	if
token(102)          	end
if                  	if
token(102)          	end
token(103)          	do
COMMENT             	C return number of primes found
IDENT               	makeprimes
=                   	=
IDENT               	numprimes
IDENT               	return
token(102)          	end
IDENT               	logical
token(101)          	function
IDENT               	divisible
(                   	(
IDENT               	n
,                   	,
IDENT               	p
,                   	,
IDENT               	nump
)                   	)
token(100)          	implicit
IDENT               	none
token(98)           	integer
IDENT               	n
,                   	,
IDENT               	nump
,                   	,
IDENT               	p
(                   	(
INT                 	1
)                   	)
token(98)           	integer
IDENT               	i
token(103)          	do
IDENT               	i
=                   	=
INT                 	1
,                   	,
IDENT               	nump
if                  	if
(                   	(
IDENT               	mod
(                   	(
IDENT               	n
,                   	,
IDENT               	p
(                   	(
IDENT               	i
)                   	)
)                   	)
==                  	.eq.
INT                 	0
)                   	)
IDENT               	then
IDENT               	divisible
=                   	=
IDENT               	.true.
IDENT               	return
token(102)          	end
if                  	if
token(102)          	end
token(103)          	do
IDENT               	divisible
=                   	=
.                   	.
IDENT               	e
.                   	.
IDENT               	return
token(102)          	end
