

             MODIFICATIONS TO BOSOR5

1. October 4, 1995

In response to an email message from Kent Tacey at DTMB, who wanted to
run a BOSOR5 case with more than 99 segments, I modified the following
fortran source libraries:

          modify,      input,       getsegs,       assemble

The modifications were related to the number of characters in the variable
CN.  Formerly there were either one or two; now there are either one or
two or three. A typical modification follows:
-------------------------------------------------------
C BEG OCT 1995
C     CHARACTER *28 VNAME, CN*2, FNAME*9
      CHARACTER *28 VNAME, CN*3, FNAME*9
C END OCT 1995
      CHARACTER*4 ANSOUT,CHARAC
      LOGICAL ANSL1
C
      IOUT = 17
      INFILE = 5
      REWIND IFILE3
      CALL DATUM(IFILE3,580,1,1,NSEG,REALL,CHARAC,10,0,1)
C
      N = NSEG + 1
      IF(N.GE.10) THEN
C BEG OCT 1995
         IF (N.LE.99) WRITE(CN,'(I2)') N
         IF (N.GT.99) WRITE(CN,'(I3)') N
C END OCT 1995
      ELSE
         WRITE(CN,'(I1)') N
      ENDIF
----------------------------------------------------------------



2. NOVEMBER, 1995: A BOSOR5 user discovered that he could not easily
provide input for a tori-ellipsoidal tank, that is a toroidal tank with
ellipsoidal end domes. It turns out that the coding for GEOM4, NST = 4
was incomplete. A new input datum was required if NST = 4 and ALPHAT is
greater than XMAX (see p P9 BOSOR5 user's manual). The new input datum
prompt and "help" paragraph explains this BOSOR5 update:
------------------------------------------------------------------
582.1 Do you have a complete tori-ellipsoidal dome?
582.2
      If you answer "Y", BOSOR5 reflects the right-hand portion,
      input for which is depicted on p.P9 of the BOSOR5 user's manual,
      over to the left side of the centerline of the dome, and the
      total arc length of the segment becomes double that of the
      segment you just provided geometry input data for. Note that
      you are permitted to answer "Y" only if the dome is closed at
      its apex.

      NOTE: INPUT FOR BOUNDARY AND/OR JUNCTION CONDITIONS MAY BE
            VERY TRICKY DUE TO POSSIBLE AUTOMATED MODIFICATION OF THE
            NUMBER OF NODAL POINTS IN THE "DOUBLED" TORI-ELLIPSOIDAL
            SEGMENT. IT IS BEST IF YOU ALWAYS USE:
                     NMESH  between 51 and 97 (preferably 97)
            FOR THE NUMBER OF NODES IN THIS SEGMENT. THEN THE END OF
            THE NEW "DOUBLED" SEGMENT WILL AUTOMATICALLY HAVE THE
            SAME NODAL POINT NUMBER, NMESH, THAT YOU JUST SPECIFIED
            IN YOUR INPUT SESSION.  IF YOU ALWAYS USE NMESH = 97,
            THERE WILL PROBABLY ALWAYS BE ENOUGH NODES IN THE "DOUBLED"
            SEGMENT TO AVOID ELEMENT LOCKING.
      NOTE2:WHEN USING CALLOUTS, ALWAYS USE r (NOT z) AND FOR A CLOSED
            TOROID FOLLOW THE INPUT SCHEME LISTED IN THE EXAMPLE IN
            THE FILE ...bosor5/doc/bosor5.news, ITEM 2, DATED NOV 1995.
            YOU MUST USE THE END POINT "r" VALUES APPROPRIATE FOR THE
            "DOUBLED" SEGMENTS (SEE EXAMPLE BELOW).

------------------------------------------------------------------------
The following libraries were modified: GEOM, QUESTIONS . The following
"link" commands were used to update the absolute elements: LINKBREADVAX,
LINKMODIFY, LINKINPUT .  The prompt file, PROMPT3.DAT, was updated by
addition of the material listed above between the dashed lines.
*******************************************************************
NOTE: THIS ITEM NEEDED CORRECTION. SEE NEWS ITEM NO. 6 BELOW
*******************************************************************

3. January, 1996
A BOSOR5 user ran into a very mysterious bug that occurred on the
SUN4 and SOLARIS versions of BOSOR5 but on no other versions. While the
exact cause of the bug was never found (perhaps a compiler bug??) it
seems to have gone away with the following modifications to the
ARRAYS, HOOKUP, and READIT libraries:
---------------------------------------------------------
ARRAYS modifications:
------------------------
C=DECK      ARRAYSLIB
C
C  THIS IS THE ARRAYS LIBRARY  (SOURCE FILE)

   (lines skipped to save space)

C BEG JAN 1996 (QSAVE NOT STORED HERE ANYMORE: GAVE TROUBLE.)
C /I2+2*NSEG/-2614-/-3*I2-/-3*I2-/
C /---IW----/JUNCTB/PSFIX-/PSVAR-/
C /--B(N9)--/B(N10)/B(N11)/B(N12)/
C N9       N10    N11    N12    N13D
C
C     FOLLOWING QUANTITIES OVERLAY STARTING AT N13D. THEY ARE FOR DETER-
C     MINANT CALCULATION...(This is the most important change...)
C
C                                /2*IMAXB/--2*M3-/--M3--/
C                                /--TP---/--DI---/-DIAG-/
C                                /DB(N2D)/DB(N3D)/B(N14)/
C                               N2D     N3D     N14
C END JAN 1996

   (lines skipped to save space)

C   N13D  DB(N13D) WORKING SPACE REQUIRED IN FACTOR AND SOLVE

   (lines skipped to save space)

      N13 = N12 + 3*I2
      N13D = N13/2 + 1
C BEG JAN 1996
C     N2D = IMAXB + (M3+1)/2 + 1
C     N3D = N2D + IMAXB
C     N14 = N1 + M3 + 2*IMAXB + 2*M3 +1
      N2D = N13D
      N3D = N2D + IMAXB
      N14 = N13 + 2*IMAXB + 2*M3 + 1
C END JAN 1996
      IL = 14*I2 + IPRE*NTOT

   (lines skipped to save space)

C 202 FORMAT(13I9)
      CALL STABIL(I,I5I,B(IARG1),NSEG,IBUCK,B(IPOS),B(IPOS1),B(IPOS2),
     1 B(IPOS3),B(IPOS4),DB(1),B(N9),B(N1),B(IARG2),B(N10),IROWCB,
     2 B(IARG3),IMAXB,B(IPOS5),B(IPOS6),RHF,RHFIX,RM,D1B,D2B,NCONDB,
C BEG JAN 1996
C    3 DB(N13D),B(N4))
     3          B(N4))
C END JAN 1996
   90 ITOTL = ITOTL + I5I
  100 CONTINUE

   (lines skipped to save space)

  170 CONTINUE
      RETURN
C     RETURN CARD NOT NEEDED IN CDC VERSION
      END
C=DECK      STABIL
      SUBROUTINE STABIL(ISEG,L5,HS,NSEG,IBUCK,COEF,CSHEAR,CMASS,PR,BG,
     1     AS,FW,      FLOC,FFX,FFIX,IROWC,FTYPE,IMAX,PSVAR,PSFIX,RHF,
C BEG JAN 1996
C    2 RHFIX,RM,D1,D2,NCOND,QSAVE,RING)
     2 RHFIX,RM,D1,D2,NCOND,      RING)
C END JAN 1996
C
C     CALLED FROM ASTAB, WHICH IS CALLED FROM ARRAYS, WHICH IS CALLED

   (lines skipped to save space)
---------------------------------------------------------------------
HOOKUP modifications:
------------------------
C=DECK      HOOKUPLIB
C
C  THIS IS THE HOOKUP LIBRARY (SOURCE FILE)

   (lines skipped to save space)

C     CALCULATE	IMAX
      IMAX1 = (160000 - 8*IROW)/4
      IMAX2 = (160000 - 24*I222-IPRE*NTOT-5*IROW-2*NSEG-3614)/2
      IF (NSUB.GT.5) IMAX1 = (160000 - 8*IROW - 4*IROW - 4)/4
C BEG JAN 1996
C     IF (NSUB.GT.5)IMAX2=(160000-31*I222-IROW-IPRE*NTOT-2*NSEG-8614)/2
      IF (NSUB.GT.5)
     1 IMAX2=(160000-31*I222-4*IROW-IPRE*NTOT-2*NSEG-7114)/4
C END JAN 1996
      IMAX = MIN0(IMAX1,IMAX2)
---------------------------------------------------------------------
READIT modifications:
------------------------
C=DECK      READITLIB
C
C  THIS IS THE READIT LIBRARY (SOURCE FILE)

   (lines skipped to save space)

      L1 = 5*M2 + 2*IMAXP + 24*I2 + 2*NSEG + IPRE*NTOT + 2614 + 1000
      L2 = 8*M2 + 4*IMAXP
      L3 = 40*I2 + IPRE*NTOT + 2*M2 + 2*NSEG
      KCR = 7
      IF (ICREEP.EQ.0) KCR = 4
      L4 = 28*I2 + KCR*ILONG + 3*LBEGIN + ITSTOR + ITHSTR + IZSTOR
     1  + IPRE*NTOT
C BEG JAN 1996
C     L5 = 2*IMAXB + M3 + 31*I2 + 2614 + 6000 + 2*NSEG + IPRE*NTOT
      L5 = 4*IMAXB + 4*M3 + 31*I2 + 2614 + 4500 + 2*NSEG + IPRE*NTOT
C END JAN 1996
      L6 = 4*IMAXB + 4*M3
      L7 = 4*IMAXB + 8*M3 + 4*M3 + 4
--------------------------------------------------------------------

NOTE: The most significant modifications were those in HOOKUP and ARRAYS.
The overlaid working space:
C                                /2*IMAXB/--2*M3-/--M3--/
C                                /--TP---/--DI---/-DIAG-/
C                                /DB(N2D)/DB(N3D)/B(N14)/
C                               N2D     N3D     N14

was moved over from the position "N2" to the new position "N13D". This
means that the working space L5 (identified in READIT) gets bigger so
that the maximum block size for buckling, IMAXB, gets smaller. Now,
L5 will usually be the biggest number rather than L7, which was formerly
the case. The various working spaces required by BOSOR5 are defined in
the following list:

L1  53423 WORKING SPACE REQUIRED IN APREB (PREBUCKLING EQUATIONS SET UP)
L2  75928 WORKING SPACE REQUIRED IN SOLN (PREBUCKLING EQUATIONS SOLVED)
L3  20020 WORKING SPACE REQUIRED IN PRE22 (PREBUCKLING DISPLACEMENTS,
          STRESSES, STRAINS CALC.)
L4  21686 WORKING SPACE REQUIRED IN PRE33 (PLASTIC AND CREEP STRAINS,
          YIELD STRESS CALCULATED)
L5 160000 WORKING SPACE REQUIRED IN ARRAYS (STABILITY EQUATIONS SET UP)
L6 138912 WORKING SPACE REQUIRED IN ARRAYS (STABILITY DETERMINANT CALCULATED
          IF INDIC=-2)
L7 150852 WORKING SPACE REQUIRED IN BUCKLE (EIGENVALUES CALCULATED)
-------------------------------------------------------------------------


5. July, 1996
The following libraries: GEOM, PLAST, PRE33, SEGMNT, WALL, were temporarily
modified to permit more than 100 nodal points in a given segment. A test
run was made on "elliptor2" (closed torus with ellipsoidal cross section)
but the result with twice as many nodal points per segment were the same
as those obtained previously. Therefore, did not make this change permanent.
The "experimental" libraries, GEOM, PLAST, PRE33, SEGMNT, WALL, have the
extension ".MORNOD".


6. July, 1996
This represents a correction to News Item 3 (November, 1995). It turned out
that the method of "reflection" described in News Item No. 3 did not work
because of element "locking" in segments with crowns or valleys and with
meridional curvature that varies within a segment. Now the user must use
additional segments, (two segments per dome, one going up, the other coming
down). The new input datum called for in the PROMPT3.DAT file is as follows:
---------------------------------------------------------------------------
584.1 Is this segment an INNER part of the toroid?
584.2 
      By "INNER" is meant the part of the toroid with negative
      Gaussian curvature, the portion of the toroid with radius
      less than the radius, ALPHAT, to the center of the toroid.

      The OUTER part of the toroid is the part with positive
      Gaussian curvature, the portion of the toroid with radius
      greater than the radius, ALPHAT, to the center of the toroid.
----------------------------------------------------------------------------
This new input datum replaces that with the prompting index 582 in News
Item 3. The libraries GEOM and QUESTIONS were modified.




7. Multisegment shells with initial axisymmetric sinusoidal imperfections

14 August, 1996

Dear Customer:

This is in reply to your email message, a copy of which follows.

---------------------------- Customer's  email --------------------------
I am editing an existing BOSOR5 input deck (.ALL deck enclosed) to include
shell imperfections in segments 3 and 4.  The added input lines appear to be
processed OK but the subsequent shell reference input keep on echoing "$ R(I) 
= radial coordinate of Ith callout, r( 1)" and "$ R(I)  = radial coordinate of
Ith callout, r( 2)" in the .DOC file (enclosed).

Would you please examine the two enclosed decks (mcdon.ALL and mcdon.DOC)
and tell me what's wrong?
------------------------------------------------------------------------------

--------------------- Dave Bushnell's Reply ----------------------------------
BOSOR4/BOSOR5 present difficulties in the case of multisegment shells with
imperfections. The difficulty arises from the fact that in the coding of
SUBROUTINE IMPERF (copy below), BOSOR4/BOSOR5 assume that the sinusoidal
imperfection is a function of arc length S along the meridian, with the
origin of the arc length S being at the beginning of the first segment and
running thru the end of the last segment. 

You wanted a sinusoidal imperfection only in segments 3 and 4. At the
beginning of segment 3 the arc length (called S in BOSOR4/5) has some
value. Therefore, the sinusoidal imperfection has some non-zero value in
general. I should have asked the user if he/she wanted the origin of the
imperfection to start at the beginning of the segment rather than just
assume that it starts at the beginning of Seg. 1, but I did not and I
don't want to add another question at this time. (Even if the origin of
arc length S for the purpose of computation of the imperfection started at
the beginning of some interior segment rather than at the beginning of
Seg. 1, you would still have a problem with the imperfection having in
general a non-zero value at the end of that segment). 

The fact that the imperfection has, in general, some non-zero values at
the beginning and at the end of the segment in which it occurs give rise
to problems in BOSOR4/BOSOR5 of identifying just where the segment ends
are in (R,Z) space for the purpose of the user's providing appropriate R
or Z callouts for thickness, temperature, pressure, etc. BOSOR4/BOSOR5
bombs with messages printed to the *.ERR file if the user provides R or Z
values for end point callouts that are not close enough to where
BOSOR4/BOSOR5 thinks these end points are in (R,Z) space, and the
BOSOR4/BOSOR5 "opinion" unfortunately includes the effect of any initial
imperfection. Without some kind of independent computation on the side,
(which might be very difficult), the user does not know in advance where
the (R,Z) end points are of an interior segment with an initial
axisymmetric sinusoidal imperfection. 

What I did with your input data is the following:

1. I tried to run your *.ALL file. (I ran BOSORREAD). It bombed, just the
way it did when you ran it. When it bombed it left a file called *.ERR,
where * stands for the name I gave the case. (I called the case "mcdon"). 

2. I searched the mcdon.ERR file for the first occurrence of an error
message concerning improper user identification of the end points of the
first segment with a nonzero imperfection. You can do this by searching
for the string "W0" (that's a w-zero, not w-oh) in the mcdon.ERR file.
BOSOR4/5 prints out the following error message in the mcdon.ERR file: 

------------------ fragment of mcdon.ERR file -------------------------------
 Imperfection geometry....                                                      
                                                                                
$IMP   = indicator for imperfection (0=none, 1=some)=
  There is no more help. Do your best.
$IMP   = indicator for imperfection (0=none, 1=some)=
                                                  1
$ITYPE = indicator (1 or 2 or 3) for type of imperfection=
                                                  2
$W0    = amplitude of pure sinusoidal imperfection=
                                           0.2000000    
$WLNGTH= half-wavelength of pure sinusoidal imperfection=
                                            6.250000    
$NTYPEZ= control (1 or 3) for reference surface location=
                                                                                
 NTYPEZ = 1 means that the distance from the shell wall                         
 leftmost surface to the reference surface varies along                         
 the meridian.  By "leftmost" we mean as we face in the                         
 direction of increasing meridional arc length, s.  See                         
 the figure (a) on p. P13.                                                      
                                                                                
 NTYPEZ = 3 means that the distance from  the  leftmost                         
 surface of the wall to the reference surface is const-                         
 ant as we proceed along the meridian, s.                                       
                                                                                
$NTYPEZ= control (1 or 3) for reference surface location=
                                                  1
$NZVALU= number of meridional callouts for ref. surf.=
                                                  2
$NTYPE = control for meaning of callout (2=z, 3=r)=
                                                  3
$R(I)  = radial coordinate of Ith callout, r( 1)=
                                            13.77950    
$R(I)  = radial coordinate of Ith callout, r( 2)=
                                            24.90310    


 INPUT DATA ERROR...
   CALLOUT =      1.3780E+01
   IT SHOULD BE BETWEEN      1.3825E+01 AND     2.4929E+01
   OR EQUAL TO ONE OF THEM.


$R(I)  = radial coordinate of Ith callout, r( 1)=
                                           0.0000000E+00
$R(I)  = radial coordinate of Ith callout, r( 2)=
                                           0.0000000E+00
             .
             .
             .
    (it just keeps going and going and going....)
------------------------------------------------------------------------------

3. I updated the mcdon.ALL file by changing the beginning R-callout in
Seg. 3 from 13.780 to 13.825 and the end R-callout in Seg. 3 from 24.9031
to 24.929. NOTE: DO NOT CHANGE THE GEOMETRY INPUT, ONLY THE CALLOUTS. 

4. I ran the updated mcdon.ALL file (BOSORREAD) again. Of course, it
bombed again because there are other callouts in both Segments 3 and 4
that have not yet been updated to account for the effect of the initial
imperfection. The first occurrence of the callout error message this time
was as follows: 

------------------ fragment of mcdon.ERR file, 2nd try ---------------------
                                                                                
$NPSTAT = number of meridional callouts for pressure=
                                                  2
                                                                                
 Next provide meridional callout points for pressure...                         
                                                                                
$NTYPE = control for meaning of loading callout (2=z, 3=r)=
                                                  2
$Z(I)  = axial coordinate of Ith loading callout, z( 1)=
                                           -44.12790    
$Z(I)  = axial coordinate of Ith loading callout, z( 2)=
                                           -40.72710    


 INPUT DATA ERROR...
   CALLOUT =     -4.0727E+01
   IT SHOULD BE BETWEEN     -4.4277E+01 AND    -4.0811E+01
   OR EQUAL TO ONE OF THEM.


$Z(I)  = axial coordinate of Ith loading callout, z( 1)=
                                            1.000000    
$Z(I)  = axial coordinate of Ith loading callout, z( 2)=
                                            1.000000    
                     .
                     .
                     .
    (It just keeps going and going and going...)
----------------------------------------------------------------------------

5. Again I edited the mcdon.ALL file, this time changing all the beginning
Z callouts to -44.277 and the ending Z callouts to -40.811 in Segment 3.

6. Again I ran BOSORREAD. This time it bombed in Segment 4, and I had to
change all beginning Z callouts to 3.5599 and ending Z callouts to 8.7720.

7. The final run I tried bombed in Segment 8 because I apparently no
longer allow specification of "1" for a callout type in my version of
BOSOR5, which you provided for temperature callouts in Segment 8. (You
probably have an old version of BOSOR5). 

8. The final version of input for the two segments with the initial
imperfections, Segments 3 and 4, after all corrections in Segments
3 and 4 follows (not included here to save space).


NOTE: When you change the mcdon.ALL file as listed above, you get
discontinuities in the shell meridian between the end of Segment 2 and the
beginning of Segment 3 and between the end of Segment 4 and the beginning
of Segment 5. This is because the amplitude of the initial imperfection is
nonzero at the ends of segments 3 and 4. Please inspect the fragment of
the mcdon.OUT file at the end of this message to see what I mean. These
meridional discontinuities might give rise to significant phony stress
concentrations because of the resulting discontinuities in meridional
moment. 

The relevant portion of SUBROUTINE IMPERF, where the new (imperfect) 
geometry of each shell segment is computed, follows. You are free to change
the logic any way you wish to in order to make BOSOR5 easier to use at
mcdon for imperfect multisegment shells. However, keep careful notes/files
of what you do so that should you ever get a new BOSOR4/BOSOR5 you can
again update my (unchanged) versions of IMPERF to resurrect whatever
modifications you might have made.

-------------------- part of the GEOM source library ----------------------
C=DECK      IMPERF
      SUBROUTINE IMPERF(NFLAG,I5,R,RD,C1,C2,C1D,S,SEND,ISEG,DS,Z)
C     CALLED FROM GEOM, WHOSE TRACE IS GEOMTY, READIT, MAIN.
C     CALCULATES GEOMETRICAL PARAMETERS R, RD, C1, C2, C1D ( SEE GEOM
C     FOR DEFINITIONS) FOR IMPERFECT SHELL
      DOUBLE PRECISION W,PHI,FL
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSOUT
      CHARACTER*4 CHARAC
      LOGICAL ANSL1
      DIMENSION R(*),RD(*),C1(*),C2(*),C1D(*),S(*),WTOT(100)
      DIMENSION W(20),PHI(20),FL(20)
      DIMENSION DS(*) ,Z(*)
C BEG DEC 1992
      DIMENSION WTRIG(20),FLTRIG(20)
C END DEC 1992
C     ITYPE = TYPE OF IMPERFECTION
      CALL DATUM(IFILE2,134,1,2,ITYPE,REALL,CHARAC,IOUT,0,1)
C BEG DEC 1992
      IF (ITYPE.NE.1.AND.ITYPE.NE.2.AND.ITYPE.NE.3) THEN
       WRITE(6,*)' ITYPE MUST BE EITHER 1 OR 2 OR 3'
C END DEC 1992
       CALL ERREX
      ENDIF
C
   10 FORMAT(10I6)
   20 FORMAT(6E12.8)
      PI = 3.1415927
C BEG DEC 1992
      GO TO (30,130,170,179),ITYPE
C END DEC 1992
   30 CONTINUE
C
C     RANDOM SERIES OF SINUSOIDAL IMPERFECTIONS
C
      IF (NFLAG.EQ.1) GO TO 60
      CALL DATUM(IFILE2,135,1,1,INT,FM   ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,136,1,1,INT,C    ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,137,1,1,INT,FLMIN,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,138,1,1,INT,FLMAX,CHARAC,IOUT,0,1)
      M = FM
      CALL URNDM(0,M,W)
      CALL URNDM(0,M,PHI)
      CALL URNDM(0,M,FL)
      WSUM = 0.0
      DO 40 I=1,M
      WSUM = WSUM + W(I)
      PHI(I) = PHI(I)*2.*PI
      FL(I) = FL(I)*(FLMAX-FLMIN) + FLMIN
   40 CONTINUE
      DO 50 I=1,M
   50 W(I) = W(I)*C/WSUM
   60 CONTINUE
      WRITE (IFILE4,70)ISEG
   70 FORMAT(// 47H COMPONENTS OF RANDOM IMPERFECTION FOR SEGMENT  I3//)
      WRITE (IFILE4,80)
   80 FORMAT(//67H    COMPONENT     AMPLITUDE      HALF-WAVELENGTH    PH
     1ASE(RADIANS)               //)
      DO 90 I=1,M
   90 WRITE (IFILE4,100)I,W(I),FL(I),PHI(I)
  100 FORMAT(I9,1P3E18.8)
      DO 120 I=1,I5
      WTOT(I) = 0.0
      ARC = SEND + S(I)
      WD = 0.0
      WDD = 0.0
      WDDD = 0.0
      DO 110 J=1,M
      ARG = PI/FL(J)
      SI = SIN(ARG*ARC + PHI(J))
      CO = COS(ARG*ARC + PHI(J))
      WTOT(I) = WTOT(I) + W(J)*SI
      WD = WD + W(J)*ARG*CO
      WDD = WDD - W(J)*ARG**2*SI
      WDDD = WDDD - W(J)*ARG**3*CO
  110 CONTINUE
      FACT = 1./SQRT(1.+ WD**2)
      SPHI = R(I)*C2(I)
      CPHI = RD(I)
      FK1 = C1(I)
      R(I) = R(I) + WTOT(I)*SPHI
      RD(I) = FACT*(CPHI + WD*SPHI)
      C1(I) = FK1-WDD
      C1D(I) = C1D(I)-WDDD
      IF (R(I).GT.0.) C2(I) = FACT*(SPHI - CPHI*WD)/R(I)
  120 CONTINUE
      NFLAG = 0
      GO TO 220
C
C     IMPERFECTION IS SIMPLE SINE WAVE
C
  130 CONTINUE
      SEND0 = 0.
      IF (NFLAG.EQ.1) GO TO 140
      CALL DATUM(IFILE2,139,1,1,INT,W0    ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,140,1,2,INT,WLNGTH,CHARAC,IOUT,0,1)
C     SEND0 = WLNGTH/2.
      SEND0 = 0.
  140 ARG = PI/WLNGTH
      WRITE (IFILE4,150)ISEG,W0,WLNGTH
  150 FORMAT(//34H SINUSOIDAL IMPERFECTION, SEGMENT  I3,13H AMPLITUDE =
     1 1PE12.4,19H HALF-WAVELENGTH =  1PE12.4    //)
      DO 160 I=1,I5
      ARC = S(I) + SEND - SEND0
C BEG JAN 1991
C  FOR ORIGIN OF ARC LENGTH AT THE BEGINNING OF THE CURRENT SEGMENT...
C     ARC = S(I) - S(1)
C END JAN 1991
      SI = SIN(ARG*ARC)
      CO = COS(ARG*ARC)
      WTOT(I) = W0*SI
      WD = W0*ARG*CO
      WDD = - W0*ARG**2*SI
      WDDD = -W0*ARG**3*CO
      FACT = 1./SQRT(1.+ WD**2)
      SPHI = R(I)*C2(I)
      CPHI = RD(I)
      FK1 = C1(I)
      R(I) = R(I) + WTOT(I)*SPHI
      Z(I) = Z(I) - WTOT(I)*CPHI
      RD(I) = FACT*(CPHI + WD*SPHI)
      C1(I) = FK1 - WDD*FACT**3
      C1D(I) = C1D(I) - WDDD*FACT**2 + 3.*WD*WDD*WDD/FACT**2
      IF (R(I).GT.0.) C2(I) = FACT*(SPHI - CPHI*WD)/R(I)
      DS(I) = DS(I)/FACT
  160 CONTINUE
      NFLAG = 0
      GO TO 220
  170 CONTINUE
C BEG DEC 1992
C     DETERMINISTIC SUM OF SINUSOIDAL TERMS (1 DEC 1992)
------------------------------------------------------------------------------


NOTE: I must caution you that there is a chance that BOSOR4/BOSOR5 may
"lock up" for imperfect shells with rather large amplitude or short
wavelength imperfections. BOSOR4/BOSOR5 doesn't work properly if there are
very significant changes in meridional curvature within a given segment.

(See the BOSOR4/BOSOR5 handout entitled "BOSOR4 (or 5) PACKET - BOSOR4
BOSOR5 WARNING")

Of course, I tested BOSOR4/BOSOR5 for axisymmetrically imperfect
cylindrical shells under axial compression, and everything seemed to work
okay as long as the imperfection amplitude was less than a wall thickness
and the meridional wavelength of the imperfection was at least as long as
that of the axisymmetric buckling mode of the perfect shell. You should
take BOSOR4/BOSOR5 imperfection stuff with a grain of salt, I think, both
for the "element locking" reason and because an axisymmetric sinusoidal
initial imperfection is rather strange and unlikely to occur in practice. 

If you have any questions, please send email.

-------------------- fragment of mcdon.OUT file resulting from --------------
-------------------- "corrected" mcdon.ALL file. -------------------------

         (omitted to save space).




8. September, 2000: See item 9 in .../bosor4/doc/bosor4.news,
which describes possible changes to get BOSOR5 plots working
on an SGI workstation with IRIX 6.** operating system.


9. August, 2005
The libraries, geom.src and questions.src were modified, as well
as the prompting file, PROMPT2.DAT.

SUBROUTINE IMPERF was modified to permit input of nodal-point-by-
nodal-point imperfection shapes with amplitude factors. The PROMPT2.DAT
file was appended to as follows:

---------------------------------------------------------------------
505.0 
      Please supply the next imperfection mode.

      For each mode you will be asked to provide a nodal-point-by-
      nodal-point input for an imperfection shape, WSHAPE.
      The actual imperfection mode is the product AMPIMP*WSHAPE,
      where AMPIMP is a multiplier (amplitude) and WSHAPE is
      an imperfection shape. You must provide several values
      of WSHAPE, corresponding to a range of nodes in the
      shell segment. You will be able to supply up to 20
      imperfection modes.

      You will be asked to provide the following:
      1. Amplitude of the imperfection, AMPIMP(IMODE)
      2. Starting nodal point number, ISTART(IMODE), for WSHAPE
      3. Number, NUMB(IMODE), of values of WSHAPE you will provide
      4. Normalized imperfection normal displacement, WSHAPE(inode,IMODE)
         at NUMB(IMODE) contiguous nodal points in the segment

510.1 Imperfection multiplier, AMPIMP(IMODE)
510.2 
      For each imperfection mode,
      the imperfection is the product, AMPIMP*(imperfection shape),
      where "imperfection shape" is to be provided by the user for
      a range of nodal points in the Segment. "imperfection shape" is
      called WSHAPE. The total imperfection in the segment is the
      sum of the imperfection modes.

514.1 Starting nodal point number, ISTART(IMODE)
514.2 
      The normalized imperfection normal displacement, WSHAPE, must
      be provided by the user for a range of nodal points in the
      segment. ISTART (minimum = 1, maximum = number of nodal points
      in the segment minus 5) is the nodal point number in the
      segment where the axisymmetric imperfection begins.

516.1 Number of values of WSHAPE to be read, NUMB(IMODE)
516.2 
      NUMB(IMODE) must be less than or equal to:
      (number of nodal points in the segment - ISTART + 1
      If WSHAPE is to be read for part of the segment, then a value
      must be read for every nodal point in that part of the segment.
      NUMB should almost certainly be greater than 5. NUMB might be
      a rather large number, such as 75 or 90, making this input
      somewhat tedious, especially if you want to supply several
      imperfection modes.

520.1 Imperfection normal displacement (normalized), WSHAPE
520.2 
      The actual imperfection at the ith nodal point in the segment
      is given by the product: AMPIMP*WSHAPE.

522.1 Do you want to provide any more imperfection modes?
522.2 
      You are allowed to provide up to 20 modes. Please decide
      ahead of time the proper sign for each value of the amplitude,
      AMPIMP(IMODE) of the mode shape, WSHAPE.

560.1 DUMMY ENTRY
--------------------------------------------------------------------



The GEOM.SRC library was modified as follows:
---------------------------------------------------------------------
C=DECK      IMPERF
      SUBROUTINE IMPERF(NFLAG,I5,R,RD,C1,C2,C1D,S,SEND,ISEG,DS,Z)
C     CALLED FROM GEOM, WHOSE TRACE IS GEOMTY, READIT, MAIN.
C     CALCULATES GEOMETRICAL PARAMETERS R, RD, C1, C2, C1D ( SEE GEOM
C     FOR DEFINITIONS) FOR IMPERFECT SHELL
      DOUBLE PRECISION W,PHI,FL
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSOUT
      CHARACTER*4 CHARAC
      LOGICAL ANSL1
C BEG AUG 2005
      DIMENSION AMPIMP(20),ISTART(20),NUMB(20),WSHAPE(100,20)
C END AUG 2005
      DIMENSION R(*),RD(*),C1(*),C2(*),C1D(*),S(*),WTOT(100)
      DIMENSION W(20),PHI(20),FL(20)
      DIMENSION DS(*) ,Z(*)
C BEG DEC 1992
      DIMENSION WTRIG(20),FLTRIG(20)
C END DEC 1992
C     ITYPE = TYPE OF IMPERFECTION
      CALL DATUM(IFILE2,134,1,2,ITYPE,REALL,CHARAC,IOUT,0,1)
C BEG DEC 1992
C BEG AUG 2005
      IF (ITYPE.NE.1.AND.ITYPE.NE.2.AND.ITYPE.NE.3
     1                             .AND.ITYPE.NE.4) THEN
       WRITE(6,*)' ITYPE MUST BE EITHER 1 OR 2 OR 3 OR 4'
C END AUG 2005
C END DEC 1992
       CALL ERREX
      ENDIF

  (many lines skipped to save space)

      C1D(I) = C1D(I)-WDDD    
      IF (R(I).GT.0.) C2(I) = FACT*(SPHI - CPHI*WD)/R(I)  
177   CONTINUE    
      NFLAG = 0   
      GO TO 220
179   CONTINUE
C END DEC 1992
C     READ NORMAL DEFLECTION MODES W AND OBTAIN NEW VALUES FOR R,RD,C1,C2
C
C BEG AUG 2005
C23456789012345678901234567890123456789012345678901234567890123456789012
      IF (NFLAG.EQ.1) GO TO 183
      IMODE = 1
1792  CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,505,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,510,1,2,INT,AMPIMP(IMODE),CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,514,1,2,ISTART(IMODE),REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,516,1,2,NUMB(IMODE),REALL,CHARAC,IOUT,0,1)
      WRITE(IFILE4,'(/,A,I3,/,A,I3,/,A,1P,E12.4,/,A,I4,/,A,I4,/,A,I4)')
     1' Imperfection is provided node-by-node in segment      ',ISEG,
     1' Imperfection mode number,                       IMODE=',IMODE,
     1' Amplitude of this imperfection mode,           AMPIMP=',
     1 AMPIMP(IMODE),
     1' Starting nodal point for this imperfection,    ISTART=',
     1 ISTART(IMODE),
     1' Number of nodal points at which WSHAPE is input, NUMB=',
     1 NUMB(IMODE),
     1' Number of nodal points in this shell segment,      I5=',I5
      I = 0
181   CONTINUE
      I = I + 1
      REWIND IFILE2
      IF (I.GT.NUMB(IMODE)) GO TO 1815
      CALL DATUM(IFILE2,520,1,2,INT,WSHAPE(I,IMODE),CHARAC,IOUT,0,1)
      WRITE(IFILE4,'(A,I3,A,1P,E12.4)')
     1' Mode no.',IMODE,
     1' Normalized normal displacement of imperfection, WSHAPE=',
     1  WSHAPE(I,IMODE)
      GO TO 181
1815  CONTINUE
      CALL DATUM(IFILE2,522,1,2,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 183 
      IMODE = IMODE + 1
      GO TO 1792
183   CONTINUE
      REWIND IFILE2
      DO 184 I=1,I5
184   WTOT(I) = 0.0
      DO 186 JMODE = 1,IMODE
      NUMBMD = NUMB(JMODE)
      DO 185 I = 1,NUMBMD
      IWTOT = I + ISTART(JMODE) -1
      WTOT(IWTOT) = WTOT(IWTOT) + AMPIMP(JMODE)*WSHAPE(I,JMODE)
185   CONTINUE
186   CONTINUE
C END AUG 2005
      DO 210 I=1,I5
      SPHI = R(I)*C2(I)
      CPHI = RD(I)
-----------------------------------------------------------------------

The QUESTIONS.SRC library was modified as follows:
-----------------------------------------------------------------------
C=DECK      IMPERF
      SUBROUTINE IMPERF
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO AXISYMMETRIC IMPERFECTION
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
C BEG AUG 2005
      CHARACTER*4 ANSOUT,CHARAC
      LOGICAL ANSL1
C END AUG 2005
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ IMPERFECTION SHAPE FOLLOWS...')
      REWIND IFILE2
      CALL DATUM(IFILE2,132,0,0,INT,REALL,CHARAC,IOUT,0,1)
    7 CONTINUE
      CALL DATUM(IFILE2,133,1,1,IMP,REALL,CHARAC,IOUT,0,1)
      IF (IMP.NE.0.AND.IMP.NE.1) THEN
       WRITE(6,*)' IMP  MUST BE EITHER  0  or  1'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 7
      ENDIF
C
C
      IF (IMP.EQ.0) GO TO 200  
C
    9 CONTINUE
      CALL DATUM(IFILE2,134,1,2,ITYPE,REALL,CHARAC,IOUT,0,1)
C BEG AUG 2005
      IF (ITYPE.NE.1.AND.ITYPE.NE.2.AND.ITYPE.NE.3
     1                             .AND.ITYPE.NE.4) THEN
       WRITE(6,*)' ITYPE MUST BE EITHER 1 OR 2 OR 3 OR 4'
C END AUG 2005
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 9
      ENDIF
C
C BEG AUG 2005
C     GO TO (30,130,170),ITYPE
      GO TO (30,130,170,179),ITYPE
C END AUG 2005
30    CONTINUE    
C     RANDOM SERIES OF SINUSOIDAL IMPERFECTIONS 
C     
      CALL DATUM(IFILE2,135,1,1,INT,FM   ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,136,1,1,INT,C    ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,137,1,1,INT,FLMIN,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,138,1,1,INT,FLMAX,CHARAC,IOUT,0,1)
      GO TO 180   
  130 CONTINUE
C     
C     IMPERFECTION IS SIMPLE SINE WAVE    
C     
      CALL DATUM(IFILE2,139,1,1,INT,W0    ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,140,1,2,INT,WLNGTH,CHARAC,IOUT,0,1)
      GO TO 180   
170   CONTINUE    
C     DUMMY POSITION ,  TO BE FILLED IN BY USER.
C  IMPERFECTION IS DETERMINISTIC SUM OF SINUSOIDS.
      CALL DATUM(IFILE2,135,1,1,INT,FM   ,CHARAC,IOUT,0,1)
      M = FM
      I = 0
171   CONTINUE
      I = I + 1
      REWIND IFILE2
      IF (I.GT.M) GO TO 173
      CALL DATUM(IFILE2,139,1,1,INT,W0    ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,140,1,2,INT,WLNGTH,CHARAC,IOUT,0,1)
      GO TO 171
173   CONTINUE
C BEG AUG 2005
      GO TO 180
C
179   CONTINUE
C     READ NORMAL DEFLECTION W AT SOME NODAL POINTS 
C
C23456789012345678901234567890123456789012345678901234567890123456789012
1792  CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,505,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,510,1,2,INT,AMPIMP,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,514,1,2,ISTART,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,516,1,2,NUMB,REALL,CHARAC,IOUT,0,1)
      I = 0
181   CONTINUE
      I = I + 1
      REWIND IFILE2
      IF (I.GT.NUMB) GO TO 1815
      CALL DATUM(IFILE2,520,1,2,INT,WSHAPE,CHARAC,IOUT,0,1)
      GO TO 181
1815  CONTINUE
      CALL DATUM(IFILE2,522,1,2,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 183
      GO TO 1792
183   CONTINUE
      REWIND IFILE2
C END AUG 2005
180   CONTINUE    
200   CONTINUE
      RETURN
      END   
---------------------------------------------------------------------





10. August, 2005

The script, /bosor5/bin/cleanup.com , was improved in the same way
as was previously done for BIGBOSOR4. The new "cleanup" is listed below:
------------------------------------------------------------------------
# cleanup.com
# cleanup.com is used for clearing out old files during testing or between
# executions.  Do not use it unless your {case}.DOC file is good!

echo "This procedure clears out old files and replaces the {case}.ALL file"
echo "with the most recent {case}.DOC file."
echo ""
echo "WARNING:	Do not use this procedure unless you are sure that you have"
echo "		a good {case}.DOC file."

echo -n "Please enter the case name: "
set case = $<
/bin/rm -f ${case}.BLK >& /dev/null
/bin/rm -f ${case}.LAB >& /dev/null
/bin/rm -f ${case}.OUT >& /dev/null
/bin/rm -f ${case}.PLT2 >& /dev/null
/bin/rm -f ${case}.RAN >& /dev/null
/bin/rm -f ${case}.MAI >& /dev/null
/bin/rm -f ${case}.POS >& /dev/null
/bin/rm -f ${case}.m.ERR >& /dev/null
   'rm'  FOR0* fort.* >& /dev/null
   'cp'  ${case}.DOC  ${case}.ALL
echo "You now have the following files associated with case ${case}:"
'ls' -t ${case}.*
# end cleanup.com
--------------------------------------------------------------------------





11. August, 2005
Cases were run that demonstrate that BOSOR5 should not be used for the
analysis of ellipsoidal pressure vessel heads. Torispherical heads are ok,
but ellispoidal heads demonstrate enough finite element "lockup" to render
BOSOR5 predictions unacceptably unconservative. A certain degree of finite
element "lockup" always occurs in any shell segment for which the meridional
curvature varies within the segment. For example, "lockup" may occur in the
case of an axisymmetrically imperfect shell (IMP = 1 in the input data for
any shell segment) because the imperfection waviness causes the meridional
curvature to vary within the segment. Ellipsoidal heads and torispherical
heads behave in a similar fashion. Therefore, whenever you can, substitute
a torispherical head even when an ellipsoidal head is called for.





12. August, 2005
The libraries, hookup.src, main.src, pre11.src, pre33.src, questions.src,
readit.src, stoget.src, and wall.src, were modified. Also, PROMPT2.DAT and
PROMPT.DAT were modified.

There are three new input items now required in BOSOR5. Two of them are
required for each shell segment, and one is required at the very end of
input. The two new items required for each shell segment are included in
the following segment input data fragment:
-------------------------------------------------------------------------
      H         $ SHELL WALL CONSTRUCTION FOLLOWS...
      n         $ Do you want to include smeared stiffeners?
         1      $ LAYERS = number of layers (max. = 6)
      n         $ Are all the layers of constant thickness?
         1      $ MATL = type of material for shell wall layer no.( 1)
   6400000.     $ G(i) = shear modulus of ith layer, G( 1)
  0.1600000E+08 $ EX(i)= modulus in meridional direction, EX( 1)
  0.1600000E+08 $ EY(i)= modulus in circumferential direction, EY( 1)
  0.2500000     $ UXY(i)= Poisson's ratio (EY*UXY = EX*UYX).   UXY( 1)
  0.4144000E-03 $ SM(i)=mass density (e.g. alum.=.00025 lb-sec**2/in**4),SM( 1)   <--NEW input
         0      $ ALPHA1(i)=coef. thermal exp. in merid. direction, ALPHA1( 1)
         0      $ ALPHA2(i)=coef. thermal exp. in circ. direction, ALPHA2( 1)
   1.600000     $ EPSALW(i)=maximum allowable effective strain (in %), EPSALW( 1) <--NEW input
      y         $ Do you wish to include plasticity in this segment?
      n         $ Do you wish to include creep in this segment?
--------------------------------------------------------------------------------


The third new item, required at the very end of the input file for the BOSOR5
preprocessor, bosorread, is included in the following "global" input data fragment:
--------------------------------------------------------------------------------
      H         $ JUNCTION CONDITION INPUT FOLLOWS...
      y         $ Is this segment joined to any lower-numbered segments?
         1      $ At how may stations is this segment joined to previous segs.?
         1      $ INODE = node in current segment (ISEG) of junction, INODE( 1)
         2      $ JSEG  = segment no. of lowest segment involved in junction
        31      $ JNODE = node in lowest segment (JSEG) of junction
         1      $ IUSTAR= axial displacement (0=not slaved, 1=slaved)
         1      $ IVSTAR= circumferential displacement (0=not slaved, 1=slaved)
         1      $ IWSTAR= radial displacement (0=not slaved, 1=slaved)
         1      $ ICHI  = meridional rotation (0=not slaved, 1=slaved)
         0      $ D1    = radial component of juncture gap
         0      $ D2    = axial component of juncture gap
      y         $ Is this constraint the same for both prebuckling and buckling?
      H         $ RIGID BODY CONSTRAINT INPUT FOLLOWS...
      n         $ Given existing constraints, are rigid body modes possible?
  0.3000000     $ WPRALL= maximum allowable displacement, WPRALL              <--NEW input
-----------------------------------------------------------------------------------


These new input items were introduced to permit the printing of margins for stress 
and displacement in the output file from the BOSOR5 mainprocessor, bosormain. The
following list of output for a single time (load) step shows the modified output.

--------------------------------------------------------------------------------
 ***** CALCULATIONS BEGIN FOR TIME STEP NUMBER 21  *****

 TIME =   4.50000000E+02 CURRENT TIME INCREMENT =   1.00000000E+01

 SEGMENT   PRESSURE MULTIPLIER   TEMPERATURE MULTIPLIER   (MULTIPLY THESE AMPLITUDES BY DISTRIBUTIONS  GIVEN FOR EACH SEGMENT)

    1          4.50000000E+02          0.00000000E+00
    2          4.50000000E+02          0.00000000E+00
    3          4.50000000E+02          0.00000000E+00

 ENTER THE NEWTON-RAPHSON ITERATION LOOP FOR TIME STEP NO. 21    TIME =    4.500000E+02

 TRIAL NO.  1  ITERATION NO.  1  MAXIMUM DISPLACEMENT =  8.27462852E-01
 TRIAL NO.  1  ITERATION NO.  2  MAXIMUM DISPLACEMENT =  8.27242851E-01

 NEWTON-RAPHSON ITERATIONS HAVE CONVERGED.
 NEXT CALCULATE THE PREBUCKLING STRAINS AND UPDATE THE MATERIAL  PROPERTIES.


 ENTER THE NEWTON-RAPHSON ITERATION LOOP FOR TIME STEP NO. 21    TIME =    4.500000E+02

 TRIAL NO.  2  ITERATION NO.  1  MAXIMUM DISPLACEMENT =  8.28017175E-01
 TRIAL NO.  2  ITERATION NO.  2  MAXIMUM DISPLACEMENT =  8.28017175E-01

 NEWTON-RAPHSON ITERATIONS HAVE CONVERGED.
 NEXT CALCULATE THE PREBUCKLING STRAINS AND UPDATE THE MATERIAL  PROPERTIES.


 ENTER THE NEWTON-RAPHSON ITERATION LOOP FOR TIME STEP NO. 21    TIME =    4.500000E+02

 TRIAL NO.  3  ITERATION NO.  1  MAXIMUM DISPLACEMENT =  8.28027368E-01

 NEWTON-RAPHSON ITERATIONS HAVE CONVERGED.
 NEXT CALCULATE THE PREBUCKLING STRAINS AND UPDATE THE MATERIAL  PROPERTIES.


 ALL INFORMATION HAS BEEN STORED UP TO AND INCLUDING  TIME STEP NO. 21. CURRENT TIME =    4.500E+02

 PLASTIC STRAINING OCCURS AT THE FOLLOWING STATIONS...

  SHELL     MERIDIONAL    MERIDIONAL   CIRCUMFERENTIAL    EFFECTIVE         UNIAXIAL
 SEGMENT     STATION     MAX. PLASTIC   MAX. PLASTIC      UNIAXIAL          STRAIN
                          STRAIN(%)      STRAIN(%)        STRAIN(%)         MARGIN

    1            1       3.2571E-01     3.2571E-01       1.5823E+00       1.1160E-02  <--two columns
    1            2       2.7566E-01     2.7454E-01       1.5741E+00       1.6473E-02    of output
    1            3       2.8097E-01     2.7985E-01       1.5708E+00       1.8563E-02    have been
    1            4       2.7740E-01     2.7788E-01       1.5658E+00       2.1827E-02    added.
    1            5       2.7435E-01     2.7535E-01       1.5605E+00       2.5289E-02
    1            6       2.7117E-01     2.7250E-01       1.5550E+00       2.8931E-02
    1            7       2.6813E-01     2.6965E-01       1.5495E+00       3.2608E-02
    1            8       2.6534E-01     2.6700E-01       1.5437E+00       3.6440E-02
    1            9       2.6272E-01     2.6444E-01       1.5377E+00       4.0530E-02
    1           10       2.5994E-01     2.6165E-01       1.5312E+00       4.4947E-02
    1           11       2.5700E-01     2.5865E-01       1.5242E+00       4.9701E-02
    1           12       2.5392E-01     2.5543E-01       1.5169E+00       5.4796E-02

   (lines skipped to save space)

    3           51      -1.2999E-03     5.2037E-03       7.9032E-01       1.0245E+00
    3           52      -1.3046E-03     5.2276E-03       7.9051E-01       1.0240E+00
    3           53      -1.3045E-03     5.2268E-03       7.9052E-01       1.0240E+00

 ABSOLUTE VALUES OF THE MAXIMUM PLASTIC STRAINS IN % =

 MERIDIONAL COMPONENT =  3.2571E-01,  CIRC. COMPONENT =  3.2571E-01
 Seg.   1; Max.eff.strain(%)=  1.5823E+00 material ok    ; strain margin=  1.1160E-02 <--new output
 Seg.   2; Max.eff.strain(%)=  8.6003E-01 material ok    ; strain margin=  8.6040E-01 <--new output
 Seg.   3; Max.eff.strain(%)=  7.9052E-01 material ok    ; strain margin=  1.0240E+00 <--new output

 Maximum prebuckling displacement, WPREMX=  8.2803E-01                                <--new output
 Displacement margin,              WPRMAR= -6.3769E-01                                <--new output

 TIME STEP NO. 21  TIME=   4.500E+02   N =     42  CIRCUMFERENTIAL WAVES. ***** STABILITY DETERMINANT =   9.043E+03*10** 1920

 TIME STEP 21   NO. OF NEGATIVE ROOTS= 16   NO. OF LAGRANGE MULTIPLIERS= 16
-------------------------------------------------------------------------------------------------

Corresponding to the new input datum, material density, for each shell segment,
there is new output included in the output from the BOSOR5 preprocessor (*.OUT file):
-------------------------------------------------------------------------------------------
 Segment No. ISEG=   1; Mass of segment(ISEG)=  3.3748E-02
 Accumulated mass=  3.3748E-02 NOT INCLUDING DISCRETE RINGS
 Segment No. ISEG=   2; Mass of segment(ISEG)=  5.3703E-02
 Accumulated mass=  8.7451E-02 NOT INCLUDING DISCRETE RINGS
 Segment No. ISEG=   3; Mass of segment(ISEG)=  2.8303E-02
 Accumulated mass=  1.1575E-01 NOT INCLUDING DISCRETE RINGS

 ****** TOTAL MASS NOT INCLUDING DISCRETE RINGS ******
 Total mass of all of the shell segment walls=TOTMAS=  1.1575E-01
 ****** TOTAL MASS NOT INCLUDING DISCRETE RINGS ******
-----------------------------------------------------------------------------------------




13. February, 2008
New files were added to the ...bosor5/doc directory;

1. bosor5papers.tar     (a collection of published papers/reports about bosor5)
2. bushnell.bio.pdf     (short biography/photograph of David Bushnell)
3. howtorunlinux.pdf    (directions on how to get started)

In order to "unpack" the compressed "tar" file, bosor5papers.tar, type the
following command:

tar xvf bosor5papers.tar

This command will generate the following *.pdf files:

-rw-r--r--   1 bush bush  1288431 Nov 29  2005 1974_Bushnell_2.pdf
-rw-r--r--   1 bush bush   799134 Feb  7  2006 1974_Bushnell_Galletly_1.pdf
-rw-r--r--   1 bush bush  1724586 Dec 12  2005 1976_Bushnell_1.pdf
-rw-r--r--   1 bush bush   896123 Jan 30  2006 1976_Bushnell_2.pdf
-rw-r--r--   1 bush bush 10374637 Nov  7  2006 1982_Bushnell_1.pdf
-r--r--r--   1 bush bush   447265 Feb  6 12:13 bosor5nikulari.pdf
-rw-r--r--   1 bush bush 20234240 Feb  9 14:31 bosor5papers.tgz
-rw-r--r--   1 bush bush  4695863 Feb  9 14:30 governingequations.pdf



14.
