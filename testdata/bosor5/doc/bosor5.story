 HOW TO RUN BOSOR5 AND OTHER USEFUL INFORMATION
 
*****************************************************************

                      TABLE OF CONTENTS

I    SUMMARY...
     I(a) Scope of BOSOR5
     I(b) Operation of BOSOR5

II(a) SAMPLE RUNSTREAM...

II(b) FILES GENERATED BY EXECUTION OF BOSOR5 PROCESSORS...

III  IN CASE OF ERROR TERMINATION...
   III(a) Recovery from errors during segment-by-segment interactive
          sessions
   III(b) Tracking down causes of error termination of batch runs

IV   PLOTTING...

V    NEW BOSOR5 CAPABILITIES...

VI(a) EDITING AND CHECKING SEGMENT AND GLOBAL DATA

VI(b) GENERATING BLOCKS OF INPUT DATA WITH THE UTILITY "MODIFY"
      AND AUTOMATIC EDITING AND CHECKING OF NAME.SEGn FILES

VI(c) SAMPLE RUNSTREAM INCLUDING MODIFICATION OF MODEL

VII  BOSOR5 LIBRARIES AND ROUTINES...

VIII VARIOUS BOSOR5 PROCESSORS AND PROCEDURES...

IX   LINKING THE BOSOR5 PROCESSORS...

X    LIST AND DISCUSSION OF SAMPLE CASE...

XI   EXAMPLE OF PART OF AN INTERACTIVE SESSION...

XII  RECOMPILING, REGENERATING LIBRARIES, RE-LINKING
************************************************************

I    SUMMARY...

     I(a) Scope of BOSOR5

In BOSOR5 a complex, branched, stiffened shell of revolution is
treated as an assemblage of shell segments or branches, each with its
own geometry (flat, cylindrical, spherical, etc), loading, wall
construction, and material properties.  In this version of BOSOR5 you
provide the input data in a "conversationally" interactive mode on a
segment-by-segment basis.

Before beginning an interactive session you should already have
decided how to divide the structure that you are analyzing into
segments and branches, and you should have available to you all
dimensions and material properties and loading.  You should also
have decided what kind of analysis to perform. The type of analysis
is controlled by a parameter called INDIC, as follows:

INDIC =

       0= nonlinear axisymmetric stress (and collapse) analysis,
      -2= stability determinant calculated for increasing load,
          until an eigenvalue is or eigenvalues are detected between
          two successive load steps  Then a sequence of eigenvalue
          problems is set up in order to find the critical circumferen-
          tial wavenumber and corresponding critical load.
.
      -3= same as INDIC = -2, except that the prebuckling states for
          the series of load steps must have been determined in a
          previous run with INDIC = 0 or INDIC = -2.


--------------------------------------------------------------------

     I(b) Operation of BOSOR5

First, you must run bin/initialize

     source bin/initialize

Then you must give the command:

       bosor5log

in order to activate certain commands that are used during execution
of BOSOR5 modules.

Once you have decided on the items discussed in Section I(a),
you start providing input data by giving the command

 INPUT

which initiates a procedure that, among other things, asks you to
name the case.  In the following discussion we use 'NAME' to stand
for this case name. (You don't use the apostrophes, however.)

 INPUT also initiates the interactive session for the first segment.
In this session you are first asked to provide a few items that
pertain to the entire structure, such as type of analysis (INDIC).
Then you are asked to provide data for the first of the segments into
which you have chosen to divide the complete structure. Upon
completion of the interactive session for the first segment, you 
can either terminate the interactive session or go on to the next
segment.  If you choose to terminate, you can start again later by
again giving the command

 INPUT

in order to initiate the interactive session for the second segment.
You continue in this manner until you have provided input data for all
the segments into which you have divided the entire structure.

After data for all segments have been provided by you, you must provide
additional data pertaining to the entire structure, such as data that
specify how the various structural segments are connected to eachother
and to ground.

At this point you have provided data corresponding to NSEG executions
of a processor called SEGMENT and 1 execution of a processor called
BOUNDARY, where NSEG is the number of structural segments. Corresponding
to these commands and the interactive sessions following them, you
have generated NSEG + 1 files called 'NAME'.SEG1, 'NAME'.SEG2, . . .
'NAME'.SEG(NSEG), 'NAME'.SEG(NSEG+1).  ('NAME' is a name that you 
provide in the procedure  INPUT.) You may edit any of these files you
wish.  After you are satisfied with these 'NAME'.SEGn files,
you issue the command " ASSEMBLE", which concatenates them into a
BOSOR5 input file called 'NAME'.ALL.  You then give the command
 BOSORREAD, which initiates a batch run of the BOSOR5 preprocessor.
Following a successful run of BOSORREAD, you issue a series of commands
for setting up a mainprocessor data file, executing the mainprocessor,
setting up a postprocessor file, executing the postprocessor, and
plotting.  These are described in Section II(a) SAMPLE RUNSTREAM.

**********************************************************************

II(a) SAMPLE RUNSTREAM...

The following is a sample runstream for setting up a BOSOR5 input file
and executing it.

 INPUT

(This command first assigns prompting files and asks you to provide a
name for the case.  You are then asked to provide preliminary global
input followed by input for Segment no. 1.

Input is in an interactive mode.  If you do not understand a datum,
type HELP or H for more information about it.  The prompting
information contains references to page numbers and figures and
tables that are contained in:

"BOSOR5 - a computer program for buckling of elastic-plastic complex
shells of revolution including large deflections and creep", Vol. 1
User's manual, input data", Lockheed Missiles $ Space Co., Sunnyvale,
California, LMSC-D407166, December 1974

An image of the interactive session is stored on a file called
'NAME'.SEG1.  Following the interactive session or following a
"CONTROL C", this file may be edited and/or used for recovery from
error as described in the paragraph before  ASSEMBLE and in Section
III(a).)

 INPUT

(Provide input for segment no. 2, if any.  The image of this
interactive session is stored in a file called 'NAME'.SEG2)

 INPUT

(Provide input for segment no. 3, if any.  The image of this
interactive session is stored in a file called 'NAME'.SEG3)

 INPUT

(Provide input for segment no. 4, if any.  Keep running INPUT
until input for all shell segments has been provided by you.  Images
of each interactive session are stored on files called 'NAME'.SEGn  .
Note that you can do as many segments as you want with a single  INPUT
command.)

 INPUT

(Provide input for certain global control variables and for
boundary and junction conditions. This will be the last time that
you execute INPUT.  The image of this interactive session is 
stored in a file called 'NAME'.SEGn, where n = NSEG + 1 and NSEG
is the total number of structural segments in your model.)

In case of error during any input session...If you type something wrong
and you want to quit the interactive session, you can at any time do
a "CONTROL C", edit the file 'NAME'.SEGn  , and  INPUT again 
for the appropriate segment. Upon your telling the system that this
new interactive session is for correcting an existing file, the system
will use the good part of the 'NAME'.SEGn file as input, sparing
you the necessity of answering many questions over again, and revert
to the keyboard when further interactive input data are needed from
you.

 ASSEMBLE

This procedure assembles a BOSOR5 input file called 'NAME'.ALL
from the files 'NAME'.SEG1, 'NAME'.SEG2, 'NAME'.SEG3, ..'NAME'.SEG(N)
that were generated by the NSEG + 1 executions of INPUT indicated 
above. Please be sure that there are no stray 'NAME'.SEGn files in the
subdirectory that you do not want assembled into 'NAME'.ALL before
you give the command  ASSEMBLE.

Note that you can edit any of the 'NAME'.SEGn files before giving
the command  ASSEMBLE.  If a shell structure has many similar segments,
it may be more efficient for you to generate 'NAME'.SEGn files by
copying them from previously obtained files and editing rather than by
generating them interactively.  If you do this, make sure that each
of these new 'NAME'.SEGn files has the correct version number, n.
The version number n should match the segment number.  Also, you should
check any files obtained by "shortcut" copying and editing through use
of the CHECKFILE procedure. (See HELP5 COMMAND CHECKFILE).

After you have given the command " ASSEMBLE" you will have a new file
called 'NAME'.ALL.  The procedure ASSEMBLE asks you if you wish to
retain the 'NAME'.SEGn files.  It is a good idea to retain these files
at first until you know for sure that the 'NAME'.ALL file is "good",
that is, until you are sure that the BOSOR5 preprocessor will success-
fully process the entire file and produce a viable 'NAME'.DOC file
(see below for information on 'NAME'.DOC).


 BOSORREAD

(This command causes the BOSOR5 preprocessor to be executed in
a batch mode.  The input file is 'NAME'.ALL and the final results are
stored in 'NAME'.OUT.  Runs usually take less than 5 minutes on the
VAX 11/780.  A file called 'NAME'.DOC is generated.  This is a sort of
copy of the 'NAME'.ALL file, with updated and complete annotations. The
'NAME'.DOC file is important: it is the starting point for all modifi-
cations you may wish to make in the model.)


 MAINSETUP

(Interactively provide input data for the BOSOR5 mainprocessor.  Your
responses in the interactive session are stored on file 'NAME'.IMP.)

 BOSORMAIN

(This command causes the BOSOR5 mainprocessor to be executed in a
batch mode. Runs may take up to an hour on the VAX 11/780.  Runs usually
take considerably less time, say a minute to ten minutes. The input
file is 'NAME'.IMP and the output file is 'NAME'.MAI.    Output from
the  BOSORMAIN execution is also concatenated to the 'NAME'.OUT file,
which represents complete output documentation from the beginning of
the case (This file starts with output from  BOSORREAD).

 POSTSETUP

(Interactively provide input data for the BOSOR5 postprocessor.  Your
responses in the interactive session are stored on file 'NAME'.IPP.)

 BOSORPOST

(This command causes the BOSOR5 postprocessor to be executed in a
batch mode.  Runs may take up to 10 minutes on the VAX 11/780.  The
input file is 'NAME'.IPP and the output file is 'NAME'.POS.  This
output is also concatenated onto the 'NAME'.OUT file.
Output files 'NAME'.LAB and 'NAME'.PLT2 will also be generated if you
indicate that you want plots.  These two files contain input data
for the BOSOR5 plotting capability.)

 BOSORPLOT

(This command causes the BOSOR5 plotting, via the system DI3000,
to be done.  Input files are 'NAME'.LAB and 'NAME'.PLT2, generated by
 BOSORPOST.  Plots are then generated at the discretion of the user
via an interactive menu.  Plots can be made via Xgraph for X systems,
or via PostScript files (which can be subsequently printed on a 
PostScript printer or viewed with PostScript previewers for consoles
so equipped).

 MAINSETUP

(You will probably want to do a restart of the mainprocessor with
different time steps, different circumferential wave numbers, or a
different kind of analysis [for example, a different INDIC ].  Provide
new mainprocessor input data.)

 BOSORMAIN

(another batch execution of the BOSOR5 mainprocessor.)

 POSTSETUP

(preparation for more postprocessing)

 BOSORPOST

(another batch execution of the BOSOR5 postprocessor.)

 BOSORPLOT

(another batch execution of the BOSOR5 plotter.)

etc.  (as many restarts as you want, until you are satisfied that
         no more useful information can be obtained with the same
         basic configuration and loading.)

----------------------------------------------------------------------
*********************************************************************


II(b) FILES GENERATED BY EXECUTION OF BOSOR5 PROCESSORS...

    FILES GENERATED BY EXECUTION OF BOSOR5 PROCEDURES
                    AND PROCESSORS
===================================================================
 FILE NAME     TYPE           CONTENTS OF THE FILE
-------------------------------------------------------------------

FILES GENERATED BY THE COMMAND:   INPUT.....

 NAME.SEG1   SYMBOLIC     Input data for shell segment 1
                           plus some global data.

 NAME.SEG2   SYMBOLIC     Input data for shell segment 2.
     .           .                      .
     .           .                      .
 NAME.SEGn   SYMBOLIC     Input data for shell segment n.

 NAME.SEG(n+1) SYMBOLIC     Global input data plus junction
                           and boundary conditions for the
                           case 'NAME'.

 FOR008.DAT   SYMBOLIC     Scratch file deleted later.
 NAME.000     SYMBOLIC     Scratch file deleted later.
-----------------------------------------------------------------

FILE GENERATED BY EXECUTION OF THE COMMAND    ASSEMBLE.....

 NAME.ALL     SYMBOLIC     Input file for the BOSOR5 batch run.
                           This file is a concatenation of the
                           NAME.SEGn files, (n=1,2,...NSEG+1).
-------------------------------------------------------------------

FILES GENERATED BY EXECUTION OF THE COMMAND    BOSORREAD.....

 NAME.DOC     SYMBOLIC     Re-annotated "copy" of NAME.ALL  . If the
                           case ran successfully, this file is useful
                           for documenting the input. It is important
                           because it is the starting point for future
                           modification via the GETSEGS and MODIFY
                           utilities as described below.

 NAME.BLK     BINARY       Labelled common blocks are stored here.
                           Needed for main- and post-processing.

 NAME.RAN     BINARY       Direct access mass storage file, generated
                           via the I/O subroutine GASP.  Needed for
                           main- and post-processing.

 NAME.OUT     SYMBOLIC     List output. The version number will be 1
                           if the case ran successfully; NAME.OUT will
                           not be present if the preprocessor bombed.

 NAME.ERR     SYMBOLIC     List output. This file will not be present
                           if the preprocessor ran successfully. If the
                           preprocessor bombed, NAME.ERR will contain
                           whatever output had been generated up to the
                           time the preprocessor bombed out.  Look at
                           both NAME.ERR and NAME.DOC for clues about
                           the error.

  (Summary of files present after successful execution of  BOSORREAD...

   NAME.SEG1 ... NAME.SEG(NSEG+1) , NAME.ALL, NAME.DOC, NAME.OUT,
   NAME.BLK, NAME.RAN )

----------------------------------------------------------------------

FILE GENERATED BY EXECUTION OF THE COMMAND    MAINSETUP....

 NAME.IMP     SYMBOLIC     Image of interactive session req'd to set up
                           mainprocessing run. NAME.IMP is needed
                           as input in the batch execution of the
                           mainprocessor, which follows your command
                            BOSORMAIN  .
-----------------------------------------------------------------------

FILE GENERATED BY BATCH EXECUTION OF THE MAINPROCESSOR,  BOSORMAIN...

 NAME.MAI     SYMBOLIC     Output from the mainprocessor run.  If the
                           mainprocessor ran to a normal finish the
                           version number, n, will be 2; otherwise the
                           version number, n, will be 1. "Abnormal"
                           execution is common (not really abnormal),
                           because it frequently happens that:
                            (a) the case runs out of time because of
                                lots of plasticity, etc.
                            (b) the prebuckling state does not con-
                                verge because of plastic collapse.

                           (See desciption for NAME.ERR next.)

 NAME.ERR     SYMBOLIC     This file is present only if there is an
                           "abnormal" termination of the mainprocessor
                           run. NAME.ERR contains whatever output
                           from the mainprocessor run had been
                           generated prior to "abnormal" termination.
                           Inspect NAME.ERR and runtime diagnostics for
                           clues to the error if it is different from
                           (a) or (b) listed above opposite the entry
                           NAME.MAI.

 NAME.OUT     SYMBOLIC     Upon normal termination, the NAME.MAI file
                           is added to NAME.OUT, thus creating a
                           new version, NAME.OUT.
                           NAME.OUT contains complete output
                           documentation for the case 'NAME'.

  (Summary of files present after successful execution of  BOSORMAIN...

   NAME.SEG1 ... NAME.SEG(NSEG+1) , NAME.ALL, NAME.DOC, NAME.OUT,
   NAME.BLK, NAME.RAN, NAME.IMP, NAME.MAI)

----------------------------------------------------------------------

FILE GENERATED BY EXECUTION OF THE COMMAND    POSTSETUP....

 NAME.IPP     SYMBOLIC     Image of interactive session req'd to set up
                           postprocessing run. NAME.IPP is needed
                           as input in the batch execution of the
                           postprocessor, which follows your command
                            BOSORPOST  .
-----------------------------------------------------------------------

FILE GENERATED BY BATCH EXECUTION OF THE POSTPROCESSOR,  BOSORPOST...

 NAME.POS     SYMBOLIC     Output from the postprocessor run.  If the
                           postprocessor ran to a normal finish the
                           version number, n, will be 2; otherwise the
                           version number, n, will be 1. 
                           (See desciption for NAME.ERR next.)

 NAME.ERR     SYMBOLIC     This file is present only if there is an
                           abnormal termination of the postprocessor
                           run. NAME.ERR contains whatever output
                           from the postprocessor run had been
                           generated prior to abnormal termination.
                           Inspect NAME.ERR and runtime diagnostics for
                           clues to the error.

 NAME.OUT     SYMBOLIC     Upon normal termination, the NAME.POS file
                           is added to NAME.OUT , thus creating a
                           new version, NAME.OUT .
                           NAME.OUT contains complete output
                           documentation for the case 'NAME'.

 NAME.LAB     SYMBOLIC     Plot labels. This file must exist before
                           the command  BOSORPLOT is given.

 NAME.PLT2    SYMBOLIC     Text formatted file suitable for use with
                           any plotting software or hardware. This
                           file contains explanations and data. The
                           explanations tell what the data are. This
                           file is produced via BOSORALL or RESTART.
                           It is produced by the BOSOR4. postprocessor
                           BOSOR4.OST. The data are listed in columns
                           separated by tabs. The format is especially
                           suited for use with CRICKETGRAPH on the Mac
                           and the supplied Xgraph and PostScript
                           plotting software.  Data
                           listed depends on the case.  Typically, data
                           include undeformed and deformed geometries,
                           prebuckling displacements, stress resultants,
                           stresses, strains, changes in curvature, and
                           bifurcation buckling or vibration modal
                           displacements (eigenvectors). The convention
                           used for naming subsections of NAME.PLT2
                           is given in the chapter on plotting.

  (Summary of files present after successful execution of  BOSORPOST...

   NAME.SEG1 ... NAME.SEG(NSEG+1) , NAME.ALL, NAME.DOC, NAME.OUT,
   NAME.BLK, NAME.RAN, NAME.IMP, NAME.MAI, NAME.IPP, NAME.POS, 
   NAME.LAB, NAME.PLT2)
----------------------------------------------------------------------

EXAMPLE: FILES GENERATED DURING SETUP AND EXECUTION OF A CASE INVOLVING
TWO SHELL SEGMENTS. THERE WAS AN ABNORMAL TERMINATION AFTER THE FIRST
EXECUTION OF THE MAINPROCESSOR. THERE ARE TWO TABLES IN THIS EXAMPLE:
THE FIRST LISTS FILES GENERATED, MODIFIED, AND DELETED BECAUSE OF EACH
COMMAND IN THE RUNSTREAM. THE SECOND LISTS THE FILES PRESENT AFTER
COMPLETION OF THE RUNSTREAM.

======================================================================
   FILES GENERATED, MODIFIED, AND DELETED DURING EXECUTIONS
           OF THE VARIOUS BOSOR5 PROCESSORS
---------------------------------------------------------------------
COMMAND THAT     FILES       FILES       FILES         COMMENTS
  YOU GIVE     GENERATED    MODIFIED    DELETED
----------------------------------------------------------------------

 INPUT         NAME.SEG1    NONE        NONE       Contains input data
                                                    for shell segment
                                                    no. 1.
               NAME.000                             Scratch file, not
                                                    needed anymore.
                                                    Will be automati-
                                                    cally deleted later.
               FOR008.DAT                           Scratch file, as
                                                    above.

 INPUT         NAME.SEG2    NONE        NONE       Contains input data
                                                    for segment no. 2.
               NAME.000                             Scratch file
               FOR008.DAT                           Scratch file

 ASSEMBLE      NAME.ALL      NONE     NAME.000      NAME.SEGn files
                                    FOR008.DAT      concatenated and
                                                    scratch files
                                                    deleted.

 BOSORREAD     NAME.DOC      NONE        NONE       Batch run of BOSOR5
               NAME.BLK                             preprocessor made.
               NAME.RAN                             Contents of files
               NAME.OUT                             is described above.

 MAINSETUP     NAME.IMP      NONE        NONE       Interactive session
                                                    to setup mainpro-
                                                    cessor run.

 BOSORMAIN     NAME.MAI      NAME.BLK    NONE       It is assumed in
               NAME.ERR      NAME.RAN               this example that
               FOR000.DAT                           the mainprocessor
                                                    terminated abnorm-
                                                    ally this time.

 MAINSETUP     NAME.IMP      NONE        NONE       Maximum number of
                                                    iterations increased
                                                    to correct abnormal
                                                    termination.

 BOSORMAIN     NAME.MAI      NAME.OUT    NAME.ERR   This time the main-
                             NAME.BLK  FOR000.DAT   processor terminated
                             NAME.RAN               normally. Results
                                                    from the mainpro-
                                                    cessor are added to
                                                    the file NAME.OUT
                                                    and saved separately
                                                    on file  NAME.MAI

 POSTSETUP     NAME.IPP      NONE        NONE       Interactive session
                                                    to setup BOSOR5
                                                    postprocessor run.

 BOSORPOST     NAME.POS      NAME.OUT    NAME.ERR   Batch run of BOSOR5
               NAME.LAB      NAME.BLK  FOR000.DAT   postprocessor.
               NAME.PLT2     NAME.RAN  

 BOSORPLOT     (see below)
              

=======================================================================




=======================================================================
   SUMMARY OF FILES PRESENT AFTER COMPLETION OF THE CASE
     IN ALPHABETICAL ORDER OF THE FILE QUALIFIER, .XXX
-----------------------------------------------------------------------

 FILE NAME              CONTENTS                    COMMENTS
-----------------------------------------------------------------------

 NAME.ALL      Input for batch run of the     Superceded by NAME.DOC ,
               BOSOR5 preprocessor, possibly  which has updated annota-
               edited by you after you did    tions that account for
                ASSEMBLE.                     any prior editing you may
                                              have done on NAME.ALL .

 NAME.BLK      Labelled common blocks stored  This file is needed for
               here in binary format.         any further runs you plan
                                              for the case named 'NAME'

 NAME.DOC      Input for future batch runs    This is the best record
               of the BOSOR5 preprocessor     of input for this case.
               of this case, providing the    Edit this file for future
               qualifier DOC is changed to    runs of small modifica-
               ALL.                           tions of this case.

 NAME.IMP      Image of interactive session
               following your command  MAINSETUP

 NAME.IPP      Image of interactive session
               following your command  POSTSETUP

 NAME.MAI      Output from execution of       Contents of this file
               interactive (RUN MAINSETUP)    have been added to the
               and batch ( BOSORMAIN) main    NAME.OUT file, so you
               processors.                    don't need to keep it
                                              unless you have some
                                              special reason for doing
                                              so.
 NAME.OUT      Output from execution of       Best record of output
               the preprocessor ( BOSORREAD)  since beginning of case.
               mainprocessors (RUN MAINSETUP  If any abnormal termina-
               and   BOSORMAIN) and post      tions occur, you should
               processors (RUN POSTSETUP and  list NAME.ERR to see what
                BOSORPOST), except any runs   what happened.
               that bombed.

 NAME.POS      Output from execution of       Contents of this file
               interactive (RUN POSTSETUP)    have been added to the
               and batch ( BOSORPOST) post    NAME.OUT file, so you
               processors.                    don't need to keep it
                                              unless you have some
                                              special reason for doing
                                              so.

 NAME.RAN      Random access data stored      This file is needed for
               here in binary format.         any further runs you plan
                                              for the case named 'NAME'

 NAME.SEG1    Input data for segment 1       It is useful to keep
                                              this file if you wish to
                                              modify the case on a
                                              segment-by-segment basis.

 NAME.SEG2    Input data for segment 2       As with NAME.SEG1

 NAME.LAB     SYMBOLIC     Plot labels.
 NAME.PLT2    SYMBOLIC     (see below)
 NAME.ERR     SYMBOLIC     List output up to point of bomb. This file
                           will not be present if the case runs
                           successfully to completion.
-------------------------------------------------------------------

FILES GENERATED BY EXECUTION OF THE COMMAND  MODIFY....

 MODIFY is a procedure for automatic editing of NAME.SEGn files. Within
 each structural segment there are several categories of data, such as
 nodal point distribution (MESH), meridional geometry (GEOM), discrete
 rings (RINGS), wall construction (WALL), etc. Corresponding to each
 of these categories, which is assigned an index, MODIFY generates a
 file with a name such as MESH.QUE, GEOM.QUE, RINGS.QUE, WALL.QUE, etc.
 The table below gives a complete list:

      Generate proper input data for the following categories by
      responding with the appropriate index:
      ===========================================================
      Index     Type of BOSOR input data            File generated
      -----------------------------------------------------------
        1      nodal point distribution in segment       MESH.QUE
        2      shape of meridian of segment              GEOM.QUE
        3      location of reference surface in wall  REFSURF.QUE
        4      initial imperfection shape in segment   IMPERF.QUE
        5      discrete rings in segment                RINGS.QUE
        6      line loads in segment                LINELOADS.QUE
        7      temperature distribution in segment   TEMPTURE.QUE
        8      pressure distribution in segment      PRESSURE.QUE
        9      wall construction of segment              WALL.QUE
       10      dummy position.  not used                DUMMY.QUE
       11      constraint conditions of segment     CONSTRAIN.QUE
       12      rigid body motion prevention         RIGIDBODY.QUE
       13      global parameters at beginning         GLOBAL1.QUE
       14      global parameters after segment data   GLOBAL2.QUE
       15      dummy position.  not used                DUMMY.QUE
      =============================================================

=====================================================================
*******************************************************************

III  IN CASE OF ERROR TERMINATION....

III(a) RECOVERY FROM ERRORS DURING SEGMENT-BY-SEGMENT INTERACTIVE
       SESSIONS....

It often happens that as you are answering the many questions you
inadvertently hit a wrong key which causes a bomb or you hit a wrong
key followed by return. The procedure for recovering from these types
of errors is as follows:

  1. Do a CONTROL C to get out of the interactive session and back to
     the shell

  2. Edit the 'NAME'.SEGn file with which you were currently working
     in order to remove any wrong entries at its end.  Make sure
     that the edited file has the same version number as the pre-
     edited file.

  3. Give the command  INPUT

  4. The first question asks "Are you correcting an existing file?"
     Answer this question  Y  and follow the directions given.

In this procedure, the portion of the 'NAME'.SEGn file up to where you
were when you bombed or erred is used as input rather than your
terminal keyboard. Therefore, you do not have to answer interactively
all the questions preceeding your error.  When the system reaches the
end of the 'NAME'.SEGn file, it gives control back to you. You then
complete the interactive session as if nothing bad had happened.

III(b) TRACKING DOWN CAUSES OF ERROR TERMINATION OF BATCH RUNS

In this section it is assumed that the input file 'NAME'.ALL has been
successfully assembled. For directions concerning errors committed
while generating input for a given segment, see Section III(a).

(1) Diagnostics will be printed to the console in the case of interactive
    runs, and will be mailed to the user via email for batch runs.

(2) Diagnostic messages are written to files called

           'NAME'.ERR      and          'NAME'.OUT

'NAME'.ERR will appear in the subdirectory from which the batch
run was made only if an error termination occurred.

(3) If the error occurred in the preprocessor (BOSORREAD), it will be
useful to list the file 'NAME'.DOC, which contains a sort of copy of
the input file up to the point at which the error was encountered.
Knowing what the last line of this file is provides a very important
clue as to the source of the error.

**********************************************************************

IV   PLOTTING...

A file, 'NAME'.PLT2, is generated that contains data for plotting.
This file is in text format (formatted file), and full explanations are
given of the data listed there.

The file NAME.PLT2 has a number of subsections. The nature of the data
to be plotted depends on the analysis type INDIC.  NAME.PLT2 is now
structured in such a way as to be particularly useful with the supplied
Xgraph and PostScript plotting software.

The data listed in each subsection of NAME.PLT2 are arranged in columns
separated by tabs (See the FORTRAN source library PLOT.NEW). The two
lines of text immediately preceeding the data are:
   1. the name of the subset (see the table below)
   2. column headings.

The following table describes what the various subsets of the NAME.PLT2
file contain.

        NAMES AND CONTENTS OF THE SUBSETS OF THE NAME.PLT2 FILE
 ======================================================================
 ANALYSIS     NAME OF SUBSET           WHAT THE DATA REPRESENT
   TYPE       OF THE *.PLT2
  INDIC           FILE
 ======================================================================
 -2,0        (R,Z)_LOADSTEP i    Prebuckling axisymmetric undeformed and
                                 deformed geometry for load step no. i

 -2,0       AXISYM_LOADSTEP i    Prebuckling axisymmetric displacements
                                 W0, U0; meridional rotation BETA, and
                                 stress and moment resultants N10, N20,
                                 M10 for load step no. i

 -2,0       STRESS_LOADSTEP i    Prebuckling axisymmetric stress
                                 components and von Mises stress for
                                 load step no. i

 -2,0       STRAIN_LOADSTEP i    Prebuckling axisymmetric reference
                                 surface strains, changes in curvature,
                                 and twist for load step no. i

 -2,    (R,Z)_EIGENMODE i;N= n   Bifurcation buckling or modal vibration
                                 undeformed and deformed meridians for
                                 Eigenvalue no. i, N=n circumferential
                                 waves.

 -2,       EIGENMODE i;N= n      Bifurcation buckling or modal vibration
                                 eigenvector (displacement components
                                 (u,v,w) for Eigenvalue no. i, N=n
                                 circumferential waves.

**********************************************************************

V    NEW BOSOR5 CAPABILITIES....

(1)  Up to 200 segments, 98 discrete rings, and 2000 finite elements
can now be handled. Formerly the limit was half of this.

(2)  BOSOR5 will now handle imposed symmetric displacements. 
One uses the load input.  The program knows that the
input provided in response to questions about loads is actually
displacement input because the user provides 2's instead of 1's in
the boundary condition part of the input (for USTAR, VSTAR, WSTAR, etc.)
*********************************************************************

VI(a) EDITING AND CHECKING SEGMENT AND GLOBAL DATA...

Often it is easier to provide segment data by copying an existing
segment file into a new version and modifying the new version by
use of a text editor. Or you may wish to modify existing segment
files directly, especially when you become an expert in using BOSOR.
You often want to avoid the tedium of answering many questions
interactively, so you find ways to set up segment files via
copying and editing features.  In so modifying your files, you
generally don't want to take the time to provide comments identifying
each datum.  After manipulating files, deleting entries, and adding
entries, you end up with a 'NAME'.SEGn file that is incompletely
annotated and may not in fact be correct. 

See Section VI(b) for discussion of a utility, MODIFY, which is very
useful for generating blocks of input data pertaining to nodal point
distribution, meridional geometry, imperfections, discrete rings, line
loads, distributed loads, wall construction, constraint conditions,
and global input; and automatically editing the appropriate NAME.SEGn
file.

RECOMMENDATION...------------------------------------------

It is recommended that updated 'NAME'.SEGn files be maintained rather
than the 'NAME'.ALL file for the following reasons:

1. Editing the much smaller 'NAME'.SEGn files proceeds more quickly
because of their smaller length.

2. It is very easy to generate another 'NAME'.ALL file from the
'NAME'.SEGn files: one merely gives the command  ASSEMBLE.

3. You are more flexible in the way you can modify a case if you start
with 'NAME'.SEGn files rather than with the large 'NAME'.ALL file.
For example, you may in future runs want to reorder the segments,
add or remove segments from the model, add discrete rings to a segment,
change the wall construction of a segment, etc.

4. The utility MODIFY (described in Section VI(b)) works in
conjunction with 'NAME'.SEGn files, not in conjunction with the
'NAME'.ALL file.
-------------------------------------------------------------

If a run bombs, go back to the 'NAME'.SEGn file and do more editing.
It may be a good idea to use the MODIFY utility described in Sect.
VI(b).  Be sure that when you are ready to  ASSEMBLE you check to see
that all your 'NAME'.SEGn files are in the correct order and that there
are no extraneous 'NAME'.SEGn files in the subdirectory from which you
are assembling your model.

*********************************************************************

VI(b) GENERATING BLOCKS OF INPUT DATA PERTAINING TO SEVERAL CATEGORIES
      AND AUTOMATICALLY MODIFYING  NAME.SEGn  FILES.

It frequently occurs that you have a large case set up and you want to
make modifications that involve data for one or more of the segments
or one or more of the boundary and junction conditions.  You do not
want to have to set up a new case from scratch in the interactive mode.
A utility called MODIFY is available to permit you to modify certain
data while leaving the rest alone.  MODIFY generates blocks of input
data pertaining to nodal point distribution, meridional geometry,
imperfections, discrete rings, line loads, distributed loads, wall
construction, constraint conditions, and global data. You execute
MODIFY by typing:

        MODIFY

and answering interactively the questions that follow this command.
When an interactive session is finished, a file with a name such as
MESH.QUE, GEOM.QUE, IMPERF.QUE, RINGS.QUE, LINELOADS.QUE, etc will
exist in your subdirectory.  This file is then used by MODIFY to modify
the NAME.SEGn file that you indicate needs modification.  The
following table lists the options that exist for generating blocks
of input data in this manner:

   BLOCKS OF INPUT DATA GENERATED BY USE OF THE UTILITY "MODIFY"
      Generate proper input data for the following categories by
      responding with the appropriate index:
      ===========================================================
      Index     Type of BOSOR input data            File generated
      -----------------------------------------------------------
        1      nodal point distribution in segment       MESH.QUE
        2      shape of meridian of segment              GEOM.QUE
        3      location of reference surface in wall  REFSURF.QUE
        4      initial imperfection shape in segment   IMPERF.QUE
        5      discrete rings in segment                RINGS.QUE
        6      line loads in segment                LINELOADS.QUE
        7      temperature distribution in segment   TEMPTURE.QUE
        8      pressure distribution in segment      PRESSURE.QUE
        9      wall construction of segment              WALL.QUE
       10      dummy position.   not used.              DUMMY.QUE
       11      constraint conditions of segment     CONSTRAIN.QUE
       12      rigid body motion prevention         RIGIDBODY.QUE
       13      global parameters at beginning         GLOBAL1.QUE
       14      global parameters after segment data   GLOBAL2.QUE
       15      dummy position.  not used.               DUMMY.QUE
      =============================================================


MODIFY works because of certain key phrases embedded in the 'NAME'.SEGn
files.  These key phrases tell MODIFY where the new data should
be inserted.  Because of this, MODIFY should only be used with NAME.SEGn
files that have been generated from a good NAME.DOC file via the
utility GETSEGS. (GETSEGS disassembles the NAME.DOC file into NAME.SEGn
files.) MODIFY may not work when you apply it to NAME.SEGn files that
have been generated in some shortcut manner, such as by means copying
from other segments or otherwise using a text editor to generate
NAME.SEGn files.
**********************************************************************


VI(c) SAMPLE RUNSTREAM INCLUDING MODIFICATION OF MODEL...

The runstream listed below illustrates the recommended way of modifying
a case and re-running.  Notice that new NAME.SEGn files are obtained
from the NAME.DOC file that was generated during the first successful
pass through the preprocessor BOSORREAD.

    SAMPLE RUN STREAM FOR BOSOR5....
   LINE    COMMAND                         WHAT HAPPENS
     1      INPUT       You supply data interactively for segs. and b.c.'s
     2      ASSEMBLE    You cause segment data & b.c.'s to be concatenated
     3      BOSORREAD   You launch a batch run of the preprocessor
     4      MAINSETUP   You supply data interactively for mainprocessor
     5      BOSORMAIN   You launch a batch run of the mainprocessor
     6      POSTSETUP   You supply data interactively for postprocessor
     7      BOSORPOST   You launch a batch run of the postprocessor
     8      BOSORPLOT   You launch a batch run for plots
     9      MAINSETUP   You want to do a restart on the mainprocessor
    10      BOSORMAIN   You launch another batch run of mainprocessor
    11      POSTSETUP   More postprocessing desired
    12      BOSORPOST   Another batch run of the postprocessor
    13      BOSORPLOT   Another run for plots
    14      CLEANUP     Get rid of all NAME.* files except .DOC & .ALL
    15      GETSEGS     NAME.DOC file broken down into segments
    16      MODIFY      One of the segments modified in some way
    17      MODIFY      Same segment modified again (e.g. more nodes)
    18      MODIFY      Another segment or b.c.'s modified
    19      ASSEMBLE    Segment data reassembled
    20,etc     Go thru line numbers  3 - 13 again.

Note that you do not have to use MODIFY in order to change a case.
However, it is the safest way.  In certain cases, for example, when
you just want to change a dimension, it will doubtless be easier just
to quickly change the NAME.ALL file and then rerun.  However, if you
are at all in doubt, use the CLEANUP - GETSEGS - MODIFY - ASSEMBLE
route.

*********************************************************************


VII  BOSOR5 LIBRARIES AND ROUTINES....

For ease in handling recompilations, BOSOR5 has been divided into
a number of libraries.  These are listed below:

=======================================================================
  LIBRARY NAME      PURPOSES OF LIBRARY        SUBROUTINES IN LIBRARY
-----------------------------------------------------------------------

BOSOR5 UTILITIES        (used in all BOSOR5 processors)...

    ASSEMBLE        concatenate NAME.SEGn      ASSMBL, FOPENA
                    files into a NAME.ALL
                    file.

    GETSEGS         Split NAME.DOC file        GETSEG, FOPEN
                    into NAME.SEG files.

    MODIFY          Allow user to modify       MODIFY, EDSEG, CNAMES,
                    'NAME'.SEGn files.         BLANKX

    UTIL            miscellaneous              ERREX,FINDZ,INTER
                                               SR100T,STA,TIMRB

    PROMPTER        prompt for interactive     ANSWER,CONVRT,DATUM,I2C,
                    input                      IBLNK,PHOUT,PROMPT,ERREX
                                               ABORT2,ANSL1,NXITEM,
                                               READFF

    STOGET          store and retrieve         GETCOM, STORCM
                    labelled common blocks

       ------------   ------------------    --------------------

BOSOR5 PREPROCESSORS    ( INPUT,   BOSORREAD,    MODIFY)....

    INPUT           allow user to set up       INPUT, BOUNDY, SEGMT
                    a case interactively.      NFILE, NFILEB, RENEW

    QUESTIONS       Permit generation of       QUEST, MESH,
                    blocks of input data       GEOM, REFSUR, STA,
                    that can be used to        IMPERF, RINGS, LINLOD,
                    modify 'NAME'.SEG files    THERM, PRESS
                    without starting a case    GLOB1, GLOB2,
                    from scratch.              WALL, POLES, BOUND,
                                               JUNCT, RIGID 

    READIT          drive the preprocessor     READIT,RESTOR,TLOAD

    SEGMNT          input for nodal points     LOADRE,MESH,SEGMNT,
                    and loading on segment     STORIT

    GEOM            input for geometry of      ANGLE,ARCDRW,CURV,GEOM,
                    segment; imperfections     GEOM1,GEOM2,GEOM3,GEOM4,
                                               GEOM5,GEOMTY,GETZ,
                                               GMFIND,IMPERF,SHELL,
                                               URNDM

    RING            input for discrete rings   RGDATA, RNGSEG

    WALL            input for layered wall     CFB5,FINDTH,FUNCT,WALLCF

    HOOKUP          input for boundary and     CONSTR,GETBLK,GETIW,
                    junction conditions        HOOKUP,ISHIFT,SKILIN,
                                               SORT,WRCON,ZGLOBE

    ---------------  ----------------------  ---------------------

BOSOR5 MAINPROCESSORS     (MAINSETUP and  BOSORMAIN)

    MAINSETUP       input for main processor   MAINS

    MAIN            driver for mainprocessor   FACTOR,FACTR,FUNCT,
                                               LOADS,MAIN,MAIN1,
                                               MATMU4,SOLVE,TFUNCT,
                                               TLOAD

    PRE11           get axisymmetric pre-      APREB,FILLBP,GETWWP,
                    buckling states for        PGETB,PGETC,PRE11,
                    given load and material    PRERNG,PRESTS,SOLN
                    state

    PRE22           get prebuckling resultants  PLOCAL, PRE22

    PRE33           update material state at   CSTRAN,FDSBAR,FLOW,
                    a given load level (time)  PLAST,PRE33,PRNTC,RPLAST

    ARRAYS          set up bifurcation buck-   ARRAYS,FILLB,GETB1,GETC,
                    ling equations for non-    GETD,GETG,GETP,GETRNT,
                    symmetric buckling,        GETROT,GETWWD,STABIL
                    given n (circ. waves)

    BUCKLE          solve buckling eigen-      ADD2,BUCKLE,EBAND2,
                    value problem for given    ORTHO2,URNDM,VEC
                    circ. wave number, n

  ----------------  ------------------------  ----------------------

BOSOR5 POSTPROCESSORS     (POSTSETUP and  BOSORPOST)

    POSTSETUP       input data for postproc.   POSTS, BLOWUP

    POST            driver for postprocessor   DUMMY,FUNCT,LOADS,PINIT,
                                               PLOTS,POST,SR100T
                                               TLOAD, BLOWUP

    PLAST           get plastic strain state   FDSBAR,FLOW,PLAST,PRE33,
                                               PRNTC,RPLAST

    MODE            get buckling modes         LOCAL,MODE,POST22,PSTLOC
                    and prebuckling result-
                    ants

    PLOTIT          set up plot files          ARROW,AXIS,CSEG,CSEG10,
                                               DECML,ENDPLT,EOFTV,
                                               FRAMEV,GEOPLT,NUMBER,
                                               PLOT,PLOTI,PLOTIT,EXPAND
                                               PLOTOP,SCALEH,SYMBOL

   ----------------  -----------------------  ----------------------

=======================================================================

VIII VARIOUS BOSOR5 PROCESSORS...

There are several BOSOR5 processors, as listed below:

======================================================================
PROCESSOR NAME               PURPOSE OF PROCESSOR
----------------------------------------------------------------------

INPUT            Create BOSOR5 data file NAME.SEGn corresponding to
                 the nth structural segment. Data accumulated in this
                 file interactively.

                 Create BOSOR5 data file NAME.SEG(NSEG+1), where NSEG
                 is the number of structural segments, corresponding to
                 global data and constraint conditions. Data are
                 accumulated in this file interactively.

MODIFY           Modify the input data for one of the NAME.SEGn files.

ASSEMBLE         Concatenate the NAME.SEGn files into a NAME.ALL file.

GETSEGS          De-concatenate the NAME.DOC file into NAME.SEGn files.

BOSORREAD        The input data from NAME.ALL, which is a concatena-
                 tion of the files NAME.SEGn, are read in, and a new
                 annotated file NAME.DOC is generated.  This new
                 file can edited and used for future BOSOR5 batch runs
                 of the same case or user-made modifications of it. The
                 input data are massaged as needed for the BOSOR5 main
                 processor. Output is stored on the file NAME.OUT.

MAINSETUP        input data for the mainprocessor are provided by you
                 in an interactive mode. The input file NAME.IMP
                 contains your responses to MAINSETUP's prompts for
                 data. 

BOSORMAIN        The main part of the calculations for the case are
                 performed.  The file NAME.IMP is input and the file
                 NAME.MAI is output.

POSTSETUP        Input data for the postprocessor are provided by you
                 in an interactive mode. The file NAME.IPP contains
                 your responses to POSTSETUP's prompts for data.

BOSORPOST        The solution vectors are processed as determined by
                 the various analysis types (INDIC). Output is written
                 to the files NAME.PLT2 (for plotting) and
                 NAME.POS (for list output).  NAME.IPP is input
                 to BOSORPOST.

BOSORPLOT        The input plot file, NAME.PLT2, is used to generate
                 output files as shown above, plots can be created
                 using Xgraph, and by creating PostScript plot files
                 for printing on PostScript devices.

======================================================================

There are several BOSOR5 procedures, as listed below:

=======================================================================
PROCEDURE NAME                   PURPOSE OF PROCEDURE
-----------------------------------------------------------------------

input.com              Data are called for interactively. Files
                       NAME.SEGn are generated for later concatenation
                       via  ASSEMBLE.

assemble.com           Concatenates 'NAME'.SEGn files, n = 1,NSEG+1,
                       into 'NAME'.ALL file.

bosorread.com          Initiates batch run of BOSOR5 preprocessor.

mainsetup.com          Initiates interactive preparation of batch run
                       of BOSOR5 mainprocessor.

bosormain.com          Initiates batch run of BOSOR5 mainprocessor.

postsetup.com          Initiates interactive preparation of batch run
                       of BOSOR5 postprocessor.

bosorpost.com          Initiates batch run of BOSOR5 postprocessor.
bosorplot.com          Initiates run of BOSOR5 plot file generator.

getsegs.com           A procedure for splitting the 'NAME'.DOC file
                      into 'NAME'.SEGn files, n = 1, 2, 3,...(NSEG+1).
                      the command to give is  GETSEGS.  Make sure you
                      have a good 'NAME'.DOC file before you do this.
                      GETSEGS is especially useful if you want to add or
                      re-order the segments or do some editing on the
                      segment level.

modify.com            Modifies NAME.SEGn file in accordance with
                      interactive input from user.  After interactive
                      session, user can have the new NAME.SEGn file
                      checked by running it through INPUT and answering
                      "y" when asked if using an existing file.

cleanup.com           In the process of running a case, you may want
                       to start over. You can clear out old files with
                       the name 'NAME'.* and re-establish a new
                       'NAME'.ALL file. The 'NAME'.DOC file is used to
                       to do this, so make sure you have a good
                       'NAME'.DOC file before you give this command.

*********************************************************************

IX   LINKING THE BOSOR5 PROCESSORS.....

For compiling and linking procedures, see the Installation Instructions
and the makefile.{machine}, where machine is your machine type as entered
by the user when running bin/initialize.

**********************************************************************

X   LIST AND DISCUSSION OF SAMPLE CASE...


     A discussion of the test case appears in the file 1.DIS .
     The case is elastic-plastic collapse and bifurcation buckling of
     a ring-stiffened cylindrical shell   The webs of the rings are
     treated as shell branches   The shell was previously optimized
     with use of the PANDA computer program.  The files pertaining to
     this case are:

	-rw-r--r--  1 bushnell    66753 Jun 16  1990 1.ALL
	-rw-r--r--  1 bushnell     8545 May  7 16:51 1.DIS
	-rw-r--r--  1 bushnell    18516 Oct 25  1990 1.MA3
	-rw-r--r--  1 bushnell    19690 Oct 25  1990 1.MA2
	-rw-r--r--  1 bushnell    58075 Oct 25  1990 1.MA1
	-rw-r--r--  1 bushnell    66753 Oct 25  1990 1.DOC
	-rw-r--r--  1 bushnell    38162 May 21  1990 1.PRE
	-rw-r--r--  1 bushnell    30224 May 21  1990 1.PO2
	-rw-r--r--  1 bushnell    67757 May 21  1990 1.PO1 

   The input data for the case appear in 1.ALL.

-------------------------------------------------------------------

DISCUSSION OF SAMPLE CASE

The case is for an internally ring-stiffened cylindrical shell
subjected to uniform external hydrostatic pressure. The webs of all
the rings are modelled as shell branches; the flanges of the first
six rings are modelled as discrete rings; and the flanges of the
last two rings are treated as shell branches.  There is a shell
branch with a discrete ring at the bottom plane of symmetry in order
to demonstrate how to provide input. (Use 1/2 the modulus and 1/2
the stress coordinates of the stress-strain curve.)  The boundary
conditions for prebuckling are different from buckling.

The following table defines the files pertaining to this sample case:

=======================================================================
FILE NAME    INPUT/OUTPUT     INDIC      TYPE OF ANALYSIS      CPU TIME
-----------------------------------------------------------------------
1.ALL         input     not applicable   Preprocessor input  not applic.

1.DOC         output    not applicable   Preprocessing          1:38

1.PRE         output    not applicable   Preprocessing          1:38

1.MA1        input/output      0      nonlinear prebuckling     5:33

1.MA2        input/output      0      nonlinear prebuckling     4:40

1.PO1         in/out    not applicable      postprocessing      0:52

1.MA3        input/output     -3        bifurcation buckling    5:13

1.PO2         in/out    not applicable      Postprocessing      0:12
=======================================================================


It is known from a previous approximate analysis (with PANDA) that this
shell will collapse axisymmetrically and buckle (bifurcation) non-
symmetrically at about 2700 psi external pressure. The material will be
stressed beyond its proportional limit at this pressure.

The strategy used in this case is to first explore the axisymmetric
nonlinear behavior for pressures up to collapse, then to explore non-
symmetric bifurcation buckling.

The first mainprocessor run (1.MA1) explores the pressure range
from 2000 psi upward until convergence is no longer obtained at 2800
psi.  (Note that pressure is set equal to time, a convenient strategem
which you should use whenever possible.)   Note the difference in
convergence behavior from 2600 psi (time step 4) to 2800 psi (time step
5).  Collapse is very near 2800 psi.

We wish to obtain a finer definition of collapse, so in a restart
(1.MA2), we start at time step 4, 2600 psi, and increase time (load)
in increments of 50. Again, note the difference in convergence behavior
from time step 8  (2800 psi)  to time step 9 (2850 psi). Axisymmetric
collapse is definitely indicated between 2800 and 2850 psi.  This is
a fine enough definition, it is felt.

At this point we felt it a good idea to obtain list and plot output
of the state of the shell near the collapse load (1.PO1).

We still need to explore other failure modes, however, and this is the
purpose of the next mainprocessor run, 1.MA3. The results indicate
no bifurcation at loads below and including 2800 psi.  However, note
from the eigenvalues listed on the second-to-last page of 1.MA3
that bifurcation into 10 circumferential waves is imminent (the eigen-
value for 10 circ. waves is very small).  Note also, that the eigen-
value for n = 2 circ. waves is smaller than that for 4.  The n = 2 mode
corresponds to web sidesway, and is one of the critical modes predicted
by the PANDA program.

The buckling modes corresponding to n = 2 and n = 10 circumferential
waves are printed and plotted in 1.PO2 and the plot command
 BOSORPLOT that follows.

RUNSTREAM THAT PRODUCED 1.* RESULTS....

 COMMAND                            WHAT HAPPENED
-------------------------------------------------------------------
  INPUT           Segment data were provided interactively
  INPUT           More segment data and global data and constraint
                  conditions were provided interactively

  ASSEMBLE        1.SEG file were concatenated into 1.ALL

  BOSORREAD       BOSOR5 preprocessor was executed.

  MAINSETUP       Data for first mainprocessor run were provided
                  interactively. An image of this interactive session
                  is reproduced at the beginning of 1.MA1 .

  BOSORMAIN       The mainprocessor is executed. Behavior of the
                  structure is explored from 2000 psi to 2800 psi in
                  increments of 200 psi.  List output appears in
                  1.MA1  .

  MAINSETUP       Data for the second mainprocessor run were provided
                  interactively. An image of this interactive session
                  is reproduced at the beginning of 1.MA2 .

  BOSORMAIN       The mainprocessor is executed. Behavior of the
                  structure is explored from 2600 to 2850 psi in
                  increments of 50 psi.  Collapse between 2800 and
                  2850 psi is indicated List output appears in
                  1.MA2  .

  POSTSETUP       Data for the first postprocessor run were provided
                  interactively. An image of this interactive session
                  is reproduced at the beginning of 1.PO1 .

  BOSORPOST       The postprocessor is run in order to list the
                  displacements, stresses, and strains in user-selected
                  parts of the structure for the time 2800 psi.  Plot
                  files 1.LAB and 1.PLT2 are created.
                  List output appears in 1.PO1  .

  BOSORPLOT       Plot files are created.

  PLOT             Hard copies of plots are obtained.

  MAINSETUP       Data for the third mainprocessor run were provided
                  interactively.  An image of this interactive session
                  appears at the beginning of 1.MA3.  We are after
                  bifurcation buckling loads in this run.

  BOSORMAIN       The mainprocessor is run in order to get bifurcation
                  buckling load estimates for 2 to 12 circumferential
                  waves in increments of 2 circumferential waves. The
                  INDIC = -3 analysis branch is used, meaning that the
                  prebucking states from previous runs are used in the
                  analysis.  List output appears in 1.MA3  .

  POSTSETUP       Data for a postprocesor run were provided interact-
                  ively. An image of this interactive session appears
                  at the beginning of 1.PO2. We want a list and
                  plots of the buckling modes corresponding to 2 and
                  to 10 circumferential waves.

  BOSORPOST       The BOSOR5 postprocessor is run in order to get a
                  list of the buckling modes and set up files for plot-
                  ting the same.  List output appears in 1.PO2 .

  BOSORPLOT       Plot files of the buckling modes are set up and later
                  displayed or printed.
======================================================================
**********************************************************************


XI   EXAMPLE OF PART OF AN INTERACTIVE SESSION....

The following several pages demonstrate the interactive input
for part of CASE 1.  Several instances of the use of the HELP
mode are shown.  The interactive program would be a lot less
"chatty", of course, if the user were familiar with BOSOR5 and
therefore did not have to respond to calls for input data with 
"H(ELP)".

  INTERACTIVE INPUT AND FILES NAME.SEGn GENERATED FOR
             THE FIRST TWO SEGMENTS OF SAMPLE CASE

=====================================================================

$  INPUT
$Have any data already been provided by you for this case?=N
 BOSOR5 INPUT DATA, INTERACTIVE MODE                              
                                                                  
 Initial prompts are short, and contain data names a new user     
 will not be familiar with.  Please type HELP or H instead of     
 any datum called for, and you will get more information on that  
 datum.                                                           
                                                                  
 Page numbers contained in some of the prompts refer to the       
 original BOSOR5 user's manual, "BOSOR5--a computer program       
 for buckling of elastic-plastic complex shells of revolution     
 including large deflections and creep", Lockheed Missiles &      
 Space Co. Report LMSC-D407166, December 1974, Vol. 1: User's     
 manual, input data.  This user's manual contains additional      
 discussion and figures.                                          
                                                                  


 Please provide a title (42 characters or less)...

 OPTIMIZED RING-STIFF. CYL. WITH P(CR)=2710
$NSEG  = number of shell segments (less than 95)=12
$Have the data for all of the segments been provided by you?=N
$What segment number is this? (provide in increasing order)=1
                                                                  
 The following input must be provided by you for each             
 shell segment.  See p. P1 for a list of the types of             
 input data required.                                             
                                                                  
$NMESH=no. of node points (5=min.;98=max.)SEGMENT no.( 1)=H
                                                                  
 See p. 1.3, P3, and P4 for additional information on the         
 number and on the distribution of nodal points.                  
 Note that the maximum number of degrees of freedom for           
 the entire structure is limited to 2000 for the axisymmetric     
 nonlinear analysis, in which only u and w are present as         
 unknowns, and 3000 for buckling, vibration, or linear            
 nonsymmetric stress analysis, in which u, v, and w are           
 present as unknowns.  Formulas for the number of d.o.f.          
 are as follows...                                                
                                                                  
 For the axisymmetric analysis the total d. o. f. are:            
                                                                  
 d.o.f.= SUM[(NMESH(ISEG)+2)*2] +3*NSEG + 3*NCOND                 
                                                                  
 in which the SUM is taken over the number of segments NSEG       
 and NCOND is the number of points along the meridian at          
 which constraint or junction conditions are imposed.  For        
 the nonaxisymmetric bifurcation buckling analysis the            
 number of degrees of freedom is:                                 
                                                                  
 d.o.f.= SUM[(NMESH(ISEG)+2)*3] +4*NSEG + 4*NCOND                 
                                                                  
                                                                  
$NMESH=no. of node points (5=min.;98=max.)SEGMENT NO.( 1)=78
$NTYPEH= control integer (1 or 2 or 3) for nodal point spacing=H
                                                                  
  NTYPEH = 1 or 2 means variable spacing (use 1 rather than 2);   
  NTYPEH = 3 means constant spacing.                              
 EXAMPLE....                                                      
 Suppose you have a segment with NMESH = 50, and you wish         
 to concentrate nodal points at the beginning of the segment.     
 The following input data could be used...                        
 ================================================================ 
   DATUM    NAME OF DATUM          MEANING                        
 ---------------------------------------------------------------- 
   50          NMESH       number of nodes in segment             
    1          NTYPEH      NTYPEH = 1 means variable spacing      
    4          NHVALU      number of callouts along the meridian  
    1          IHVALU(1)   nodal point number, first callout      
   20          IHVALU(2)   nodal point number, second callout     
   21          IHVALU(3)   nodal point number, third callout      
   49          IHVALU(4)   nodal point number, fourth callout     
  0.1          HVALU(1)    spacing between 1st and 2nd nodes      
  0.1          HVALU(2)    spacing between 20th and 21st nodes    
  1.0          HVALU(3)    spacing between 21st and 22nd nodes    
  1.0          HVALU(4)    spacing between 49th and 50th nodes    
 ===============================================================  
$NTYPEH= control integer (1 or 2 or 3) for nodal point spacing=H
                                                                  
 In the above example IHVALU(i) are the nodal point callouts      
 for nodal point spacing and HVALU(i) are the spacings between    
 the callout and the next node.  Absolute values of the           
 spacings are not required; only relative values are needed,      
 such round numbers as 0.1, 1.0, or 0.2.  In BOSOR5 it is best    
 to keep the spacing constant over many nodes and then change     
 it abruptly, as is done in the above example, rather than to     
 vary the spacing gradually over many nodes.                      
                                                                  
$NTYPEH= control integer (1 or 2 or 3) for nodal point spacing=3
                                                                  
 Geometry of the current segment...                               
                                                                  
$NSHAPE= indicator (1,2 or 4) for geometry of meridian=H
                                                                  
 See pp. P7 and P9 for illustrations...                           
 NSHAPE = 1 means cylinder, cone, or plate (straight meridian)    
 NSHAPE = 2 means spherical, toroidal, or ogival                  
            (constant meridional curvature)                       
 NSHAPE = 3 not used                                              
 NSHAPE = 4 means ellipsoidal or general shape (use with          
            caution. If possible build up a complex shape         
            with use of NSHAPE = 1 and NSHAPE = 2 segments.       
                                                                  
$NSHAPE= indicator (1,2 or 4) for geometry of meridian=1
$R1     = radius at beginning of segment (see p. P7)=44.214
$Z1     = axial coordinate at beginning of segment=0
$R2     = radius at end of segment=44.214
$Z2     = axial coordinate at end of segment=63.085
                                                                  
 Imperfection geometry....                                        
                                                                  
$IMP   = indicator for imperfection (0=none, 1=some)=0
$NTYPEZ= control (1 or 3) for reference surface location=H
                                                                  
 NTYPEZ = 1 means that the distance from the shell wall           
 leftmost surface to the reference surface varies along           
 the meridian.  By "leftmost" we mean as we face in the           
 direction of increasing meridional arc length, s.  See           
 the figure (a) on p. P13.                                        
                                                                  
 NTYPEZ = 3 means that the distance from  the  leftmost           
 surface of the wall to the reference surface is const-           
 ant as we proceed along the meridian, s.                         
                                                                  
$NTYPEZ= control (1 or 3) for reference surface location=3
$ZVAL  = distance from leftmost surf. to reference surf.=H
                                                                  
 See the figures on pp. P13, P15, and P17.                        
                                                                  
$ZVAL  = distance from leftmost surf. to reference surf.=0
$Do you want to print out r(s), r'(s), etc. for this segment?=N
$NRINGS= number (max=20) of discrete rings in this segment=H
                                                                  
 Up to 20 rings are permitted in one segment; up to 50            
 rings in the entire structure.  If line loads are                
 applied at some station, the user must supply a fake             
 ring, even if no ring is actually present in the struct-         
 ure at that point.  This is because all line loads are           
 considered to act at discrete ring centroids.                    
                                                                  
$NRINGS= number (max=20) of discrete rings in this segment=0
$Do you want general information on loading?=Y
                                                                  
 The following input is related to loading of this                
 segment.  All loads are considered to be axisymmetric            
 and to be products of spatial times temporal functions.          
 For example, the pressure, p(s,time), is given by:               
   p(s,time) = Po(s) * f(time)                                    
 in which s is the meridional arc length.  In this section        
 you will be asked to provide only the spatial variation          
 of the loads [e.g. Po(s) ] and pointers to the temporal          
 variations, not the temporal variations  f(t) themselves.        
 The f(t) to which the pointers point will be asked for           
 after data for all the shell segments have been provided         
 by you.  (See pp. P30-P31 for discussion and illustrations.)     
                                                                  
 There are three types of loading:                                
 1. temperature                                                   
 2. normal pressure and meridional traction, and                  
 3. line loads applied at centroids of discrete rings.            
                                                                  
 Temperature rise (+) above or fall (-) below that                
 corresponding to the zero stress state. You will be           
 asked to provide distributions along the meridian                
 and through the thickness. (See pp. P32-P39)                     
                                                                  
$NTSTAT = number of temperature callout points along meridian=H
                                                                  
 NTSTAT = 0 means no temperature distrib. to be specified;        
 NTSTAT = 1 means temperature is uniform along meridian;          
 NTSTAT > 1 means temperature is nonuniform along meridian.       
                                                                  
 If NTSTAT > 1 you will be asked to provide callout points        
 (See illustrations on p. P33 and p. P35).  BOSOR5 will           
 automatically linearly interpolate between callout points.       
 Make sure to include end points of the shell segment in          
 determining NTSTAT.                                              
                                                                  
$NTSTAT = number of temperature callout points along meridian=0
                                                                  
 Next, provide input for normal pressure and meridional           
 traction...                                                      
                                                                  
$NPSTAT = number of meridional callouts for pressure=H
                                                                  
 NPSTAT = 0 means no pressure or meridional traction;             
 NPSTAT = 1 means uniform distributed loading;                    
 NPSTAT > 1 means meridionally nonuniform loading.                
                                                                  
 In determining NPSTAT, please include the endpoints              
 of the shell segment.  BOSOR5 linearly interpolates              
 the pressure and meridional traction between callout             
 points that you will provide along the meridian.                 
 See the illustration at the top of p. P45.                       
                                                                  
$NPSTAT = number of meridional callouts for pressure=1
$PN = normal pressure, positive as shown on p. P41.=H
                                                                  
 The normal pressure is positive if it pushes you to              
 the right as you travel in the direction of increasing           
 meridional arc length, s.  The actual pressure is                
 represented as a product                                         
                                                                  
    P  =  PN * f(time)                                            
                                                                  
 in which the function of time remains to be specified.           
 (See the comments on pp. P30 and P31.)                           
                                                                  
$PN = normal pressure, positive as shown on p. P41.=-1.0
$PT = meridional traction, positive along increasing s.=0
$ISTEP = control integer for time variation of pressure=H
                                                                  
 Note that the same time function is to be associated             
 with both the normal pressure and the meridional                 
 traction.                                                        
                                                                  
 The control integer, ISTEP, is a pointer which will              
 cause the appropriate function of time to be associated          
 with the spatial pressure distribution that you have             
 just provided.  Different functions of time can be               
 associated with the pressure distributions in                    
 different shell segments.  The exact nature of these             
 time functions will be asked of you later.  Right now            
 all you need do is to specify 1 or 2 or 3, or other              
 simple integer.  Start with an appropriate value which           
 depends on what other loads you have already specified           
 in this case up to now.  ISTEP should be unity if this           
 is the first load ever specified in this case.                   
                                                                  
 Each time a new time function is to be introduced, use           
 a higher integer (higher by 1) than has ever been used           
 before to specify the time variation of any load, whether        
 it be for a previously specified temperature distribution,       
 pressure or surface traction distribution, or line load.         
 This word 'previous' includes loads that you have                
 specified in previous segments as well as those specified        
 previously in the current segment.                               
                                                                  
$ISTEP = control integer for time variation of pressure=1
$Do you want to print out distributed loads along meridian?=N
                                                                  
 Next, please provide line loads for this shell segment...        
                                                                  
$LINTYP = control for line loads (0 = none;  1 = some)=H
                                                                  
 Line loads must always be associated with a discrete ring,       
 and they are assumed to act at the discrete ring centroid,       
 as shown in the Fig. at the bottom of p. P47.  Note that         
 hydrostatic pressure gives rise to line loads, pr/2, at          
 the ends of the shell structure, thus requiring you to use       
 LINTYP = 1 for those segments in which pr/2 acts.                
                                                                  
$LINTYP = control for line loads (0 = none;  1 = some)=0
                                                                  
 Input for orthotropic layered wall construction follows.         
 Note...circumferential or meridional stiffeners can be           
 included by smearing their properties as shown on p. P55         
 and as described below.                                          
                                                                  
$Do you want to include smeared stiffeners?=N
$LAYERS = number of layers (max. = 6)=H
                                                                  
 Be sure to include in LAYERS any layers corresponding            
 to smeared stringers and/or smeared rings.                       
 Layers are numbered from left-to-right, as shown in the          
 figure on the bottom of p. P51.  "left" and "right" are          
 based on the assumption that you are facing in the direction     
 of increasing meridional arc length, s.                          
                                                                  
$LAYERS = number of layers (max. = 6)=1
$Are all the layers of constant thickness?=Y
$MATL = type of material for shell wall layer no.( 1)=1
$T(i) = thickness of ith layer (i=1 = leftmost), T( 1)=.822
$G(i) = shear modulus of ith layer, G( 1)=6923000.
$EX(I)= modulus in meridional direction, EX( 1)=18000000.
$EY(I)= modulus in circumferential direction, EY(1)=18000000.
$UXY(i)= Poisson's ratio (EY*UXY = EX*UYX).   UXY( 1)=.3
$ALPHA1(i)=coef. thermal exp. in merid. direction, ALPHA1( 1)=0
$ALPHA2(i)=coef. thermal exp. in circ. direction, ALPHA2( 1)=0
$Do you wish to include plasticity in this segment?=Y
$Do you wish to include creep in this segment?=N

 Shell wall layer no. 1.  A stress-strain curve
 the material of this layer must be provided by you
 if the same matrial has not appeared in a previous
 layer of this segment or in the shell wall of a
 previous shell segment.  Note that you must provide
 a stress-strain curve here even if the same material
 has been specified previously for a discrete ring
 segment.

$Is this a new shell wall material?=Y

 Stress-strain curve for material in shell wall
 layer no. 1 . . .

$NPOINT = number of points in s.s.curve, layer no.( 1)=H
                                                                  
 Please include the stress,strain coordinate (0, 0) in            
 your determination of a value for NPOINT. NPOINT must            
 be greater than or equal to 2 and less than 20.  If the          
 material is elastic rather than elastic-plastic, use             
 NPOINT = 2; use 0. and 1. for the strain coordinates; and        
 use 0. and E (Young's modulus) for the stress coordinates.       
 See p. P55 for examples.                                         
                                                                  
$NPOINT = number of points in s.s.curve, layer no.( 1)=12
$NITEG=no. integration pts. thru thickness, layer no.( 1)=H
                                                                  
 Use 5 or 7 or 9.  5 is usually sufficient unless you are         
 simulating residual stress patterns due to cold bending.         
                                                                  
$NITEG=no. integration pts. thru thickness, layer no.( 1)=5
$Do you want to use power law for stress-strain curve?=N
$EPS(i)=strain coordinates of s-s curve, EPS( 1)=0
$EPS(i)=strain coordinates of s-s curve, EPS( 2)=.003889
$EPS(i)=strain coordinates of s-s curve, EPS( 3)=.0046
$EPS(i)=strain coordinates of s-s curve, EPS( 4)=.0054
$EPS(i)=strain coordinates of s-s curve, EPS( 5)=.006
$EPS(i)=strain coordinates of s-s curve, EPS( 6)=.0065
$EPS(i)=strain coordinates of s-s curve, EPS( 7)=.007
$EPS(i)=strain coordinates of s-s curve, EPS( 8)=.0078
$EPS(i)=strain coordinates of s-s curve, EPS( 9)=.009
$EPS(i)=strain coordinates of s-s curve, EPS(10)=.012
$EPS(i)=strain coordinates of s-s curve, EPS(11)=.018
$EPS(i)=strain coordinates of s-s curve, EPS(12)=.022
$SIG(i)=stress coordinates of s-s curve, SIG( 1)=0
$SIG(i)=stress coordinates of s-s curve, SIG( 2)=70000
$SIG(i)=stress coordinates of s-s curve, SIG( 3)=80000
$SIG(i)=stress coordinates of s-s curve, SIG( 4)=90000
$SIG(i)=stress coordinates of s-s curve, SIG( 5)=96000
$SIG(i)=stress coordinates of s-s curve, SIG( 6)=100000
$SIG(i)=stress coordinates of s-s curve, SIG( 7)=103500
$SIG(i)=stress coordinates of s-s curve, SIG( 8)=107000
$SIG(i)=stress coordinates of s-s curve, SIG( 9)=115000
$SIG(i)=stress coordinates of s-s curve, SIG(10)=118000
$SIG(i)=stress coordinates of s-s curve, SIG(11)=124000
$SIG(i)=stress coordinates of s-s curve, SIG(12)=125000
$Do you want to have C(i,j) printed for this segment?=N

-------------------------------------------------------------------

  FILE NAME.SEG1 GENERATED BY THE ABOVE INTERACTIVE RUN

  OPTIMIZED RING-STIFF. CYL. WITH P(CR)=2710     
        12      $ NSEG  = number of shell segments (less than 25)
        78      $ NMESH=no. of node points (5=min.;98=max.)SEGMENT NO.( 1)
         3      $ NTYPEH= control integer (1 or 2 or 3) for nodal point spacing
         1      $ NSHAPE= indicator (1,2 or 4) for geometry of meridian
   44.21400     $ R1     = radius at beginning of segment (see p. P7)
         0      $ Z1     = axial coordinate at beginning of segment
   44.21400     $ R2     = radius at end of segment
   63.08500     $ Z2     = axial coordinate at end of segment
         0      $ IMP   = indicator for imperfection (0=none, 1=some)
         3      $ NTYPEZ= control (1 or 3) for reference surface location
         0      $ ZVAL  = distance from leftmost surf. to reference surf.
      N         $ Do you want to print out r(s), r'(s), etc. for this segment?
         0      $ NRINGS= number (max=20) of discrete rings in this segment
      Y         $ Do you want general information on loading?
         0      $ NTSTAT = number of temperature callout points along meridian
         1      $ NPSTAT = number of meridional callouts for pressure
  -1.000000     $ PN = normal pressure, positive as shown on p. P41.
         0      $ PT = meridional traction, positive along increasing s.
         1      $ ISTEP = control integer for time variation of pressure
      N         $ Do you want to print out distributed loads along meridian?
         0      $ LINTYP = control for line loads (0 = none;  1 = some)
      N         $ Do you want to include smeared stiffeners?
         1      $ LAYERS = number of layers (max. = 6)
      Y         $ Are all the layers of constant thickness?
         1      $ MATL = type of material for shell wall layer no.( 1)
  0.8220000     $ T(i) = thickness of ith layer (i=1 = leftmost), T( 1)
   6923000.     $ G(i) = shear modulus of ith layer, G( 1)
  0.1800000E+08 $ EX(i)= modulus in meridional direction, EX( 1)
  0.1800000E+08 $ EY(i)= modulus in circumferential direction, EY( 1)
  0.3000000     $ UXY(i)= Poisson's ratio (EY*UXY = EX*UYX).   UXY( 1)
         0      $ ALPHA1(i)=coef. thermal exp. in merid. direction, ALPHA1( 1)
         0      $ ALPHA2(i)=coef. thermal exp. in circ. direction, ALPHA2( 1)
      Y         $ Do you wish to include plasticity in this segment?
      N         $ Do you wish to include creep in this segment?
      Y         $ Is this a new shell wall material?
        12      $ NPOINT = number of points in s.s.curve, layer no.( 1)
         5      $ NITEG=no. integration pts. thru thickness, layer no.( 1)
      N         $ Do you want to use power law for stress-strain curve?
         0      $ EPS(i)=strain coordinates of s-s curve, EPS( 1)
  0.3889000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 2)
  0.4600000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 3)
  0.5400000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 4)
  0.6000000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 5)
  0.6500000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 6)
  0.7000000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 7)
  0.7800000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 8)
  0.9000000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 9)
  0.1200000E-01 $ EPS(i)=strain coordinates of s-s curve, EPS(10)
  0.1800000E-01 $ EPS(i)=strain coordinates of s-s curve, EPS(11)
  0.2200000E-01 $ EPS(i)=strain coordinates of s-s curve, EPS(12)
         0      $ SIG(i)=stress coordinates of s-s curve, SIG( 1)
     70000      $ SIG(i)=stress coordinates of s-s curve, SIG( 2)
     80000      $ SIG(i)=stress coordinates of s-s curve, SIG( 3)
     90000      $ SIG(i)=stress coordinates of s-s curve, SIG( 4)
     96000      $ SIG(i)=stress coordinates of s-s curve, SIG( 5)
    100000      $ SIG(i)=stress coordinates of s-s curve, SIG( 6)
    103500      $ SIG(i)=stress coordinates of s-s curve, SIG( 7)
    107000      $ SIG(i)=stress coordinates of s-s curve, SIG( 8)
    115000      $ SIG(i)=stress coordinates of s-s curve, SIG( 9)
    118000      $ SIG(i)=stress coordinates of s-s curve, SIG(10)
    124000      $ SIG(i)=stress coordinates of s-s curve, SIG(11)
    125000      $ SIG(i)=stress coordinates of s-s curve, SIG(12)
      N         $ Do you want to have C(i,j) printed for this segment?

---------------------------------------------------------------------

$  INPUT

$Have any data already been provided by you for this case?=Y
$Have the data for all of the segments been provided by you?=N
$What segment number is this? (provide in increasing order)=2
                                                                  
 The following input must be provided by you for each             
 shell segment.  See p. P1 for a list of the types of             
 input data required.                                             
                                                                  
$NMESH=no. of node points (5=min.;98=max.)SEGMENT NO.( 1)=5
$NTYPEH= control integer (1 or 2 or 3) for nodal point spacing=3
                                                                  
 Geometry of the current segment...                               
                                                                  
$NSHAPE= indicator (1,2 or 4) for geometry of meridian=1
$R1     = radius at beginning of segment (see p. P7)=44.214
$Z1     = axial coordinate at beginning of segment=0
$R2     = radius at end of segment=37.364
$Z2     = axial coordinate at end of segment=0
                                                                  
 Imperfection geometry....                                        
                                                                  
$IMP   = indicator for imperfection (0=none, 1=some)=0
$NTYPEZ= control (1 or 3) for reference surface location=3
$ZVAL  = distance from leftmost surf. to reference surf.=.173
$Do you want to print out r(s), r'(s), etc. for this segment?=N
$NRINGS= number (max=20) of discrete rings in this segment=H
                                                                  
 Up to 20 rings are permitted in one segment; up to 50            
 rings in the entire structure.  If line loads are                
 applied at some station, the user must supply a fake             
 ring, even if no ring is actually present in the struct-         
 ure at that point.  This is because all line loads are           
 considered to act at discrete ring centroids.                    
                                                                  
$NRINGS= number (max=20) of discrete rings in this segment=1
$NTYPE = control for identification of ring location (2=z, 3=r)=H
                                                                  
 NTYPE = 2 means that locations of discrete rings will be         
 identified by axial coordinates, z(i), i= 1, NRINGS;             
                                                                  
 NTYPE = 3 means that locations of discrete rings will be         
 identified by radial coordinates, r(i), i=1, NRINGS.             
                                                                  
$NTYPE = control for identification of ring location (2=z, 3=r)=3
$R(I)  = radial coordinate of Ith ring, r( 1)=37.364
$NTYPER= type (0 or 1 ) of discrete ring no.( 1)=H
                                                                  
 0 means fake ring, needed as a place to "hang" a line load       
 1 indicates the presence of a real ring.  Data for the Kth       
   discrete ring in the current segment will be read in.          
   The discrete ring is considered to be composed of a            
   number of straight segments of uniform thickness. Control      
   integers are first read in to determine whether or not a       
   similar ring segment has been specified previously,            
   either in this current shell segment or in a previous          
   shell segment.  See pp. P20-P29 for input data.                
                                                                  
$NTYPER= type (0 or 1 ) of discrete ring no.( 1)=1
$NPARTS = number of segments in discrete ring no.( 1)=H
                                                                  
 For example, NPARTS = 3 for the three-segment discrete           
 ring shown on p. P21.                                            
$NPARTS = number of segments in discrete ring no.( 1)=1
                                                                  
$NGEOM = geometry type of ring segment no.( 1)=H
                                                                  
 If the geometry, as specified by the dimensions D1, D2,          
 PHI, T, and FL (See p. P23) of this ring segment is              
 different from any previously specified discrete ring            
 segment, set NGEOM equal to one plus the highest value           
 of NGEOM previously provided by you in this case. Note..         
 The first NGEOM must be 1  .  If the geometry of this            
 discrete ring segment is the same as that of some                
 previously specified discrete ring segment, set NGEOM            
 equal to the value of NGEOM which was first used when            
 that earlier segment was first specified.                        
                                                                  
$NGEOM = geometry type of ring segment no.( 1)=1
$NTEMP = type of temperature distribution in ring seg.( 1)=H
                                                                  
 The temperature is assumed to be uniform through the             
 thickness of the ring segment.  The way in which this            
 control integer is used is analogous to that described           
 for NGEOM.                                                       
                                                                  
$NTEMP = type of temperature distribution in ring seg.( 1)=1
$NMATL = type of material for ring segment no.( 1)=2
$INTEG = number of integration points for ring seg.( 1)=H
                                                                  
 Use 5 or 7 or 9.  Integration points are assumed by              
 BOSOR5 to be equally spaced along the ring segment length.       
 Simpson's rule is used for integrating.                          
                                                                  
 Note...Use of different values of INTEG in different             
 ring segments requires corresponding re-specification            
 of temperature distribution, even if this distribution           
 is identical to that in a previous ring segment.  This           
 is because the number of input quantities depends on             
 INTEG.  It is probably best to choose a value for INTEG          
 (5 is usually sufficient) and stay with it throughout            
 the case.                                                        
                                                                  
$INTEG = number of integration points for ring seg.( 1)=5
$NCREEP = control for creep of ring segment no.( 1)=H
                                                                  
 NCREEP = 0 means ring material does not creep                    
 NCREEP = 1 means ring material does creep                        
                                                                  
$NCREEP = control for creep of ring segment no.( 1)=0
$NUMBT = number of temperature distributions in seg.( 1)=H
                                                                  
 Must be 0 or 1 or 2 or 3.  You should usually use 0 or 1.        
 You might want to use 2 or 3 in order to simulate multiple       
 fabrication processes, such as cold bending followed by          
 welding.                                                         
                                                                  
$NUMBT = number of temperature distributions in seg.( 1)=0
$Are D1,D2,PHI,T,FL for this ring seg. same as for a previous?=N

 Next, provide ring segment geometry (see p. P25) for
 ring segment no. 1 . . .

$D1 = radial distance to beginning of ring segment( 1)=H
                                                                  
 Positive if the beginning of the ring segment lies               
 at a greater distance from the shell axis of                     
 revolution than does the attachment point of the                 
 ring to the shell; negative otherwise (See p. P25).              
                                                                  
$D1 = radial distance to beginning of ring segment( 1)=0
$D2 = axial distance to beginning of ring segment( 1)=H
                                                                  
 Positive if the beginning of the ring segment lies               
 above the attachment point of the ring to the shell;             
 negative otherwise.                                              
                                                                  
$D2 = axial distance to beginning of ring segment( 1)=-2.23
$PHI = angle in degrees of ring segment( 1)=H
                                                                  
 PHI is measured as shown in the figure on p. P25 .               
                                                                  
$PHI = angle in degrees of ring segment( 1)=90
$T = thickness of ring segment( 1)=H
                                                                  
 T is assumed to be uniform.  T is always the dimension           
 normal to the direction of integration (See p. P25)              
                                                                  
$T = thickness of ring segment( 1)=.261
$FL = length of ring segment( 1)=H
                                                                  
 FL is measured as shown in the fig. on p. P25.                   
                                                                  
$FL = length of ring segment( 1)=4.46
$Are TEMP1,TEMP2,TEMP3 identical to those of a previous seg.?=H
                                                                  
 TEMP1, TEMP2, and TEMP3 are temperature rise distributions       
 at integration points in the current discrete ring segment.      
 Three different temperature distributions (TEMP1, TEMP2, and     
 TEMP3) can be used for the same segment in order to simulate     
 multiple fabrication processes, such as cold bending and         
 subsequent welding of the rings to the shell.                    
                                                                  
$Are TEMP1,TEMP2,TEMP3 identical to those of a previous seg.?=N

 Material properties for ring segment no. 1.
 You must provide properties even though the same
 material may have been previously specified by you
 for a shell wall segment.  You need not specify
 material properties here if they have been previously
 specified for a ring segment.

$Is this ring mat'l same as a previously specified ring mat'l?=N
$E = elastic modulus of ring segment no.( 1)=9000000.
$ALPHA = thermal expansion coef. of ring segment no.( 1)=0
$Can the material of this ring segment go plastic?=Y
$NPOINT = no. of points used for s-s curve of ring seg.( 1)=H
                                                                  
 The stress-strain curve of the ring segment material             
 can be specified with up to 20 points. Please include            
 the (0, 0) point in your count of NPOINT. For purely             
 elastic material you must still read in a stress-strain          
 'curve'.  In such a case you can simply read NPOINT = 2          
 and then give (for example) 0. and 1. for the strain             
 coordinates and 0. and 10000000. for the stress                  
 coordinates, where 10000000. is the modulus of the segment.      
 (See the figure at the bottom of p. P27).                        
                                                                  
$NPOINT = no. of points used for s-s curve of ring seg.( 1)=12
$EPSILON = strain coord. of the s-s curve, EPS( 1)=0
$EPSILON = strain coord. of the s-s curve, EPS( 2)=.003889
$EPSILON = strain coord. of the s-s curve, EPS( 3)=.0046
$EPSILON = strain coord. of the s-s curve, EPS( 4)=.0054
$EPSILON = strain coord. of the s-s curve, EPS( 5)=.006
$EPSILON = strain coord. of the s-s curve, EPS( 6)=.0065
$EPSILON = strain coord. of the s-s curve, EPS( 7)=.007
$EPSILON = strain coord. of the s-s curve, EPS( 8)=.0078
$EPSILON = strain coord. of the s-s curve, EPS( 9)=.009
$EPSILON = strain coord. of the s-s curve, EPS(10)=.012
$EPSILON = strain coord. of the s-s curve, EPS(11)=.018
$EPSILON = strain coord. of the s-s curve, EPS(12)=.022
$SIGMA   = stress coord. of the s-s curve, SIG( 1)=0
$SIGMA   = stress coord. of the s-s curve, SIG( 2)=35000
$SIGMA   = stress coord. of the s-s curve, SIG( 3)=40000
$SIGMA   = stress coord. of the s-s curve, SIG( 4)=45000
$SIGMA   = stress coord. of the s-s curve, SIG( 5)=48000
$SIGMA   = stress coord. of the s-s curve, SIG( 6)=50000
$SIGMA   = stress coord. of the s-s curve, SIG( 7)=51750
$SIGMA   = stress coord. of the s-s curve, SIG( 8)=53500
$SIGMA   = stress coord. of the s-s curve, SIG( 9)=57500
$SIGMA   = stress coord. of the s-s curve, SIG(10)=59000
$SIGMA   = stress coord. of the s-s curve, SIG(11)=62000
$SIGMA   = stress coord. of the s-s curve, SIG(12)=62500
                                                                  
 Coordinates  (XS, YS) of the discrete ring shear center          
 must next be provided by you. (see Fig. on p.P28).               
 XS and YS are measured relative to the attachment                
 point of the ring on the reference surface of the shell.         
                                                                  
$XS = radial coordinate of shear center, ring no.( 1)=H
                                                                  
 See the figure on the bottom of p. P28 .  XS is                  
 positive if the radius to shear center is larger than the        
 radius to the ring attachment point on the shell                 
 reference surface; negative otherwise.                           
                                                                  
$XS = radial coordinate of shear center, ring no.( 1)=0
$YS = axial coordinate of shear center, ring no.( 1)=H
                                                                  
 Positive if shear center lies above the ring attachment          
 point.                                                           
                                                                  
$YS = axial coordinate of shear center, ring no.( 1)=0
$Do you want general information on loading?=N
                                                                  
 Temperature rise (+) above or fall (-) below that                
 corresponding to the zero stress state. You will be              
 asked to provide distributions along the meridian                
 and through the thickness. (See pp. P32-P39)                     
                                                                  
$NTSTAT = number of temperature callout points along meridian=0
                                                                  
 Next, provide input for normal pressure and meridional           
 traction...                                                      
                                                                  
$NPSTAT = number of meridional callouts for pressure=0
                                                                  
 Next, please provide line loads for this shell segment...        
                                                                  
$LINTYP = control for line loads (0 = none;  1 = some)=0
                                                                  
 Input for orthotropic layered wall construction follows.         
 Note...circumferential or meridional stiffeners can be           
 included by smearing their properties as shown on p. P55         
 and as described below.                                          
                                                                  
$Do you want to include smeared stiffeners?=N
$LAYERS = number of layers (max. = 6)=1
$Are all the layers of constant thickness?=Y
$MATL = type of material for shell wall layer no.( 1)=3
$T(i) = thickness of ith layer (i=1 = leftmost), T( 1)=.346
$G(i) = shear modulus of ith layer, G( 1)=3462000.
$EX(i)= modulus in meridional direction, EX( 1)=9000000.
$EY(i)= modulus in circumferential direction, EY( 1)=9000000.
$UXY(i)= Poisson's ratio (EY*UXY = EX*UYX).   UXY( 1)=.3
$ALPHA1(i)=coef. thermal exp. in merid. direction, ALPHA1( 1)=0
$ALPHA2(i)=coef. thermal exp. in circ. direction, ALPHA2( 1)=0
$Do you wish to include plasticity in this segment?=Y
$Do you wish to include creep in this segment?=N

 Shell wall layer no. 1.  A stress-strain curve
 the material of this layer must be provided by you
 if the same matrial has not appeared in a previous
 layer of this segment or in the shell wall of a
 previous shell segment.  Note that you must provide
 a stress-strain curve here even if the same material
 has been specified previously for a discrete ring
 segment.

$Is this a new shell wall material?=Y

 Stress-strain curve for material in shell wall
 layer no. 1 . . .

$NPOINT = number of points in s.s.curve, layer no.( 1)=12
$NITEG=no. integration pts. thru thickness, layer no.( 1)=5
$Do you want to use power law for stress-strain curve?=N
$EPS(i)=strain coordinates of s-s curve, EPS( 1)=0
$EPS(i)=strain coordinates of s-s curve, EPS( 2)=.003889
$EPS(i)=strain coordinates of s-s curve, EPS( 3)=.0046
$EPS(i)=strain coordinates of s-s curve, EPS( 4)=.0054
$EPS(i)=strain coordinates of s-s curve, EPS( 5)=.006
$EPS(i)=strain coordinates of s-s curve, EPS( 6)=.0065
$EPS(i)=strain coordinates of s-s curve, EPS( 7)=.007
$EPS(i)=strain coordinates of s-s curve, EPS( 8)=.0078
$EPS(i)=strain coordinates of s-s curve, EPS( 9)=.009
$EPS(i)=strain coordinates of s-s curve, EPS(10)=.012
$EPS(i)=strain coordinates of s-s curve, EPS(11)=.018
$EPS(i)=strain coordinates of s-s curve, EPS(12)=.022
$SIG(i)=stress coordinates of s-s curve, SIG( 1)=0
$SIG(i)=stress coordinates of s-s curve, SIG( 2)=35000
$SIG(i)=stress coordinates of s-s curve, SIG( 3)=40000
$SIG(i)=stress coordinates of s-s curve, SIG( 4)=45000
$SIG(i)=stress coordinates of s-s curve, SIG( 5)=48000
$SIG(i)=stress coordinates of s-s curve, SIG( 6)=50000
$SIG(i)=stress coordinates of s-s curve, SIG( 7)=51750
$SIG(i)=stress coordinates of s-s curve, SIG( 8)=53500
$SIG(i)=stress coordinates of s-s curve, SIG( 9)=57500
$SIG(i)=stress coordinates of s-s curve, SIG(10)=59000
$SIG(i)=stress coordinates of s-s curve, SIG(11)=62000
$SIG(i)=stress coordinates of s-s curve, SIG(12)=62500
$Do you want to have C(i,j) printed for this segment?=N

  FILE NAME.SEG2 GENERATED BY THE ABOVE INTERACTIVE RUN

-------------------------------------------------------

         5      $ NMESH=no. of node points (5=min.;98=max.)SEGMENT NO.( 1)
         3      $ NTYPEH= control integer (1 or 2 or 3) for nodal point spacing
         1      $ NSHAPE= indicator (1,2 or 4) for geometry of meridian
   44.21400     $ R1     = radius at beginning of segment (see p. P7)
         0      $ Z1     = axial coordinate at beginning of segment
   37.36400     $ R2     = radius at end of segment
         0      $ Z2     = axial coordinate at end of segment
         0      $ IMP   = indicator for imperfection (0=none, 1=some)
         3      $ NTYPEZ= control (1 or 3) for reference surface location
  0.1730000     $ ZVAL  = distance from leftmost surf. to reference surf.
      N         $ Do you want to print out r(s), r'(s), etc. for this segment?
         1      $ NRINGS= number (max=20) of discrete rings in this segment
         3      $ NTYPE = control for identification of ring location (2=z, 3=r)
   37.36400     $ R(I)  = radial coordinate of Ith ring, r( 1)
         1      $ NTYPER= type (0 or 1 ) of discrete ring no.( 1)
         1      $ NPARTS = number of segments in discrete ring no.( 1)
         1      $ NGEOM = geometry type of ring segment no.( 1)
         1      $ NTEMP = type of temperature distribution in ring seg.( 1)
         2      $ NMATL = type of material for ring segment no.( 1)
         5      $ INTEG = number of integration points for ring seg.( 1)
         0      $ NCREEP = control for creep of ring segment no.( 1)
         0      $ NUMBT = number of temperature distributions in seg.( 1)
      N         $ Are D1,D2,PHI,T,FL for this ring seg. same as for a previous?
         0      $ D1 = radial distance to beginning of ring segment( 1)
         0      $ D2 = axial distance to beginning of ring segment( 1)
        90      $ PHI = angle in degrees of ring segment( 1)
  0.2610000     $ T = thickness of ring segment( 1)
   4.460000     $ FL = length of ring segment( 1)
      N         $ Are TEMP1,TEMP2,TEMP3 identical to those of a previous seg.?
      N         $ Is this ring mat'l same as a previously specified ring mat'l?
   9000000.     $ E = elastic modulus of ring segment no.( 1)
         0      $ ALPHA = thermal expansion coef. of ring segment no.( 1)
      Y         $ Can the material of this ring segment go plastic?
        12      $ NPOINT = no. of points used for s-s curve of ring seg.( 1)
         0      $ EPSILON = strain coord. of the s-s curve, EPS( 1)
  0.3889000E-02 $ EPSILON = strain coord. of the s-s curve, EPS( 2)
  0.4600000E-02 $ EPSILON = strain coord. of the s-s curve, EPS( 3)
  0.5400000E-02 $ EPSILON = strain coord. of the s-s curve, EPS( 4)
  0.6000000E-02 $ EPSILON = strain coord. of the s-s curve, EPS( 5)
  0.6500000E-02 $ EPSILON = strain coord. of the s-s curve, EPS( 6)
  0.7000000E-02 $ EPSILON = strain coord. of the s-s curve, EPS( 7)
  0.7800000E-02 $ EPSILON = strain coord. of the s-s curve, EPS( 8)
  0.9000000E-02 $ EPSILON = strain coord. of the s-s curve, EPS( 9)
  0.1200000E-01 $ EPSILON = strain coord. of the s-s curve, EPS(10)
  0.1800000E-01 $ EPSILON = strain coord. of the s-s curve, EPS(11)
  0.2200000E-01 $ EPSILON = strain coord. of the s-s curve, EPS(12)
         0      $ SIGMA   = stress coord. of the s-s curve, SIG( 1)
     35000      $ SIGMA   = stress coord. of the s-s curve, SIG( 2)
     40000      $ SIGMA   = stress coord. of the s-s curve, SIG( 3)
     45000      $ SIGMA   = stress coord. of the s-s curve, SIG( 4)
     48000      $ SIGMA   = stress coord. of the s-s curve, SIG( 5)
     50000      $ SIGMA   = stress coord. of the s-s curve, SIG( 6)
     51750      $ SIGMA   = stress coord. of the s-s curve, SIG( 7)
     53500      $ SIGMA   = stress coord. of the s-s curve, SIG( 8)
     57500      $ SIGMA   = stress coord. of the s-s curve, SIG( 9)
     59000      $ SIGMA   = stress coord. of the s-s curve, SIG(10)
     62000      $ SIGMA   = stress coord. of the s-s curve, SIG(11)
    62500       $ SIGMA   = stress coord. of the s-s curve, SIG(12)
         0      $ XS = radial coordinate of shear center, ring no.( 1)
         0      $ YS = axial coordinate of shear center, ring no.( 1)
      N         $ Do you want general information on loading?
         0      $ NTSTAT = number of temperature callout points along meridian
         0      $ NPSTAT = number of meridional callouts for pressure
         0      $ LINTYP = control for line loads (0 = none;  1 = some)
      N         $ Do you want to include smeared stiffeners?
         1      $ LAYERS = number of layers (max. = 6)
      Y         $ Are all the layers of constant thickness?
         3      $ MATL = type of material for shell wall layer no.( 1)
  0.3460000     $ T(i) = thickness of ith layer (i=1 = leftmost), T( 1)
   3462000.     $ G(i) = shear modulus of ith layer, G( 1)
   9000000.     $ EX(i)= modulus in meridional direction, EX( 1)
   9000000.     $ EY(i)= modulus in circumferential direction, EY( 1)
  0.3000000     $ UXY(i)= Poisson's ratio (EY*UXY = EX*UYX).   UXY( 1)
         0      $ ALPHA1(i)=coef. thermal exp. in merid. direction, ALPHA1( 1)
         0      $ ALPHA2(i)=coef. thermal exp. in circ. direction, ALPHA2( 1)
      Y         $ Do you wish to include plasticity in this segment?
      N         $ Do you wish to include creep in this segment?
      Y         $ Is this a new shell wall material?
        12      $ NPOINT = number of points in s.s.curve, layer no.( 1)
         5      $ NITEG=no. integration pts. thru thickness, layer no.( 1)
      N         $ Do you want to use power law for stress-strain curve?
         0      $ EPS(i)=strain coordinates of s-s curve, EPS( 1)
  0.3889000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 2)
  0.4600000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 3)
  0.5400000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 4)
  0.6000000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 5)
  0.6500000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 6)
  0.7000000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 7)
  0.7800000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 8)
  0.9000000E-02 $ EPS(i)=strain coordinates of s-s curve, EPS( 9)
  0.1200000E-01 $ EPS(i)=strain coordinates of s-s curve, EPS(10)
  0.1800000E-01 $ EPS(i)=strain coordinates of s-s curve, EPS(11)
  0.2200000E-01 $ EPS(i)=strain coordinates of s-s curve, EPS(12)
         0      $ SIG(i)=stress coordinates of s-s curve, SIG( 1)
     35000      $ SIG(i)=stress coordinates of s-s curve, SIG( 2)
     40000      $ SIG(i)=stress coordinates of s-s curve, SIG( 3)
     45000      $ SIG(i)=stress coordinates of s-s curve, SIG( 4)
     48000      $ SIG(i)=stress coordinates of s-s curve, SIG( 5)
     50000      $ SIG(i)=stress coordinates of s-s curve, SIG( 6)
     51750      $ SIG(i)=stress coordinates of s-s curve, SIG( 7)
     53500      $ SIG(i)=stress coordinates of s-s curve, SIG( 8)
     57500      $ SIG(i)=stress coordinates of s-s curve, SIG( 9)
     59000      $ SIG(i)=stress coordinates of s-s curve, SIG(10)
     62000      $ SIG(i)=stress coordinates of s-s curve, SIG(11)
     62500      $ SIG(i)=stress coordinates of s-s curve, SIG(12)
      N         $ Do you want to have C(i,j) printed for this segment?
================================================================


XII  RECOMPILING, REGENERATING LIBRARIES, RE-LINKING

For compiling and linking procedures, see the Installation Instructions
and the makefile.{machine}, where machine is your machine type as entered
by the user when running bin/initialize.

