C=DECK      QUESTIONSLIB
C
C  THIS IS THE QUESTIONS LIBRARY (SOURCE FILE)
C
C
C  200-SEGMENT VERSION OF BOSOR5
C
C=DECK      QUEST
      SUBROUTINE QUEST(CASE,ITYPE)
C
C  PURPOSE OF THIS PROGRAM IS TO ALLOW USER TO ANSWER QUESTIONS
C  FOR ANY PORTION OF A BOSOR INPUT DECK. THE USER CAN THEN INSERT
C  THE LITTLE FILE THEREBY GENERATED INTO THE PROPER PLACE IN THE
C  BOSOR INPUT DECK, THUS GENERATING A MODIFIED CASE WITHOUT HAVING
C  TO ANSWER ALL THE QUESTIONS FOR ALL THE SEGMENTS ALL OVER AGAIN.
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/PRMOUT/IFILE3,IFILE4   
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,ISEG
      CHARACTER*4 ANSOUT,CHARAC
      CHARACTER*28 CASE, FNAME
      CHARACTER*10 NAME1
      CHARACTER*11 NAME2,NAME3
      CHARACTER*32 VNAME
      LOGICAL ANSL1     
      logical exists
C
      CHARACTER*9 WORDS(30)
      DATA WORDS(1)/'MESH     '/
      DATA WORDS(2)/'GEOM     '/
      DATA WORDS(3)/'REFSURF  '/
      DATA WORDS(4)/'IMPERF   '/
      DATA WORDS(5)/'RINGS    '/
      DATA WORDS(6)/'LINELOADS'/
      DATA WORDS(7)/'TEMPTURE '/
      DATA WORDS(8)/'PRESSURE '/
      DATA WORDS(9)/'WALL     '/
      DATA WORDS(10)/'DUMMY    '/
      DATA WORDS(11)/'CONSTRAIN'/
      DATA WORDS(12)/'RIGIDBODY'/
      DATA WORDS(13)/'GLOBAL1  '/
      DATA WORDS(14)/'GLOBAL2  '/
      DATA WORDS(15)/'DUMMY    '/
C
      IFLAG1 = 0
      IFLAG2 = 0
      IFLAG3 = 0
      ISEG = 0
      IOUT = 3
      IFILE = 2   
      IFILE2= 4   
      IFILE3 = 7  
      INFILE = 5
C
C FOLLOWING USED FOR VAX/VMS..
c     OPEN(UNIT=IFILE,FILE='BOSOR5:PROMPT.DAT',STATUS='OLD',READONLY)
c     OPEN(UNIT=IFILE2,FILE='BOSOR5:PROMPT2.DAT',STATUS='OLD',READONLY)
c     OPEN(UNIT=IFILE3,FILE='BOSOR5:PROMPT3.DAT',STATUS='OLD',READONLY)
C END VAX/VMS OPEN STATEMENTS
C
C FOLLOWING USED FOR UNIX...
      OPEN(UNIT=IFILE,FILE='PROMPT.DAT',STATUS='OLD')
      OPEN(UNIT=IFILE2,FILE='PROMPT2.DAT',STATUS='OLD')
      OPEN(UNIT=IFILE3,FILE='PROMPT3.DAT',STATUS='OLD')
#if rs6k
      rewind(IFILE)
      rewind(IFILE2)
      rewind(IFILE3)
#endif
C END UNIX OPEN STATEMENTS
C
      inquire(FILE=case, EXIST=exists)
      if (exists) then
	OPEN(UNIT=17, FILE=case, STATUS='OLD')
#if rs6k
        rewind(17)
#endif
      else
	OPEN(UNIT=17, FILE=case, STATUS='NEW')
      endif
C
    3 CONTINUE
C
      REWIND IFILE3
      CALL DATUM(IFILE3,300,0,0,INT,REALL,CHARAC,10,0,1)
      CALL DATUM(IFILE3,320,1,1,ITYPE,REALL,CHARAC,10,0,1)
C
      FNAME = WORDS(ITYPE)
      I = INDEX(FNAME,' ')
      IF (I.NE.0) THEN
        VNAME = FNAME(:I-1)//'.QUE'
      ELSE
        VNAME = FNAME//'.QUE'
      ENDIF
C
      CALL REREAD(IOUT,IFILE3,INFILE,VNAME)
C
C
      GO TO (5,10,15,20,25,30,35,40,45,50,55,60,65,70,75),ITYPE
C
    5 CALL MESH
      GO TO 100
   10 CALL GEOM
      GO TO 100
   15 CALL REFSUR
      GO TO 100
   20 CALL IMPERF
      GO TO 100
   25 CALL RINGS(NRINGS)
      GO TO 100
   30 CONTINUE
   31 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,148,1,2,NRINGS,REALL,CHARAC,10,0,1)
      IF (NRINGS.LE.0) THEN
       WRITE(6,*)' NRINGS  MUST BE AT LEAST  1   BECAUSE YOU HAVE TO'
       WRITE(6,*)'         HAVE A "PHONY" RING TO "HANG" THE LOAD ON.'
       GO TO 31
      ENDIF
C
      IF (NRINGS.GT.20) THEN
       WRITE(6,*)' NRINGS MUST BE IN THE RANGE FROM   1   TO  20'
       GO TO 31
      ENDIF
C
      CALL LINLOD(NRINGS)
      GO TO 100
   35 CALL THERM
      GO TO 100
   40 CALL PRESS
      GO TO 100
   45 CALL WALL
      GO TO 100
   50 WRITE(6,*)' DUMMY POSITION.  TRY AGAIN.'
      GO TO 3
   55 CALL POLES
      CALL BOUND
      CALL JUNCT
      GO TO 100
   60 CALL RIGID
      GO TO 100
   65 CALL GLOB1(NSEG)
      GO TO 100
   70 CALL GLOB2(1)
      GO TO 100
   75 WRITE(6,*)' DUMMY POSITION.  TRY AGAIN.'
      GO TO 3
  100 CONTINUE
C
      CLOSE(UNIT=3,STATUS='KEEP')
      CLOSE(UNIT=10,STATUS='DELETE')
      END
C=DECK      GLOB1
      SUBROUTINE GLOB1(NSEG)
C
C  PURPOSE IS TO PROVIDE A TITLE AND READ IN THE NUMBER OF SEGMENTS.
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      DIMENSION TITLE(18)
      CHARACTER*4 ANSLOD
      CHARACTER*4 CHARAC
      LOGICAL ANSL1
C
      REWIND IFILE
   10 FORMAT(12A4)
C
C     TITLE . .	TITLE  OF CASE,	FIRST 41 CHARACTERS OF WHICH APPEAR ON
C		PLOTS.
C     NSEG = NO. OF SHELL SEGMENTS
C
      CALL DATUM(IFILE,1,0,0,INT,REALL,CHARAC,IOUT,0,1)
      WRITE(6,53)
   53 FORMAT(//' Please provide a title (42 characters or less)...'/)
      READ(INFILE,10) (TITLE(I),I=1,12)
      WRITE(IOUT,11) (TITLE(I),I=1,12)
   11 FORMAT(1X,12A4)
C
   12 CONTINUE
      CALL DATUM(IFILE,10,1,1,NSEG,REALL,CHARAC,IOUT,0,1)
      IF (NSEG.LT.1.OR.NSEG.GT.94) THEN
       WRITE(6,*)' NSEG  MUST BE IN THE RANGE FROM   1   TO   94'
       BACKSPACE(IOUT)
       REWIND IFILE
       GO TO 12
      ENDIF
C
C     NSEG = NUMBER OF SHELL SEGMENTS.
      RETURN
      END
C=DECK      MESH
      SUBROUTINE MESH
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO NODAL POINT DISTRIBUTION.
C
      DIMENSION IHVALU(100)
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,ISEG
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ NODAL POINT DISTRIBUTION FOLLOWS...')
   25 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,101,1,2,NMESH,REALL,CHARAC,IOUT,ISEG,1)
C
      IF (NMESH.LT.3.OR.NMESH.GT.98) THEN
      WRITE(6,*)' NMESH MUST BE IN THE RANGE FROM 3 TO 98'
      BACKSPACE(IOUT)
      GO TO 25
      ENDIF
      IF (IFLAG1.EQ.0) THEN
        WRITE(6,24) NMESH
   24   FORMAT(/' WARNING:  DO NOT FORGET TO MODIFY CONSTRAINT CONDI-'/
     1  ' TIONS TO CORRESPOND WITH THE NEW VALUE OF NMESH=',I3,' IN'/
     1  ' THIS SEGMENT!'/)
      ENDIF
C
   26 CONTINUE
      CALL DATUM(IFILE2,102,1,3,NTYPEH,REALL,CHARAC,IOUT,0,1)
      IF (NTYPEH.NE.1.AND.NTYPEH.NE.3) THEN
      WRITE(6,*)' NTYPEH MUST BE EITHER  1   OR   3  '
      BACKSPACE(IOUT)
      REWIND IFILE2
      GO TO 26
      ENDIF
C     
      NMESH1 = NMESH - 1
      GO TO (50,90,100),NTYPEH
   50 CONTINUE
      CALL DATUM(IFILE2,103,1,2,NHVALU,REALL,CHARAC,IOUT,0,1)
      IF (NHVALU.LT.2.OR.NHVALU.GT.20) THEN
      WRITE(6,*)' NHVALU MUST BE IN THE RANGE FROM  2   TO   20'
      BACKSPACE(IOUT)
      REWIND IFILE2
      GO TO 50
      ENDIF
C
      DO 55 I = 1,NHVALU
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
   54 CONTINUE
      CALL DATUM(IFILE2,104,1,2,IHVALU(I),REALL,CHARAC,IOUT,I,IPROMP)
      IF (I.EQ.1) THEN
       IF (IHVALU(I).NE.1) THEN
        WRITE(6,*)' THE FIRST VALUE, IHVALU(1), MUST BE  1'
        BACKSPACE(IOUT)
        REWIND IFILE2
        GO TO 54
       ENDIF
      ENDIF
      IF (I.EQ.NHVALU) THEN
       IF (IHVALU(I).NE.NMESH1) THEN
         WRITE(6,*)' THE LAST VALUE, IHVALU(NHVALU), MUST BE', NMESH1
         BACKSPACE(IOUT)
         REWIND IFILE2
         GO TO 54
       ENDIF
      ENDIF
   55 CONTINUE
      DO 75 I = 1,NHVALU
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,105,1,2,INT,HVALU,CHARAC,IOUT,I,IPROMP)
   75 CONTINUE
      GO TO 120
   90 CONTINUE
      DO 95 I = 1,NMESH1
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,105,1,2,INT,DW,CHARAC,IOUT,I,IPROMP)
   95 CONTINUE
      GO TO 120   
  100 CONTINUE
  120 CONTINUE
      RETURN
      END   
C=DECK      GEOM
      SUBROUTINE GEOM
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO MERIDIAN GEOMETRY
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5
      CHARACTER*4 ANSOUT
      LOGICAL ANSL1
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ REFERENCE SURFACE GEOMETRY FOLLOWS...')
      REWIND IFILE2
      CALL DATUM(IFILE2,110,0,0,INT,REALL,CHARAC,IOUT,0,1)
    5 CONTINUE
      CALL DATUM(IFILE2,111,1,2,NSHAPE,REALL,CHARAC,IOUT,0,1)
      IF (NSHAPE.NE.1.AND.NSHAPE.NE.2.AND.NSHAPE.NE.4) THEN
       WRITE(6,*)' NSHAPE MUST BE EITHER  1  or  2  or  4  '
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 5
      ENDIF
C
C
      GO TO (10,20,30,40),NSHAPE
C
   10 CONTINUE
      CALL DATUM(IFILE2,112,1,2,INT,R1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,113,1,1,INT,Z1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,114,1,1,INT,R2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,115,1,1,INT,Z2,CHARAC,IOUT,0,1)
      GO TO 100
   20 CONTINUE
C
      CALL DATUM(IFILE2,116,1,2,INT,R1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,117,1,1,INT,Z1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,118,1,1,INT,R2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,119,1,1,INT,Z2,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,120,1,2,INT,RC,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,121,1,1,INT,ZC,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,122,1,2,INT,SROT,CHARAC,IOUT,0,1)
      GO TO 100
C BEG FEB 2008
C 30  GO TO 100
   30 CONTINUE
      WRITE(6,'(/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/,A,/)')
     1' ********** THIS RUN WILL ABORT ***************',
     1' You cannot use GEOM3 because of element "lockup"',
     1' caused by the meridional radius of curvature changing',
     1' within a single shell segment. Generate the shell',
     1' geometry in another way, with multiple segments',
     1' in which the meridional curvature is constant in',
     1' each of these segments, such as toroidal segments',
     1' combined with cylindrical, conical, or flat segments.',
     1' *********** RUN ABORT *************************'
      CALL ERREX
C23456789012345678901234567890123456789012345678901234567890123456789012
C END FEB 2008
   40 CONTINUE
      CALL DATUM(IFILE2,123,1,1,NST,REALL,CHARAC,IOUT,0,1)
      IF (NST.NE.1.AND.NST.NE.4) THEN
        WRITE(6,*)' NST MUST BE EITHER   1    OR    4  '
        BACKSPACE(IOUT)
        REWIND IFILE2
        GO TO 40
      ENDIF
C
      GO TO (50,60,70,80),NST
50    CONTINUE    
      CALL DATUM(IFILE2,124,1,1,NRZIN,REALL,CHARAC,IOUT,0,1)
      IF (NRZIN.LT.5.OR.NRZIN.GT.50) THEN
      WRITE(6,*)' NRZIN MUST BE IN THE RANGE FROM   5   TO   50  '
      BACKSPACE(IOUT)
      REWIND IFILE2
      GO TO 50
      ENDIF
      DO 52 I = 1,NRZIN
      IPROMP = 1
      REWIND IFILE2
      CALL DATUM(IFILE2,125,1,1,INT,Z,CHARAC,IOUT,I,IPROMP)
      CALL DATUM(IFILE2,126,1,1,INT,R,CHARAC,IOUT,I,IPROMP)
      IF (I.EQ.1) THEN
         R1 = R
         Z1 = Z
      ENDIF
      IF (I.EQ.NRZIN) THEN
         R2 = R
         Z2 = Z
      ENDIF
C
   52 CONTINUE
      GO TO 90
C
   60 GO TO 90
   70 GO TO 90
   80 CONTINUE
C
      CALL DATUM(IFILE2,127,1,1,INT,ZMAX,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,128,1,1,INT,XMAX,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,129,1,1,INT,ZA  ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,130,1,1,INT,ZB  ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,131,1,2,INT,ALPHAT,CHARAC,IOUT,0,1)
C BEG JULY 1996
      INNER = 0
      IF (NSHAPE.EQ.4.AND.NST.EQ.4.AND.(ALPHAT-XMAX).GT.0.0) THEN
         REWIND IFILE3
         CALL DATUM(IFILE3,584,1,2,INT,REALL,ANSOUT,IOUT,0,1)
         IF (ANSL1('Y',ANSOUT,INFILE)) INNER = 1
      ENDIF
C END JULY 1996
C
      R1 = SQRT(1. -( (ZA-ZMAX)/ZMAX )**2 ) * XMAX + ALPHAT
      R2 = SQRT(1. -( (ZB-ZMAX)/ZMAX )**2 ) * XMAX + ALPHAT
      Z1 = ZA
      Z2 = ZB
   90 CONTINUE
      REWIND IFILE3
      CALL DATUM(IFILE3,602,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 100
  100 CONTINUE
C BEG NOV 1995
      IF (NSHAPE.EQ.4.AND.NST.EQ.4.AND.(ALPHAT-XMAX).GT.0.0) THEN
C BEG JULY 1996
C        REWIND IFILE3
C        CALL DATUM(IFILE3,582,1,2,INT,REALL,ANSOUT,IOUT,0,1)
         IF (INNER.EQ.0) GO TO 1000
         IF (ZA.GT.ZB) THEN
            TEMPZ = ZA
            ZA = ZB
            ZB = TEMPZ
         ENDIF
C END JULY 1996
         IF (ZB.GE.1.99*ZMAX) THEN
C  THIS IS A "TOP" (AS OPPOSED TO "BOTTOM") DOME...
            IF (ZB.LT.1.9999*ZMAX) THEN
               WRITE(IFILE4,225) ZB, 2.0*ZMAX
  225          FORMAT(/' END POINT ZB IS NOT NEAR ENOUGH TO TOP OF'/
     1       ' DOME TO PERMIT "REFLECTING" THE ELLIPSOIDAL SEGMENT'/
     1       ' ZB = ',1PE12.4,'. ZB MUST BE EQUAL TO',1PE12.4,'.'/
     1       ' RUN WILL NOW ABORT IN GEOM4. PLEASE RESET ZB.'/)
               CALL ERREX
            ENDIF
            IPROSS = 1
C BEG JULY 1996
C           RDIFF = R1 - ALPHAT
C           R2 = ALPHAT - RDIFF
            R1 = ALPHAT
            R2 = ALPHAT - XMAX
            Z1 = ZB
            Z2 = ZA
C END JULY 1996
         ENDIF
         IF (ZA.GE.0.0.AND.ZA.LE.0.001*ZMAX) THEN
C  THIS IS A "BOTTOM" (AS OPPOSED TO "TOP") DOME...
            IF (ZA.GT.0.00001*ZMAX) THEN
               WRITE(IFILE4,245) ZA
  245          FORMAT(/' STARTING POINT ZA IS NOT NEAR ENOUGH TO'/
     1       ' BOTTOM OF DOME TO PERMIT "REFLECTING" THE'/
     1       ' TORI-ELLIPSOIDAL SEGMENT. ZA = ',1PE12.4,'. ZA MUST'/
     1       ' BE EQUAL TO ZERO.'/
     1       ' RUN WILL NOW ABORT IN GEOM4. PLEASE RESET ZA.'/)
               CALL ERREX
            ENDIF
            IPROSS = 1
C BEG JULY 1996
C           RDIFF = R2 - ALPHAT
C           R1 = ALPHAT - RDIFF
            R1 = ALPHAT - XMAX
            R2 = ALPHAT
            Z1 = ZB
            Z2 = ZA
C END JULY 1996
         ENDIF
         IF (IPROSS.EQ.0) THEN
            WRITE(IFILE4,265)
  265       FORMAT(/' SOMETHING IS WRONG WITH YOUR INPUT IN GEOM4.'/
     1              ' PLEASE TRY AGAIN. TORI-ELLIPSOIDAL REFLECTING'/
     1              ' NOT PERMITTED FOR THE INPUT DATA YOU SUPPLIED.'/
     1              ' CHANGE YOUR ZA AND/OR ZB INPUT')
            CALL ERREX
         ENDIF
 1000 CONTINUE
      ENDIF
C END NOV 1995
C
      RETURN
      END
C=DECK      REFSUR
      SUBROUTINE REFSUR
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO REFERENCE SURFACE LOCATION
C  RELATIVE TO MATERIAL IN SHELL WALL.
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSOUT
      LOGICAL ANSL1
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ REFERENCE SURFACE LOCATION RELATIVE TO WALL')
C
   10 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,141,1,2,NTYPEZ,REALL,CHARAC,IOUT,0,1)
      IF (NTYPEZ.NE.1.AND.NTYPEZ.NE.3) THEN
       WRITE(6,*)' NTYPEZ MUST BE EITHER   1    OR   3  '
       BACKSPACE(IOUT)
       GO TO 10
      ENDIF
      IPRM(1) = 142
      IPRM(2) = 143
C
      GO TO (30,60,80),NTYPEZ     
30    CONTINUE    
      CALL DATUM(IFILE2,142,1,2,NZVALU,REALL,CHARAC,IOUT,0,1)
      IF (NZVALU.LT.2.OR.NZVALU.GT.20) THEN
       WRITE(6,*)' NZVALU SHOULD BE IN THE RANGE FROM 2 TO 20'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 30
      ENDIF
      CALL STA(NZVALU)
C
      DO 55 J = 1,NZVALU
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,146,1,2,INT,ZVAL,CHARAC,IOUT,J,IPROMP)
   55 CONTINUE
C     
      GO TO 120   
   60 CONTINUE
      GO TO 120
80    CONTINUE    
      CALL DATUM(IFILE2,147,1,2,INT,ZVAL,CHARAC,IOUT,0,1)
120   CONTINUE    
C
      REWIND IFILE3
      CALL DATUM(IFILE3,601,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) RETURN
      RETURN
      END
C=DECK      STA
      SUBROUTINE STA(NPOINT)
C
C  PURPOSE IS TO ESTABLISH CALLOUT POINTS ALONG MERIDIAN OF SHELL
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5
C
   10 CONTINUE
      CALL DATUM(IFILE2,IPRM(2),1,2,NTYPE,REALL,CHARAC,IOUT,0,1)
      IF (NTYPE.NE.2.AND.NTYPE.NE.3) THEN
       WRITE(6,*)' NTYPE MUST BE EITHER   2   OR   3'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 10
      ENDIF
      IF (NTYPE.EQ.2.AND.IFLAG1.NE.0) THEN
       ZLONG = (ABS(Z1) + ABS(Z2))/2.
       DIFF = 0.
       IF (ZLONG.NE.0.) DIFF = ABS(Z2-Z1)/ZLONG
C BEG 7 MARCH 1989
       IF (DIFF.LT.0.0001) THEN
C END 7 MARCH 1989
         WRITE(6,*)' AXIAL COORDINATE IS UNSUITABLE CHOICE FOR'
         WRITE(6,*)' MERIDIONAL CALLOUTS SINCE Z2=Z1. CHOOZE NTYPE = 3'
         BACKSPACE(IOUT)
         REWIND IFILE2
         GO TO 10
       ENDIF
      ENDIF
      IF (NTYPE.EQ.3.AND.IFLAG1.NE.0) THEN
       RLONG = (ABS(R1) + ABS(R2))/2.
       DIFF = 0.
       IF (RLONG.NE.0.) DIFF = ABS(R2-R1)/RLONG
C BEG 7 MARCH 1989
       IF (DIFF.LT.0.0001) THEN
C END 7 MARCH 1989
         WRITE(6,*)' RADIAL COORDINATE IS UNSUITABLE CHOICE FOR'
         WRITE(6,*)' MERIDIONAL CALLOUTS SINCE R2=R1. CHOOZE NTYPE = 2'
         BACKSPACE(IOUT)
         REWIND IFILE2
         GO TO 10
       ENDIF
      ENDIF
      GO TO (40,50,70),NTYPE
   40 CONTINUE
C BEG SEP 2011 
      REWIND IFILE2
      DO 45 J = 1,NPOINT
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,267,1,2,IPOINT,REALL,CHARAC,IOUT,J,IPROMP)
   45 CONTINUE
      REWIND IFILE2
C END SEP 2011 
      GO TO 130
   50 CONTINUE
      DO 55 J = 1,NPOINT
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
   52 CONTINUE
      CALL DATUM(IFILE2,IPRM(2)+1,1,2,INT,Z,CHARAC,IOUT,J,IPROMP)
      IF (J.EQ.1.AND.IFLAG1.NE.0.AND.IFLAG2.EQ.0) THEN
       ZLONG = (ABS(Z1) + ABS(Z))/2.
       IF (ZLONG.EQ.0.) GO TO 55
       DIFF = ABS(Z1 - Z)/ZLONG
       IF (DIFF.LT.0.001) GO TO 55
       WRITE(6,53) Z1
   53  FORMAT(/' FIRST CALLOUT MUST CORRESPOND TO THE BEGINNING OF'/
     1         ' THE SEGMENT,  WHICH IS AT AXIAL STATION Z =',1PE12.4/)
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 52
      ENDIF
C
      IF (J.EQ.NPOINT.AND.IFLAG1.NE.0.AND.IFLAG2.EQ.0) THEN
       ZLONG = (ABS(Z2) + ABS(Z))/2.
       IF (ZLONG.EQ.0.) GO TO 55
       DIFF = ABS(Z2 - Z)/ZLONG
       IF (DIFF.LT.0.001) GO TO 55
       WRITE(6,54) Z2
   54  FORMAT(/' LAST CALLOUT MUST CORRESPOND TO THE END OF'/
     1         ' THE SEGMENT,  WHICH IS AT AXIAL STATION Z =',1PE12.4/)
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 52
      ENDIF
C
   55 CONTINUE
      GO TO 130   
   70 CONTINUE
      DO 75 J = 1,NPOINT
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
   72 CONTINUE
      CALL DATUM(IFILE2,IPRM(2)+2,1,2,INT,R,CHARAC,IOUT,J,IPROMP)
      IF (J.EQ.1.AND.IFLAG1.NE.0.AND.IFLAG2.EQ.0) THEN
       RLONG = ABS(R1+R)/2.
       IF (RLONG.EQ.0.) GO TO 75
       DIFF = ABS(R1 - R)/RLONG
       IF (DIFF.LT.0.001) GO TO 75
       WRITE(6,73) R1
   73  FORMAT(/' FIRST CALLOUT MUST CORRESPOND TO THE BEGINNING OF'/
     1         ' THE SEGMENT, WHICH IS AT RADIAL STATION R =',1PE12.4/)
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 72
      ENDIF
C
      IF (J.EQ.NPOINT.AND.IFLAG1.NE.0.AND.IFLAG2.EQ.0) THEN
       RLONG = ABS(R2+R)/2.
       IF (RLONG.EQ.0.) GO TO 75
       DIFF = ABS(R2 - R)/RLONG
       IF (DIFF.LT.0.001) GO TO 75
       WRITE(6,74) R2
   74  FORMAT(/' LAST CALLOUT MUST CORRESPOND TO THE END OF'/
     1         ' THE SEGMENT, WHICH IS AT RADIAL STATION R =',1PE12.4/)
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 72
      ENDIF
C
   75 CONTINUE
130   CONTINUE    
      RETURN
      END   
C=DECK      IMPERF
      SUBROUTINE IMPERF
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO AXISYMMETRIC IMPERFECTION
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
C BEG AUG 2005
      CHARACTER*4 ANSOUT,CHARAC
      LOGICAL ANSL1
C END AUG 2005
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ IMPERFECTION SHAPE FOLLOWS...')
      REWIND IFILE2
      CALL DATUM(IFILE2,132,0,0,INT,REALL,CHARAC,IOUT,0,1)
    7 CONTINUE
      CALL DATUM(IFILE2,133,1,1,IMP,REALL,CHARAC,IOUT,0,1)
      IF (IMP.NE.0.AND.IMP.NE.1) THEN
       WRITE(6,*)' IMP  MUST BE EITHER  0  or  1'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 7
      ENDIF
C
C
      IF (IMP.EQ.0) GO TO 200  
C
    9 CONTINUE
      CALL DATUM(IFILE2,134,1,2,ITYPE,REALL,CHARAC,IOUT,0,1)
C BEG DEC 1992
C BEG AUG 2005
      IF (ITYPE.NE.1.AND.ITYPE.NE.2.AND.ITYPE.NE.3
     1                             .AND.ITYPE.NE.4) THEN
       WRITE(6,*)' ITYPE MUST BE EITHER 1 OR 2 OR 3 OR 4'
C END AUG 2005
C END DEC 1992
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 9
      ENDIF
C
C BEG AUG 2005
C     GO TO (30,130,170),ITYPE
      GO TO (30,130,170,179),ITYPE
C END AUG 2005
30    CONTINUE    
C     RANDOM SERIES OF SINUSOIDAL IMPERFECTIONS 
C     
      CALL DATUM(IFILE2,135,1,1,INT,FM   ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,136,1,1,INT,C    ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,137,1,1,INT,FLMIN,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,138,1,1,INT,FLMAX,CHARAC,IOUT,0,1)
      GO TO 180   
  130 CONTINUE
C     
C     IMPERFECTION IS SIMPLE SINE WAVE    
C     
      CALL DATUM(IFILE2,139,1,1,INT,W0    ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,140,1,2,INT,WLNGTH,CHARAC,IOUT,0,1)
      GO TO 180   
170   CONTINUE    
C     DUMMY POSITION ,  TO BE FILLED IN BY USER.
C BEG DEC 1992
C  IMPERFECTION IS DETERMINISTIC SUM OF SINUSOIDS.
      CALL DATUM(IFILE2,135,1,1,INT,FM   ,CHARAC,IOUT,0,1)
      M = FM
      I = 0
171   CONTINUE
      I = I + 1
      REWIND IFILE2
      IF (I.GT.M) GO TO 173
      CALL DATUM(IFILE2,139,1,1,INT,W0    ,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,140,1,2,INT,WLNGTH,CHARAC,IOUT,0,1)
      GO TO 171
173   CONTINUE
C END DEC 1992
C BEG AUG 2005
      GO TO 180
C
179   CONTINUE
C     READ NORMAL DEFLECTION W AT SOME NODAL POINTS 
C
C23456789012345678901234567890123456789012345678901234567890123456789012
1792  CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,505,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,510,1,2,INT,AMPIMP,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,514,1,2,ISTART,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,516,1,2,NUMB,REALL,CHARAC,IOUT,0,1)
      I = 0
181   CONTINUE
      I = I + 1
      REWIND IFILE2
      IF (I.GT.NUMB) GO TO 1815
      CALL DATUM(IFILE2,520,1,2,INT,WSHAPE,CHARAC,IOUT,0,1)
      GO TO 181
1815  CONTINUE
      CALL DATUM(IFILE2,522,1,2,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 183
      GO TO 1792
183   CONTINUE
      REWIND IFILE2
C END AUG 2005
180   CONTINUE    
200   CONTINUE
      RETURN
      END   
C=DECK      RINGS
      SUBROUTINE RINGS(NRINGS)
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO DISCRETE RINGS
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5
      DIMENSION NTYPER(50)
      CHARACTER*4 ANSWER
      LOGICAL ANSL1
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ DISCRETE RING INPUT FOLLOWS...')
    3 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,148,1,2,NRINGS,REALL,CHARAC,IOUT,0,1)
      IF (NRINGS.EQ.0) GO TO 600
      IF (NRINGS.GT.20) THEN
      WRITE(6,*)' A MAXIMUM OF 20 RINGS IS ALLOWED IN ONE SEGMENT'
      BACKSPACE(IOUT)
      GO TO 3
      ENDIF
C
      IPRM(2)= 149
      IFLAG2 = 1
      CALL STA(NRINGS)
      IFLAG2 = 0
C
      DO 65 J = 1,NRINGS
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
   64 CONTINUE
      CALL DATUM(IFILE2,152,1,2,NTYPER(J),REALL,CHARAC,IOUT,J,IPROMP)
      IF (NTYPER(J).NE.0.AND.NTYPER(J).NE.1) THEN
      WRITE(6,*)' NTYPER MUST BE  0  or  1 '
      BACKSPACE(IOUT)
      REWIND IFILE2
      GO TO 64
      ENDIF
   65 CONTINUE
C
      DO 500 JRNG = 1,NRINGS
C
      NT = NTYPER(JRNG)
      IF (NT.EQ.0) NT = 2
      GO TO (70,500),NT
C
   70 CONTINUE
C
   72 CONTINUE
      REWIND IFILE2
      CALL DATUM(IFILE2,153,1,2,NPARTS,REALL,CHARAC,IOUT,JRNG,1)
      IF (NPARTS.LE.0.OR.NPARTS.GT.10) THEN
       WRITE(6,*)' NPARTS  MUST BE IN THE RANGE FROM 1 TO 10'
       BACKSPACE(IOUT)
       GO TO 72
      ENDIF
C
C
      DO 400 I = 1,NPARTS
C
      REWIND IFILE2
      IF (I.EQ.1.AND.JRNG.EQ.1)
     1 CALL DATUM(IFILE2,154,0,0,INT,REALL,CHARAC,IOUT,0,1)
C
   73 CONTINUE
      CALL DATUM(IFILE2,155,1,2,NGEOM,REALL,CHARAC,IOUT,I,1)
      IF (NGEOM.LE.0) THEN
       WRITE(6,*)' NGEOM  MUST BE  1  OR MORE.'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 73
      ENDIF
C
   74 CONTINUE
      CALL DATUM(IFILE2,156,1,2,NTEMP,REALL,CHARAC,IOUT,I,1)
      IF (NTEMP.LE.0) THEN
       WRITE(6,*)' NTEMP  MUST BE  1  OR MORE.'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 74
      ENDIF
C
   75 CONTINUE
      CALL DATUM(IFILE2,157,1,2,NMATL,REALL,CHARAC,IOUT,I,1)
      IF (NMATL.LE.0.OR.NMATL.GT.9) THEN
       WRITE(6,*)' NMATL  MUST BE IN THE RANGE FROM  1  TO  9'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 75
      ENDIF
C
   76 CONTINUE
      CALL DATUM(IFILE2,158,1,2,INTEG,REALL,CHARAC,IOUT,I,1)
      IF (INTEG.NE.5.AND.INTEG.NE.7.AND.INTEG.NE.9) THEN
       WRITE(6,*)' INTEG  MUST BE EITHER  5  or  7  or  9'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 76
      ENDIF
C
   77 CONTINUE
      CALL DATUM(IFILE2,159,1,2,NCREEP,REALL,CHARAC,IOUT,I,1)
      IF (NCREEP.NE.0.AND.NCREEP.NE.1) THEN
       WRITE(6,*)' NCREEP  MUST BE EITHER  0   or   1'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 77
      ENDIF
C
   78 CONTINUE
      CALL DATUM(IFILE2,160,1,2,NUMBT,REALL,CHARAC,IOUT,I,1)
      IF (NUMBT.NE.0.AND.NUMBT.NE.1.AND.NUMBT.NE.2.AND.NUMBT.NE.3) THEN
       WRITE(6,*)' NUMBT  MUST BE EITHER  0  or  1  or  2  or  3'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 78
      ENDIF
C
      CALL DATUM(IFILE2,161,1,1,INT,REALL,ANSWER,IOUT,0,1)
      IF (ANSL1('Y',ANSWER,INFILE)) GO TO 110
C
      WRITE(6,92) I
   92 FORMAT(/' Next, provide ring segment geometry (see p. P25) for'/
     1        ' ring segment no.',I2,' . . .'/)
      CALL DATUM(IFILE2,162,1,2,INT,D1,CHARAC,IOUT,I,1)
      CALL DATUM(IFILE2,163,1,2,INT,D2,CHARAC,IOUT,I,1)
      CALL DATUM(IFILE2,164,1,2,INT,PHI,CHARAC,IOUT,I,1)
      CALL DATUM(IFILE2,165,1,2,INT,T,CHARAC,IOUT,I,1)
      CALL DATUM(IFILE2,166,1,2,INT,FL,CHARAC,IOUT,I,1)
C
  110 CONTINUE
C
C     READ TEMPERATURE DISTRIBUTION FOR	THIS RING SEGMENT IF IT	HAS
C     NOT BEEN READ BEFORE. FIRST DETERMINE IF IT HAS BEEN READ	BEFORE.
      CALL DATUM(IFILE2,167,1,2,INT,REALL,ANSWER,IOUT,0,1)
      IF (ANSL1('Y',ANSWER,INFILE)) GO TO 170
      IF (NUMBT.EQ.0) GO TO 170
C
      WRITE(6,138) I
  138 FORMAT(/' Ring segment no.',I2,'.  First temperature rise'/
     1        ' distribution at integration points...'/)
      DO 155 JJ = 1,INTEG
      IPROMP = 1
      IF (JJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,168,1,2,INT,TEMP,CHARAC,IOUT,JJ,IPROMP)
  155 CONTINUE
C
      IF (NUMBT.EQ.1) GO TO 170
      WRITE(6,152)I
  152 FORMAT(/' Ring segment no.',I2,'.  Second temperature rise'/
     1        ' distribution at integration points...'/)
      DO 154 JJ = 1,INTEG
      IPROMP = 1
      IF (JJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,169,1,2,INT,TEMP2,CHARAC,IOUT,JJ,IPROMP)
  154 CONTINUE
C
      IF (NUMBT.EQ.2) GO TO 170
      WRITE(6,153) I
  153 FORMAT(/' Ring segment no.',I2,'.  Third temperature rise'/
     1        ' distribution at integration points...'/)
      DO 165 JJ = 1,INTEG
      IPROMP = 1
      IF (JJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,170,1,2,INT,TEMP3,CHARAC,IOUT,JJ,IPROMP)
  165 CONTINUE
C
  170 CONTINUE
C     READ MATERIAL PROPERTIES FOR THIS	RING SEGMENT IF	THEY HAVE NOT
C     BEEN READ	BEFORE.	FIRST CHECK TO SEE IF THEY HAVE	BEEN
      WRITE (6,212) I
  212 FORMAT(/' Material properties for ring segment no.',I2,'.'/
     1        ' You must provide properties even though the same'/
     1        ' material may have been previously specified by you'/
     1        ' for a shell wall segment.  You need not specify'/
     1        ' material properties here if they have been previously'/
     1        ' specified for a ring segment.'/)
      CALL DATUM(IFILE2,171,1,1,INT,REALL,ANSWER,IOUT,0,1)
      IF (ANSL1('Y',ANSWER,INFILE)) GO TO 260
C
      CALL DATUM(IFILE2,172,1,1,INT,E,CHARAC,IOUT,I,1)
      CALL DATUM(IFILE2,173,1,1,INT,ALPHA,CHARAC,IOUT,I,1)
      CALL DATUM(IFILE2,174,1,1,INT,REALL,ANSWER,IOUT,0,1)
      IF (ANSL1('N',ANSWER,INFILE)) GO TO 217
C
  214 CONTINUE
      CALL DATUM(IFILE2,175,1,2,NPOINT,REALL,CHARAC,IOUT,I,1)
      IF (NPOINT.LT.2.OR.NPOINT.GT.20) THEN
       WRITE(6,*)' NPOINT  MUST BE IN THE RANGE FROM   2  TO   20'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 214
      ENDIF
C
      DO 215 JJ = 1,NPOINT
      IPROMP = 1
      IF (JJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,176,1,1,INT,EPS,CHARAC,IOUT,JJ,IPROMP)
  215 CONTINUE
C
      DO 216 JJ = 1,NPOINT
      IPROMP = 1
      IF (JJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,177,1,1,INT,SIGMA,CHARAC,IOUT,JJ,IPROMP)
  216 CONTINUE
C
  217 CONTINUE
      IF (NCREEP.EQ.0) GO TO 235
      IF (JRNG.EQ.1) WRITE(6,225) I
  225 FORMAT(/' Creep properties (see p. P27 for creep law) for ring'/
     1        ' segment no.',I2,'.  Note that the coefficients RN,'/
     1        ' RM, RA, and RB should be such that the effective'/
     1        ' creep strain, EBAR(Creep), on p. P27 is in per cent,'/
     1        ' not in strain.'/)
      CALL DATUM(IFILE2,178,1,1,INT,RCREEN,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,179,1,1,INT,RCREEM,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,180,1,1,INT,RCREEA,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,181,1,1,INT,RCREEB,CHARAC,IOUT,0,1)
C
  235 CONTINUE
  260 CONTINUE
  400 CONTINUE
C     NOW READ POSITION	OF RING	SHEAR CENTER RELATIVE TO ATTACHMENT
C     POINT ON SHELL REFERENCE SURFACE,	XS	= RADIAL DISTANCE
C     YS =	AXIAL DISTANCE
      CALL DATUM(IFILE2,182,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,183,1,2,INT,XS,CHARAC,IOUT,JRNG,1)
      CALL DATUM(IFILE2,184,1,2,INT,YS,CHARAC,IOUT,JRNG,1)
C
      IF (NUMBT.EQ.0) GO TO 405
      CALL DATUM(IFILE2,185,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,186,1,2,INT,STEPT1,CHARAC,IOUT,0,1)
      IF (NUMBT.LT.2) GO TO 405
      CALL DATUM(IFILE2,187,1,1,INT,STEPT2,CHARAC,IOUT,0,1)
      IF (NUMBT.LT.3) GO TO 405
      CALL DATUM(IFILE2,188,1,1,INT,STEPT3,CHARAC,IOUT,0,1)
  405 CONTINUE
  500 CONTINUE
  600 CONTINUE
      RETURN
      END
C=DECK      THERM
      SUBROUTINE THERM
C
C   PURPOSE IS TO READ IN TEMPERATURE DISTRIBUTION IN SEGMENT...
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSLOD
      CHARACTER*4 CHARAC
      LOGICAL ANSL1
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ TEMPERATURE INPUT FOLLOWS...')
      REWIND IFILE2
      CALL DATUM(IFILE2,192,1,1,INT,REALL,ANSLOD,IOUT,0,1)
      IF (ANSL1('Y',ANSLOD,INFILE))
     1CALL DATUM(IFILE2,200,0,0,INT,REALL,CHARAC,IOUT,0,1)
C
C     NTSTAT = NO. OF MERIDIONAL CALLOUTS FOR TEMPERATURE DISTRIBUTION
C              NTSTAT = 0 = NO TEMPERATURE RISE ABOVE OR BELOW ZERO STR.
C     NTHICK = NO. OF VALUES OF TEMP. READ THRU THICKNESS.
C
      CALL DATUM(IFILE2,220,0,0,INT,REALL,CHARAC,IOUT,0,1)
   10 CONTINUE
      CALL DATUM(IFILE2,221,1,2,NTSTAT,REALL,CHARAC,IOUT,0,1)
      IF (NTSTAT.LT.0.OR.NTSTAT.GT.20) THEN
        WRITE(6,*)' NTSTAT MUST BE IN THE RANGE FROM  0  TO  20'
        BACKSPACE(IOUT)
        REWIND IFILE2
        GO TO 10
      ENDIF
C
      IF (NTSTAT.EQ.0) GO TO 340
   25 CONTINUE
      CALL DATUM(IFILE2,222,1,2,NTHICK,REALL,CHARAC,IOUT,0,1)
      IF (NTHICK.GT.0) GO TO 40
      WRITE (6,30)
   30 FORMAT(80H NTHICK MUST BE GREATER THAN ZERO IF NTSTAT IS GREATER T
     1HAN ZERO.                                                       /)
      BACKSPACE(IOUT)
      REWIND IFILE2
      GO TO 25
   40 CONTINUE
      IF (NTSTAT.EQ.1) GO TO 60
C
C     IDENTIFY MERIDIONAL CALLOUTS WHERE TEMP. DISTRIB. THRU THICKNESS
C                IS TO BE READ IN.
C
      CALL DATUM(IFILE2,224,0,0,INT,REALL,CHARAC,IOUT,0,1)
      IPRM(2) = 226
      CALL STA(NTSTAT)
   60 CONTINUE
      CALL DATUM(IFILE2,232,0,0,INT,REALL,CHARAC,IOUT,0,1)
      DO 70 I=1,NTSTAT
      REWIND IFILE2
      WRITE(6,63) I
   63 FORMAT(/' Temperature thru the thickness at meridional callout'/
     1        ' point no.',I3,' . . .'/)
C     NOW READ TEMPERATURE RISE THRU THICKNESS AT THIS MERIDIONAL STAT.
      JJJ = 0
      DO 65 J = 1,NTHICK
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,236,1,2,INT,TAXIAL,CHARAC,IOUT,JJJ,IPROMP)
   65 CONTINUE
C
   70 CONTINUE
      J1 = NTHICK + 1
      J2 = 2*NTHICK-2
      IF (J1.GT.J2) GO TO 330
      CALL DATUM(IFILE2,238,0,0,INT,REALL,CHARAC,IOUT,0,1)
      DO 100 I=1,NTSTAT
      REWIND IFILE2
C     NOW READ THICKNESS STATIONS WHERE TEMPERATURE IS CALLED OUT
C
C     YOU DON'T READ IN THE VALUES AT THE SURFACES.. ONLY THOSE
C      WITHIN THE WALL.  FOR EXAMPLE, IF YOU READ THE TEMPERATURE AT
C      5 STATIONS THRU THE THICKNESS, YOU ONLY READ 3 VALUES FOR THE
C      THICKNESS STATIONS. YOU DO NOT READ THE SURFACE VALUES.
C
      WRITE(6,93) I
   93 FORMAT(/' Thickness coordinates for temperature input at'/
     1        ' meridional callout point no.',I3,' . . . '/)
      JJJ = 0
      DO 95 J = J1,J2
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,242,1,2,INT,TAXIAL,CHARAC,IOUT,JJJ,IPROMP)
   95 CONTINUE
  100 CONTINUE
  330 CONTINUE
C
C     IDTEMP(ISEG) IS THE TIME FUNCTION TO BE ASSOCIATED WITH THE
C                  TEMPERATURE DISTRIBUTION
      CALL DATUM(IFILE2,244,1,2,IDTEMP,REALL,CHARAC,IOUT,0,1)
C
  340 CONTINUE
C
      RETURN
      END
C=DECK      PRESS
      SUBROUTINE PRESS
C
C   PURPOSE IS TO READ IN PRESSURE DISTRIBUTION...
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSLOD
      CHARACTER*4 CHARAC
      LOGICAL ANSL1
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ PRESSURE INPUT FOLLOWS...')
      REWIND IFILE2
      CALL DATUM(IFILE2,246,0,0,INT,REALL,CHARAC,IOUT,0,1)
   10 CONTINUE
      CALL DATUM(IFILE2,247,1,2,NPSTAT,REALL,CHARAC,IOUT,0,1)
      IF (NPSTAT.LT.0.OR.NPSTAT.GT.20) THEN
        WRITE(6,*)' NPSTAT MUST BE IN THE RANGE FROM  0  TO  20'
        BACKSPACE(IOUT)
        REWIND IFILE2
        GO TO 10
      ENDIF
C
C     NPSTAT = NUMBER OF MERIDIONAL STATIONS FOR PRESSURE CALLOUTS
C              NPSTAT = 0 MEANS NO PRESSURE OR MERIDIONAL TRACTION
C                NPSTAT = 1 MEANS UNIFORM PRESSURE
C                NPSTAT.GT. 1 MEANS NONUNIFORM PRESSURE
C
      IF (NPSTAT.GT.1) GO TO 360
      IF (NPSTAT.EQ.0) GO TO 460
C
      CALL DATUM(IFILE2,248,1,2,INT,PN,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,250,1,2,INT,PT,CHARAC,IOUT,0,1)
C
C     PN = NORMAL COMPONENT OF PRESSURE, POSITIVE IN + W DIRECTION
C     PT = MERIDIONAL COMPONENT, POSITIVE IN + U DIRECTION
      GO TO 400
  360 CONTINUE
C
C     IDENTIFY LOCATIONS FOR CALLOUTS FOR PRESSURE DISTRIBUTION.
C     PRESSURE WILL BE INTERPOLATED LINEARLY BETWEEN THESE CALLOUTS.
C
      CALL DATUM(IFILE2,252,0,0,INT,REALL,CHARAC,IOUT,0,1)
      IPRM(2) = 254
      CALL STA(NPSTAT)
C     NORMAL PRESSURE DISTRIBUTION READ IN
      CALL DATUM(IFILE2,258,0,0,INT,REALL,CHARAC,IOUT,0,1)
      DO 385 J = 1,NPSTAT
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,260,1,2,INT,P,CHARAC,IOUT,J,IPROMP)
  385 CONTINUE
C
C     MERIDIONAL TRACTION READ IN
      DO 387 J = 1,NPSTAT
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,262,1,2,INT,P,CHARAC,IOUT,J,IPROMP)
  387 CONTINUE
C
  400 CONTINUE
C     TIME-FUNCTION OF PRESSURE
C
C     ISTEP IS THE TIME FUNCTION OF BOTH MERIDIONAL AND NORMAL
C     PRESSURE DISTRIBUTIONS.  SAME FOR BOTH PN AND PT.
      CALL DATUM(IFILE2,264,1,2,ISTEP,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,265,1,1,INT,REALL,ANSLOD,IOUT,0,1)
C
  460 CONTINUE
C
      RETURN
      END
C=DECK      LINLOD
      SUBROUTINE LINLOD(NRINGS)
C
C   PURPOSE IS TO READ IN LINE LOADS...
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,ISEG
      CHARACTER*4 ANSLOD
      CHARACTER*4 CHARAC
      LOGICAL ANSL1
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ LINE LOAD INPUT FOLLOWS...')
      REWIND IFILE2
      CALL DATUM(IFILE2,266,0,0,INT,REALL,CHARAC,IOUT,0,1)
   10 CONTINUE
      CALL DATUM(IFILE2,268,1,2,LINTYP,REALL,CHARAC,IOUT,0,1)
      IF (LINTYP.NE.0.AND.LINTYP.NE.1) THEN
       WRITE(6,*)' LINTYP  MUST BE EITHER   0   or   1'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 10
      ENDIF
C
      IF (LINTYP.EQ.0) GO TO 570
C
C     LINTYP = 0  NO LINE LOADS
C     LINTYP = 1  YES LINE LOADS
C
C
      IF (NRINGS.EQ.0) THEN
        WRITE(6,*)' LINE LOADS CAN ONLY BE APPLIED AT DISCRETE RINGS.'
        WRITE(6,*)' IF YOU HAVE LINE LOADS IN THIS SEGMENT, YOU MUST'
        WRITE(6,*)' PUT A "PHONY" RING AT EACH MERIDIONAL STATION'
        WRITE(6,*)' WHERE THE LINE LOADS ARE APPLIED. '
        CALL ERREX
      ENDIF
      IF (IFLAG1.EQ.0) THEN
        WRITE(6,20) NRINGS
   20   FORMAT(/' WARNING: DO NOT FORGET TO MODIFY THE NUMBER OF'/
     1  ' RINGS, NRINGS=',I3,' IF YOU ARE CHANGING NRINGS IN ORDER TO'/
     1  ' ACCOMMODATE A NEW LINE LOAD. YOU CAN DO THIS BY DOING'//
     1  '                 MODIFY'//
     1  ' AGAIN ON THIS SEGMENT AFTER YOU COMPLETE THE CURRENT MODIFY.'/
     1    )
      ENDIF
C
C     V = AXIAL LINE LOAD, POSITIVE 'DOWNWARD'
C     HF= RADIAL LINE LOAD, POSITIVE 'OUTWARD'
C     FM= LINE MOMENT, POSITIVE CLOCKWISE
C     ISTEP1 = TYPE OF TIME FUNCTION FOR V
C     ISTEP2 = TYPE OF TIME FUNCTION FOR HF
C     ISTEP3 = TYPE OF TIME FUNCTION FOR FM
C
      CALL DATUM(IFILE2,269,1,1,INT,REALL,ANSLOD,IOUT,0,1)
      IF (ANSL1('N',ANSLOD,INFILE)) GO TO 5211
      JJJ = 0
      DO 521 K = 1,NRINGS
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,270,1,2,INT,V,CHARAC,IOUT,JJJ,IPROMP)
  521 CONTINUE
C
      JJJ = 0
      DO 524 K = 1,NRINGS
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,271,1,3,ISTEP1,REALL,CHARAC,IOUT,JJJ,IPROMP)
  524 CONTINUE
C
 5211 CALL DATUM(IFILE2,272,1,1,INT,REALL,ANSLOD,IOUT,0,1)
      IF (ANSL1('N',ANSLOD,INFILE)) GO TO 5221
      JJJ = 0
      DO 522 K = 1,NRINGS
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,273,1,2,INT,HF,CHARAC,IOUT,JJJ,IPROMP)
  522 CONTINUE
C
      JJJ = 0
      DO 526 K = 1,NRINGS
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,274,1,2,ISTEP2,REALL,CHARAC,IOUT,JJJ,IPROMP)
  526 CONTINUE
C
 5221 CALL DATUM(IFILE2,275,1,1,INT,REALL,ANSLOD,IOUT,0,1)
      IF (ANSL1('N',ANSLOD,INFILE)) GO TO 529
      JJJ = 0
      DO 523 K = 1,NRINGS
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,276,1,2,INT,FM,CHARAC,IOUT,JJJ,IPROMP)
  523 CONTINUE
C
      JJJ = 0
      DO 528 K = 1,NRINGS
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,280,1,2,ISTEP3,REALL,CHARAC,IOUT,JJJ,IPROMP)
  528 CONTINUE
  529 CONTINUE
  570 CONTINUE
C
      RETURN
      END
C=DECK      WALL
      SUBROUTINE WALL
C
C  PURPOSE IS TO ASK QUESTIONS RELATIVE TO SHELL WALL CONSTRUCTION
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      COMMON/SEGEND/R1,Z1,R2,Z2,IFLAG1,IFLAG2,IFLAG3,IFLAG4,ISEG
      DIMENSION MPROP(20),UXY(20),EX(20),EY(20)
      CHARACTER*4 ANSOUT,ANCREP(20)
      LOGICAL ANSL1
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ SHELL WALL CONSTRUCTION FOLLOWS...')
      REWIND IFILE2
      CALL DATUM(IFILE2,282,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,284,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 99
      CALL DATUM(IFILE2,285,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 57
      CALL DATUM(IFILE2,286,0,0,INT,REALL,CHARAC,IOUT,0,1)
   57 CALL DATUM(IFILE2,288,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      ISTR = 0
      ISTYPE = 0
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 84
      CALL DATUM(IFILE2,289,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      ISTR = 1
      IF (ANSL1('Y',ANSOUT,INFILE)) GO TO 82
      ISTR = 2
C
   82 CALL DATUM(IFILE2,290,1,2,ISTYPE,REALL,CHARAC,IOUT,0,1)
      IF (ISTYPE.NE.1.AND.ISTYPE.NE.2.AND.ISTYPE.NE.3) THEN
       WRITE(6,*)' ISTYPE  MUST BE EITHER  1  or  2  or  3'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 82
      ENDIF
C
   84 CALL DATUM(IFILE2,292,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IRNG = 0
      IRTYPE = 0
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 88
      CALL DATUM(IFILE2,293,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IRNG = 1
      IF (ANSL1('Y',ANSOUT,INFILE)) GO TO 86
      IRNG = 2
C
   86 CONTINUE
      IF (ISTR.NE.IRNG) GO TO 55
      WRITE(6,56)
   56 FORMAT(/' SMEARED STRINGERS AND SMEARED RINGS CANNOT BE'/
     1        ' ON THE SAME SIDE OF THE SHELL WALL.'/)
      BACKSPACE(IOUT)
      REWIND IFILE2
      GO TO 57
C
   55 CALL DATUM(IFILE2,294,1,2,IRTYPE,REALL,CHARAC,IOUT,0,1)
      IF (IRTYPE.NE.1.AND.IRTYPE.NE.2.AND.IRTYPE.NE.3) THEN
       WRITE(6,*)' IRTYPE  MUST BE EITHER  1  or  2  or  3'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 55
      ENDIF
C
C
   88 CONTINUE
C
      IF (ISTR.EQ.0) GO TO 52
      CALL DATUM(IFILE2,295,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 94
      GO TO (91,92,93),ISTYPE
   91 CALL DATUM(IFILE2,298,0,0,INT,REALL,CHARAC,IOUT,0,1)
      GO TO 94
   92 CALL DATUM(IFILE2,300,0,0,INT,REALL,CHARAC,IOUT,0,1)
      GO TO 94
   93 CALL DATUM(IFILE2,302,0,0,INT,REALL,CHARAC,IOUT,0,1)
   94 CONTINUE
C
      GO TO (71,76),ISTR
   71 CONTINUE
      GO TO (72,73,74),ISTYPE
   72 WRITE(6,62)
   62 FORMAT(' Smeared stringers form the first (leftmost) layer'/
     1        ' of the stringer-shell wall combination.')
      GO TO 81
   73 WRITE(6,63)
   63 FORMAT(' Smeared stringers form the first two (leftmost)'/
     1        ' layers of the stringer-shell wall combination.')
      GO TO 81
   74 WRITE(6,64)
   64 FORMAT(' Smeared stringers form the first three (leftmost)'/
     1        ' layers of the stringer-shell wall combination.')
      GO TO 81
C
   76 CONTINUE
      GO TO (77,78,79),ISTYPE
   77 WRITE(6,67)
   67 FORMAT(' Smeared stringers form the last (rightmost) layer'/
     1        ' of the shell wall-stringer combination.')
      GO TO 81
   78 WRITE(6,68)
   68 FORMAT(' Smeared stringers form the last two (rightmost)'/
     1        ' layers of the shell wall-stringer combination.')
      GO TO 81
   79 WRITE(6,69)
   69 FORMAT(' Smeared stringers form the last three (rightmost)'/
     1        ' layers of the shell wall-stringer combination.')
   81 CONTINUE
C
   52 CONTINUE
C
      IF (IRNG.EQ.0) GO TO 99
      IF (ISTR.NE.0) REWIND IFILE2
      CALL DATUM(IFILE2,296,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 54
      GO TO (96,97,98),IRTYPE
   96 CALL DATUM(IFILE2,298,0,0,INT,REALL,CHARAC,IOUT,0,1)
      GO TO 54
   97 CALL DATUM(IFILE2,300,0,0,INT,REALL,CHARAC,IOUT,0,1)
      GO TO 54
   98 CALL DATUM(IFILE2,302,0,0,INT,REALL,CHARAC,IOUT,0,1)
   54 CONTINUE
      GO TO (41,46),IRNG
   41 CONTINUE
      GO TO (42,43,44),IRTYPE
   42 WRITE(6,32)
   32 FORMAT(' Smeared rings form the first (leftmost) layer'/
     1        ' of the ring-shell wall combination.')
      GO TO 51
   43 WRITE(6,33)
   33 FORMAT(' Smeared rings form the first two (leftmost)'/
     1        ' layers of the ring-shell wall combination.')
      GO TO 51
   44 WRITE(6,34)
   34 FORMAT(' Smeared rings form the first three (leftmost)'/
     1        ' layers of the ring-shell wall combination.')
      GO TO 51
C
   46 CONTINUE
      GO TO (47,48,49),IRTYPE
   47 WRITE(6,37)
   37 FORMAT(' Smeared rings form the last (rightmost) layer'/
     1        ' of the shell wall-ring combination.')
      GO TO 51
   48 WRITE(6,38)
   38 FORMAT(' Smeared rings form the last two (rightmost)'/
     1        ' layers of the shell wall-ring combination.')
      GO TO 51
   49 WRITE(6,39)
   39 FORMAT(' Smeared rings form the last three (rightmost)'/
     1        ' layers of the shell wall-ring combination.')
   51 CONTINUE
C
   99 CONTINUE
C
      CALL DATUM(IFILE2,305,1,2,LAYERS,REALL,CHARAC,IOUT,0,1)
      IF (LAYERS.LE.0.OR.LAYERS.GT.6) THEN
       WRITE(6,*)' LAYERS  MUST BE IN THE RANGE FROM   1  TO   6'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 99
      ENDIF
C
      CALL DATUM(IFILE2,308,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      NTYPET = 0
      IF (ANSL1('N',ANSOUT,INFILE)) NTYPET = 1
C
      NRS = 0
      KUP1 = LAYERS + 1
C
C     LAYERS = NO. OF LAYERS
C
C
C     NTYPET = 0	CONSTANT THICKNESS LAYERS
C     NTYPET = 1	VARIABLE THICKNESS LAYERS
C
C
C     I	= 1 . .	INNER LAYER,   I = LAYERS . . OUTER LAYER
C     T	=  THICKNESS
C     G	=  SHEAR MODULUS
C     EX =  MERIDIONAL MODULUS
C     EY =  CIRCUMFERENTIAL MODULUS
C     UXY = POISSON,S RATIO . .	EY*UXY = EX*UYX
C     SM = LAYER MATERIAL MASS DENSITY
C     ALPHA1 = MERIDIONAL THERMAL EXPANSION COEFFICIENT
C     ALPHA2 = CIRCUMFERENTIAL THERMAL EXPANSION COEFFICIENT
C
C
      DO 95 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
  100 CONTINUE
      CALL DATUM(IFILE2,312,1,2,MPROP(I),REALL,CHARAC,IOUT,I,IPROMP)
      IF (MPROP(I).LT.1.OR.MPROP(I).GT.9) THEN
       WRITE(6,*)' MATL  MUST BE IN THE RANGE FROM  1  TO  9'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 100
      ENDIF
C
   95 CONTINUE
C
      IF (NTYPET.NE.0) GO TO 110
      DO 102 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,313,1,1,INT,T,CHARAC,IOUT,I,IPROMP)
  102 CONTINUE
C
      NTIN = 2
  110 CONTINUE
      DO 111 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,315,1,1,INT,G,CHARAC,IOUT,I,IPROMP)
  111 CONTINUE
C
      DO 112 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,316,1,1,INT,EX,CHARAC,IOUT,I,IPROMP)
  112 CONTINUE
C
      DO 113 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,317,1,1,INT,EY,CHARAC,IOUT,I,IPROMP)
  113 CONTINUE
C
      DO 114 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,318,1,1,INT,UXY,CHARAC,IOUT,I,IPROMP)
  114 CONTINUE
C
C BEG AUG 2005
      DO 87 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,319,1,1,INT,SM,CHARAC,IOUT,I,IPROMP)
   87 CONTINUE
C END AUG 2005
      DO 115 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,320,1,1,INT,ALPHA1,CHARAC,IOUT,I,IPROMP)
  115 CONTINUE
C
      DO 116 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,321,1,1,INT,ALPHA2,CHARAC,IOUT,I,IPROMP)
  116 CONTINUE
C
      DO 117 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,324,1,1,INT,EPSALW,CHARAC,IOUT,I,IPROMP)
  117 CONTINUE
C
      CALL DATUM(IFILE2,330,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      NPLAST = 1
      IF (ANSL1('N',ANSOUT,INFILE)) NPLAST = 0
      CALL DATUM(IFILE2,340,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      NCREEP = 0
      IF (ANSL1('Y',ANSOUT,INFILE)) NCREEP = 1
      IF (NCREEP.GT.0) ICREEP = 1
C
C     NPLAST = 1 PLASTICITY OR CREEP OR BOTH IN SEGMENT ISEG
C     NPLAST = 0 NO PLASTICITY NOR CREEP IN SEGMENT ISEG
C     SBRDF = EXTRAPOLATION MADE EVERY SBRDFTH TRIAL
C
      NMAT = 0
C     MP,MPROP(I) = MATERIAL TYPE (E.G.	1,2,3,4,....)
C     NALRED = 1 MATERIAL	PROPERTIES HAVE	BEEN READ IN PREVIOUSLY
C     NALRED = 0 MATERIAL	PROPERTIES HAVE	NOT BEEN READ IN
C     SGEFF(IPOINT,MP)	= EFFECTIVE STRESS
C     EPEFF(IPOINT,MP) = EFFECTIVE UNIAXIAL STRAIN
C     NITEG(MP)	= NO. OF INTEGRATION POINTS THRU LAYER
C
      DO 340 I=1,LAYERS
      REWIND IFILE2
  150 FORMAT(35H MATERIAL PROPERTIES FOR LAYER NO.      I2,
     1  43H HAVE BEEN GIVEN PREVIOUSLY. MATERIAL TYPE      I2)
      WRITE(6,155) I
  155 FORMAT(/' Shell wall layer no.',I2,'.  A stress-strain curve'/
     1        ' the material of this layer must be provided by you'/
     1        ' if the same material has not appeared in a previous'/
     1        ' layer of this segment or in the shell wall of a'/
     1        ' previous shell segment.  Note that you must provide'/
     1        ' a stress-strain curve here even if the same material'/
     1        ' has been specified previously for a discrete ring'/
     1        ' segment.'/)
      CALL DATUM(IFILE2,350,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      ANCREP(I) = ANSOUT
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 340
      MP = MPROP(I)
C
      IF (EX(I).GT.0.) UYX = UXY(I)*EY(I)/EX(I)
      IF (UXY(I).GT.0.0.AND.EX(I).EQ.0.0) GO TO 165
      UTEST = 1. - UYX*UXY(I)
      IF (UTEST.LT.0.0) GO TO 165
      GO TO 168
C
  165 CONTINUE
C
C     ILLEGAL MATERIAL PROPERTIES...
C
      WRITE(6,166) I,MP,UXY(I),UYX
  166 FORMAT(//43H ILLEGAL MATERIAL PROPERTIES FOR LAYER NO. ,I3/,
     1         19H MATERIAL TYPE NO. ,I3/,
     2         47H BAD POISSON RATIO. NOTE THAT (1.-UXY*UYX) MUST,
     3         14H EXCEED ZERO. /,
     4          5H UXY=,1PE12.4,5H UYX=,1PE12.4//)
      CALL ERREX
  168 CONTINUE
      IF (NPLAST.EQ.0) GO TO 169
      WRITE(6,167) I
  167 FORMAT(/' Stress-strain curve for material in shell wall'/
     1        ' layer no.',I2,' . . .'/)
  201 CONTINUE
      CALL DATUM(IFILE2,432,1,2,NPOINT,REALL,CHARAC,IOUT,I,1)
      IF (NPOINT.LT.2.OR.NPOINT.GT.20) THEN
       WRITE(6,*)' NPOINT  MUST BE IN THE RANGE FROM  2  TO  20'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 201
      ENDIF
C
  202 CONTINUE
      CALL DATUM(IFILE2,434,1,2,NITEG,REALL,CHARAC,IOUT,I,1)
      IF (NITEG.NE.3.AND.NITEG.NE.5.AND.NITEG.NE.7.AND.NITEG.NE.9) THEN
       WRITE(6,*)' NITEG  MUST BE  3  or  5  or  7  or  9'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 202
      ENDIF
C
      CALL DATUM(IFILE2,435,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      ISSFUN = 0
      IF (ANSL1('Y',ANSOUT,INFILE)) ISSFUN = 1
C
      IF (ISSFUN.NE.0) CALL DATUM(IFILE2,436,1,1,INT,SYP,CHARAC,IOUT,
     1 I,1)
      IF (ISSFUN.NE.0) CALL DATUM(IFILE2,438,1,2,INT,POWER,CHARAC,IOUT,
     1 0,1)
C
  169 CONTINUE
C
C     NPOINT = NO. OF DATA POINTS FOR INPUT STRESS-STRAIN CURVE
C     NITEG	= NO. OF INTEGRATION PTS. THRU THICKNESS OF LAYER
C     EMAX = MAXIMUM ALLOWABLE STRAIN OF MATERIAL MP
C     ETAN = TANGENT MODULUS OF MATERIAL MP
C
      IF (ISSFUN.NE.0) GO TO 170
      IF (NPLAST.EQ.0) GO TO 340
      DO 171 L = 1,NPOINT
      IPROMP = 1
      IF (L.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,440,1,1,INT,EPEFF,CHARAC,IOUT,L,IPROMP)
  171 CONTINUE
C
  170 CONTINUE
      DO 172 L = 1,NPOINT
      IPROMP = 1
      IF (L.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,442,1,1,INT,SGEFF,CHARAC,IOUT,L,IPROMP)
  172 CONTINUE
C
  340 CONTINUE
C
C     NCREEP = 1 CREEP IN	SEGMENT	ISEG
C     NCREEP = 0 NO CREEP	IN SEGMENT ISEG
  370 IF (NCREEP.EQ.0) GO TO 450
      DO 440 I=1,LAYERS
      IF (ANSL1('N',ANCREP(I),INFILE)) GO TO 440
      MP = MPROP(I)
      REWIND IFILE2
      TFLOOR = 0.
      CALL DATUM(IFILE2,444,1,2,INT,CREEPN,CHARAC,IOUT,I,1)
      CALL DATUM(IFILE2,446,1,1,INT,CREEPM,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,448,1,1,INT,CREEPA,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,450,1,1,INT,CREEPB,CHARAC,IOUT,0,1)
C
C
C     TFLOOR = ABSOLUTE	VALUE OF AMBIENT TEMPERATURE (EG 293 DEG C.)
C     CREEPN = EXPONENT ON TIME
C     CREEPM = EXPONENT ON EFFECTIVE STRESS
C     CREEPA = COEFFICIENT ,  K
C     CREEPB = INITIAL TIME USED	IN CREEP ANALYSIS
C
C
  440 CONTINUE
  450 CONTINUE
C
  460 IF (NTYPET.EQ.0) GO TO 500
C
C     NTIN = NO. OF MERIDIONAL STATIONS	FOR WHICH LAYER	THICKNESSES
C	     TO	BE READ	IN.. LOCATION OF CALLOUTS DETERMINED IN	STA
C     TIN = THICKNESS OF GIVEN LAYER AT	THE NTIN CALLOUT POINTS	DETER-
C	    MINED IN SUBROUTINE	STA.
C
      CALL DATUM(IFILE2,460,0,0,INT,REALL,CHARAC,IOUT,0,1)
  462 CONTINUE
      CALL DATUM(IFILE2,462,1,2,NTIN,REALL,CHARAC,IOUT,0,1)
      IF (NTIN.LT.2.OR.NTIN.GT.20) THEN
       WRITE(6,*)' NTIN  MUST BE IN THE RANGE FROM  2  TO  20'
       BACKSPACE(IOUT)
       REWIND IFILE2
       GO TO 462
      ENDIF
C
      IPRM(2) = 463
      CALL STA(NTIN)
C
      CALL DATUM(IFILE2,466,0,0,INT,REALL,CHARAC,IOUT,0,1)
C
      DO 480 I=1,LAYERS
      WRITE(6,463) I
  463 FORMAT(/' Thickness of layer no.',I2,' at the meridional'/
     1        ' callout points just specified...'/)
      REWIND IFILE2
      DO 465 II = 1,NTIN
      IPROMP = 1
      IF (II.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,468,1,1,INT,TAXIAL,CHARAC,IOUT,II,IPROMP)
  465 CONTINUE
C
  480 CONTINUE
  500 CONTINUE
C
      CALL DATUM(IFILE2,470,1,1,INT,REALL,ANSOUT,IOUT,0,1)
C
      WRITE(IOUT,510)
  510 FORMAT(6X,'H',9X,'$ END OF DATA FOR THIS SEGMENT')
      RETURN
      END
C=DECK      POLES
      SUBROUTINE POLES
C
C   PURPOSE IS TO ASK QUESTIONS RELATED TO POLES
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ POLES INPUT FOLLOWS...')
      REWIND IFILE
      CALL DATUM(IFILE,62,1,2,NPOLES,REALL,CHARAC,IOUT,ISEG,1)    
      IF (NPOLES.EQ.0) GO TO 20     
C     
C    CONSTRAINT CONDITIONS FOR A POLE (r=0)...  
C     
      DO 10 I = 1,NPOLES
      REWIND IFILE
      CALL DATUM(IFILE,64,1,1,IMESH,REALL,CHARAC,IOUT,I,1)     
   10 CONTINUE    
   20 CONTINUE    
C     
      RETURN
      END
C=DECK      BOUND
      SUBROUTINE BOUND
C
C   PURPOSE IS TO ASK QUESTIONS RELATING TO CONSTRAINTS TO GROUND...
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/INDAT/INFILE
      DIMENSION IMESH(100)
      CHARACTER*4 ANSCON
      LOGICAL ANSL1
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ INPUT FOR CONSTRAINTS TO GROUND FOLLOWS...')
C
      REWIND IFILE
C     
C   CONSTRAINTS TO GROUND (OTHER THAN POLES) FOLLOW....     
C     
      CALL DATUM(IFILE,66,1,2,NGRND,REALL,CHARAC,IOUT,0,1)  
      IF (NGRND.EQ.0) GO TO 40
      DO 30 I = 1,NGRND 
      REWIND IFILE
      I1 = I - 1  
   22 CONTINUE    
      CALL DATUM(IFILE,68,1,1,IMESH(I),REALL,CHARAC,IOUT,I,1)     
      IF (I.EQ.1) GO TO 24    
      MESHDF = IMESH(I) - IMESH(I1) 
      IF (MESHDF.GE.3) GO TO 24     
      WRITE(6,'(A,A)')' CONSTRAINTS TO GROUND MUST BE AT INTERVALS',    
     1' ALONG THE MERIDIAN OF AT LEAST 3 NODAL POINTS'
      REWIND IFILE
      BACKSPACE(IOUT)
      GO TO 22    
   24 CONTINUE    
      CALL DATUM(IFILE,70,1,2,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,71,1,1,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,72,1,1,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,73,1,1,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,74,1,2,INT,D1,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,75,1,1,INT,D2,CHARAC,IOUT,0,1)
C     
      CALL DATUM(IFILE,80,1,2,INT,REALL,ANSCON,IOUT,0,1)    
      IF (ANSL1('Y',ANSCON,INFILE)) GO TO 30    
C     
      CALL DATUM(IFILE,81,1,2,IFIXB,REALL,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,82,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,83,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,84,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)     
C     
   30 CONTINUE    
   40 CONTINUE    
C     
      RETURN
      END
C=DECK      JUNCT
      SUBROUTINE JUNCT
C
C   PURPOSE IS TO ASK QUESTIONS RELATIVE TO JUNCTION CONDITIONS...
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/INDAT/INFILE
      DIMENSION IMESH(100)
      CHARACTER*4 ANSCON
      LOGICAL ANSL1
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ JUNCTION CONDITION INPUT FOLLOWS...')
C
      REWIND IFILE
C     
C    JUNCTURE CONDITIONS ARE NEXT...
C     
      CALL DATUM(IFILE,86,1,2,INT,REALL,ANSCON,IOUT,0,1)    
      IF (ANSL1('N',ANSCON,INFILE)) GO TO 80    
      CALL DATUM(IFILE,88,1,2,NJUNCT,REALL,CHARAC,IOUT,0,1) 
      IF (NJUNCT.EQ.0) GO TO 80     
      DO 60 I = 1,NJUNCT
      REWIND IFILE
      I1 = I - 1  
   42 CONTINUE    
      CALL DATUM(IFILE,90,1,1,IMESH(I),REALL,CHARAC,IOUT,I,1)     
      IF (I.EQ.1) GO TO 44    
      MESHDF = IMESH(I) - IMESH(I1) 
      IF (MESHDF.GE.3) GO TO 44     
      WRITE(6,'(A,A)')' JUNCTURES TO EARLIER SEGMENTS MUST BE SPACED',  
     1' AT INTERVALS OF AT LEAST 3 NODAL POINTS.'     
      REWIND IFILE
      BACKSPACE(IOUT)
      GO TO 42    
   44 CONTINUE    
      CALL DATUM(IFILE,92,1,1,JSEG,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,94,1,1,JNODE,REALL,CHARAC,IOUT,0,1)  
      CALL DATUM(IFILE,96,1,2,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,98,1,1,IFIX,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,100,1,1,IFIX,REALL,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,102,1,1,IFIX,REALL,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,104,1,2,INT,D1,CHARAC,IOUT,0,1)     
      CALL DATUM(IFILE,106,1,1,INT,D2,CHARAC,IOUT,0,1)     
C     
      CALL DATUM(IFILE,108,1,2,INT,REALL,ANSCON,IOUT,0,1)   
      IF (ANSL1('Y',ANSCON,INFILE)) GO TO 60    
      CALL DATUM(IFILE,110,1,2,IFIXB,REALL,CHARAC,IOUT,0,1)    
      CALL DATUM(IFILE,111,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)    
      CALL DATUM(IFILE,112,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)    
      CALL DATUM(IFILE,113,1,1,IFIXB,REALL,CHARAC,IOUT,0,1)    
C     
   60 CONTINUE    
   80 CONTINUE    
C     
      RETURN
      END
C=DECK      RIGID
      SUBROUTINE RIGID
C
C   PURPOSE IS TO ASK QUESTIONS RELATIVE TO RIGID BODY CONSTRAINTS...
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)   
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSCON
      LOGICAL ANSL1
C
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ RIGID BODY CONSTRAINT INPUT FOLLOWS...')
C
      REWIND IFILE
C     
C    RIGID BODY MOTION STUFF FOLLOWS...   
C     
      REWIND IFILE
      CALL DATUM(IFILE,120,0,0,INT,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,121,1,2,INT,REALL,ANSCON,IOUT,0,1)   
      IF (ANSL1('N',ANSCON,INFILE)) GO TO 200   
      CALL DATUM(IFILE,122,0,0,INT,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,123,1,1,ISEG,REALL,CHARAC,IOUT,0,1)  
      CALL DATUM(IFILE,124,1,1,INODE,REALL,CHARAC,IOUT,0,1) 
      CALL DATUM(IFILE,125,0,0,INT,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,126,1,2,ISTOP0,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,127,1,1,ISTOP0,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,128,1,1,ISTOP0,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,129,1,1,ISTOP0,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,130,1,1,ISTOP1,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,131,1,1,ISTOP1,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,132,1,1,ISTOP1,REALL,CHARAC,IOUT,0,1)   
      CALL DATUM(IFILE,133,1,1,ISTOP1,REALL,CHARAC,IOUT,0,1)   
C     
  200 CONTINUE    
C BEG AUG 2005
      CALL DATUM(IFILE,150,1,1,INT,WPRALL,CHARAC,IOUT,0,1)
C END AUG 2005
      RETURN
      END   
C=DECK      GLOB2
      SUBROUTINE GLOB2(ITRAN)
C
C   PURPOSE IS TO  READ INPUT THAT FOLLOWS LAST SHELL SEGMENT...
C
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      DIMENSION NTIME(11)
      CHARACTER*4 ANSOUT
      CHARACTER*4 CHARAC
      LOGICAL ANSL1
C
      REWIND IFILE
C
C     HOW LOADS VARY WITH TIME DURING CASE
C
C     NTIME(1) = NUMBER OF CALLOUTS FOR TIME INCREMENT
C     FTLOAD(I,1) I=1,NTIME(1) = THE VALUES OF THE TIME INCREMENTS
C     FTLOAD(I,2) I=1,NTIME(1) = THE TIMES CORRESPONDING TO THE VALUES
C                                OF DTIME. DTIME VARIES LINEARLY FOR
C                                TIMES BETWEEN CALLOUTS.
C     NFTIME = NUMBER OF DIFFERENT FUNCTIONS OF TIME (LOADS)
C     NTIME(J),J=2,NFTIME+1  QUANTITIES OF CALLOUTS FOR LOAD-FUNCTIONS
C                            OF TIME.
C     FTLOAD(J,1),J=NPOS,NPEND = F(T)  (LOAD-FUNCTION OF TIME)
C     FTLOAD(J,2),J=NPOS,NPEND = T     TIME CORRESPONDING TO LOAD-CALLOU
C
      IF (ITRAN.EQ.2) WRITE(IOUT,36)
   36 FORMAT(6X,'H',9X,'$'/6X,'H',9X,'$ GLOBAL DATA BEGINS...')
      IF (ITRAN.EQ.1) WRITE(IOUT,37)
   37 FORMAT(6X,'H',9X,'$ GLOBAL DATA BEGINS...')
      WRITE(IOUT,72)
   72 FORMAT(6X,'H',9X,'$ LOADING TIME FUNCTIONS FOLLOW')
      REWIND IFILE
      CALL DATUM(IFILE,24,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,25,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 73
      CALL DATUM(IFILE,26,0,0,INT,REALL,CHARAC,IOUT,0,1)
   73 CONTINUE
      CALL DATUM(IFILE,28,1,2,IUTIME,REALL,CHARAC,IOUT,0,1)
      IF (IUTIME.NE.0.AND.IUTIME.NE.1) THEN
       WRITE(6,*)' IUTIME  MUST BE EITHER  0  or  1'
       BACKSPACE(IOUT)
       REWIND IFILE
       GO TO 73
      ENDIF
C
      IF (IUTIME.EQ.0) GO TO 75
      CALL DATUM(IFILE,30,1,2,INT,DTIME,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,32,1,2,INT,TMAX,CHARAC,IOUT,0,1)
C
      NTIME(1) = 2
      GO TO 77
   75 CONTINUE
      CALL DATUM(IFILE,34,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,36,1,2,NTIME(1),REALL,CHARAC,IOUT,0,1)
C
      NT1 = NTIME(1)
      DO 76 I = 1,NT1
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE,38,1,2,INT,FTLOAD,CHARAC,IOUT,I,IPROMP)
   76 CONTINUE
C
      DO 78 I = 1,NT1
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE,40,1,1,INT,FTLOAD,CHARAC,IOUT,I,IPROMP)
   78 CONTINUE
C
   77 CONTINUE
      CALL DATUM(IFILE,42,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,44,1,2,NFTIME,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE,45,0,0,INT,REALL,CHARAC,IOUT,0,1)
C
      ITIME = NFTIME
      NF1 = NFTIME + 1
      JJJ = 0
      DO 79 J = 2,NF1
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
  772 CONTINUE
      CALL DATUM(IFILE,46,1,2,NTIME(J),REALL,CHARAC,IOUT,JJJ,IPROMP)
      IF (NTIME(J).LT.2.OR.NTIME(J).GT.50) THEN
       WRITE(6,*)' NPOINT  MUST BE IN THE RANGE FROM   2   TO   50'
       BACKSPACE(IOUT)
       REWIND IFILE
       GO TO 772
      ENDIF
C
   79 CONTINUE
C
      DO 80 I=1,NFTIME
      REWIND IFILE
      CALL DATUM(IFILE,48,0,0,INT,REALL,CHARAC,IOUT,I,1)
      JJJ = 0
      NTI = NTIME(I+1)
      DO 83 J = 1,NTI
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE,50,1,2,INT,FTLOAD,CHARAC,IOUT,JJJ,IPROMP)
   83 CONTINUE
C
      CALL DATUM(IFILE,51,0,0,INT,REALL,CHARAC,IOUT,I,1)
      JJJ = 0
      DO 86 J = 1,NTI
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE,52,1,2,INT,FTLOAD,CHARAC,IOUT,JJJ,IPROMP)
   86 CONTINUE
C
   80 CONTINUE
      WRITE(IOUT,32)
   32 FORMAT(6X,'H',9X,'$ CONSTRAINT CONDITIONS FOLLOW....')
      REWIND IFILE
      CALL DATUM(IFILE,61,1,1,NSEG,REALL,CHARAC,IOUT,0,1)
C
      RETURN
      END
C
C
C
