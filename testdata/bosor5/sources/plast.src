C=DECK      PLASTLIB
C
C  THIS IS THE PLAST LIBRARY (SOURCE FILE)
C
C
C
C=DECK      PRE33
      SUBROUTINE PRE33
C
C  200-SEGMENT VERSION OF BOSOR5
C     OVERLAY(5,0)       (CDC VERSION)
C     PROGRAM PRE33      (CDC VERSION)
C
      DIMENSION T(900),TTT(1000)
      COMMON/FLSTEP/KSTEP,KSTEPM
      COMMON/SMODE/IPMODE(99),ICMODE(99),ISMODE(99),IQMODE(99),IHMOD(99)
      COMMON/DEFM/EPEX1,EPEX2,FKEX1,FKEX2,JUP,IPLS(1),AT1
      COMMON/FANDD/ALPHA1,ALPHA2,TTURE,F1,F2,IHINGE,ITEST
      COMMON/FDATA/S25,ECOEF,S26
      COMMON/MDATA/MP,E,U,U1,S24,S23,E11,E12,E22,EALP1,EALP2
      COMMON/TTTHK/TP(10),ZP(10),NTHICK,ZREF
      COMMON/ZGRAD/NTSGD
      COMMON/IBUKKK/IBUCKL
      COMMON/SEGS/NSEG,M2,I5(201),I2,I2G
      COMMON/IGOVN/ITTURE(201),IDEPTH(201),IREFZ(201),ILONG
      COMMON/      /B(160000)
      COMMON/RLSTAT/LSTAT,KRSEG,KRING,BET(99),BETS(99),WS(99),WSS(99)
      COMMON/SHEL/IWAL(201)
      COMMON/IFLOWS/IFLOW,ICREEP,IJNCT,IJNTB,ITSTOR,ITHSTR,IZSTOR,IBSTOR
      COMMON/INSTAB/INDIC
      COMMON/TIMLFT/MARGIN,NBEGIN
      COMMON/MATP2/ETAN(20,9),MAXTRL,ITRIAL,EMAX(9),ATWEEN(95),SBRDF(95)
      COMMON/ITERS/ITER
      COMMON/THERWD/NWORD(201),NPLAST(201),NCREEP(201),NMAT(201),
     1              NALRED(201)
      COMMON/RINDEX/JBEGIN,KBEGIN,LBEGIN,KSEGS
      COMMON/ALLRNG/NTOT,IPRE
      COMMON/TLOADS/FTLOAD(100,2),NTIME(11),ITIME
      COMMON/TOMER/TOME,DTIME
      COMMON/AUXSTO/IDD,ISER,ILAST,ICUR,ISTAT
      COMMON/SIGNALL/ISIG,KKKK,NSTEPS,LSTEPS(50),TIMES(51)
C
C     HOW THE WORKING SPACE STORAGE, B(     ), IS ALLOCATED...
C
C     VARIABLES GOVERNING THE LENGTH OF VARIOUS ARRAYS...
C
C    I2 = NUMBER OF 'MESH' POINTS IN ENTIRE STRUCTURE
C    IPRE = NUMBER OF DIFFERENT KINDS OF VARIABLES STORED FOR EACH RING
C    NTOT = TOTAL NUMBER OF DISCRETE RINGS IN STRUCTURE
C    ITSTOR = NUMBER OF QUANTITIES NEEDED FOR TEMPERATURE CALLOUTS,SHELL
C    ITHSTR = NUMBER OF QUANTITIES NEEDED FOR THICKNESS SPECIFICATION
C    IZSTOR = NUMBER OF QUANTITIES NEEDED FOR REF. SURFACE SPECIFICATION
C    ILONG = NUMBER OF STATIONS WHERE YIELD STRESS, EFFECTIVE PLASTIC
C            STRAIN, PLASTIC AND CREEP STRAIN COMPONENTS ARE SAVED
C    LBEGIN = NUMBER OF PLACES IN DISCRETE RINGS WHERE YIELD STRESS,
C             EFFECTIVE PLASTIC STRAIN, AND CREEP STRAIN ARE STORED
C
C/10*I2/4*I2-/IPRE*NTOT/--I2-/--I2-/4*I2-/4*I2-/ITSTOR/ITHSTR/IZSTOR/
C/--C--/THERM/--RING---/-FK1-/-FK2-/--E1-/-E1S-/TSTORE/THSTOR/ZSTORE/
C/B(1)-/B(N1)/--B(N2)--/B(N3)/B(N4)/B(N5)/B(N6)/B(N7)-/B(N8)-/B(N9)-/
C1     N1    N2        N3    N4    N5    N6    N7     N8     N9    N10
C
C     CONTINUE ON NEXT LINE...
C
C /--I2--/ILONG-/ILONG-/----2*ILONG----/----2*ILONG----/LBEGIN/
C /---S--/SBBAR-/EPBAR-/EP(1,K),EP(2,K)/EC(1,K),EC(2,K)/SIGMA0/
C /B(N10)/B(N11)/B(N12)/----B(N13)-----/-----B(N14)----/B(N15)/
CN10    N11    N12    N13             N14             N15    N16
C
C     CONTINUE ON NEXT LINE
C
C /LBEGIN/LBEGIN/ILONG-/-3*I2-/
C /-EPS0-/EPCREP/ECBAR-/CSHEAR/
C /B(N16)/B(N17)/B(N18)/B(N19)/
CN16    N17    N18    N19
C
C     STARTING ADDRESSES AND DEFINITIONS OF VARIABLES...
C
C  ADD.   VAR.      DEFINITION
C
C   1     B(1)     CONSTITUTIVE LAW COEFFICIENTS, C(I,J)
C   N1    B(N1)    NEGATIVE OF PLASTIC+CREEP+THERMAL STRAINS INTEGRATED
C                  THROUGH SHELL WALL THICKNESS. LIKE THERMAL STRESS AND
C                  MOMENT RESULTANTS.
C   N2    B(N2)    DISCRETE RING VARIABLES, SUCH AS ECCENTRICITIES AND
C                  EP+EC+ET ('THERMAL STRAINS') INTEGRATED OVER RING
C                  CROSS-SECTION AREA, AND EA, EIX, EIY, ETC...
C   N3    B(N3)    MERIDIONAL CURVATURE, 1/R1
C   N4    B(N4)    CIRCUMFERENTIAL CURVATURE, 1/R2
C   N5    B(N5)    REF. SURF. STRAINS AND CURVATURE CHANGES, THIS STEP
C   N6    B(N6)    REF. SURF. STRAINS AND CURVATURE CHANGES, LAST STEP
C   N7    B(N7)    SHELL WALL TEMPERATURE CALLOUTS
C   N8    B(N8)    SHELL WALL THICKNESS CALLOUTS
C   N9    B(N9)    SHELL WALL REFERENCE SURFACE POSITION CALLOUTS
C   N10   B(N10)   MERIDIONAL ARC LENGTH, S
C   N11   B(N11)   YIELD STRESSES EVERYWHERE IN ENTIRE STRUCTURE
C   N12   B(N12)   EFFECTIVE PLASTIC STRAIN EVERYWHERE IN SHELL STRUCT.
C   N13   B(N13)   PLASTIC STRAIN COMPONENTS EVERYWHERE IN SHELL WALL
C   N14   B(N14)   CREEP STRAIN COMPONENTS EVERYWHERE IN SHELL WALL
C   N15   B(N15)   YIELD STRESSES EVERYWHERE IN DISCRETE RINGS
C   N16   B(N16)   PLASTIC STRAINS EVERYWHERE IN DISCRETE RINGS
C   N17   B(N17)   CREEP STRAINS EVERYWHERE IN DISCRETE RINGS
C   N18   B(N18)   EFFECTIVE CREEP STRAIN IN SHELL SEGMENTS
C   N19   B(N19)   CONSTITUTIVE LAW COEFFICIENTS C33, C36, C66 EVERY-
C                  WHERE IN SHELL WALL.
      N1 = 10*I2 + 1
      N2 = N1 + 4*I2
      N3 = N2 + IPRE*NTOT
      N4 = N3 + I2
      N5 = N4 + I2
      N6 = N5 + 4*I2
      N7 = N6 + 4*I2
      N8 = N7 + ITSTOR
      N9 = N8 + ITHSTR
      N10 = N9 + IZSTOR
      N11 = N10 + I2
      N12 = N11 + ILONG
      N13 = N12 + ILONG
      N14 = N13 + 2*ILONG
      IF (ICREEP.EQ.0) N14 = N13
      N15 = N14 + 2*ILONG
      N16 = N15 + LBEGIN
      N17 = N16 + LBEGIN
      N18 = N17 + LBEGIN
      N19 = N18 + ILONG
      IF (ISIG.EQ.0) GO TO 50
      IF (ICREEP.EQ.0) N19=N18
      NLONG1 = IBSTOR + I2
      CALL GASP(B(N7),NLONG1,3,IWAL(3))
      NLONG2 = 7*ILONG + 3*LBEGIN
      IF(ICREEP.EQ.0) NLONG2 = 4*ILONG + 3*LBEGIN
      CALL GASP(B(N11),NLONG2,3,ISMODE(KSTEP))
      I3 = 3*I2
      CALL GASP(B(N19),I3,3,IHMOD(KSTEP))
      INOWKK = 1
      ITOTL = 0
      KRSEG = 0
      LSTAT = 1
      KRING = 1
      DO 40 J=1,NSEG
      INOW = ITTURE(J)
      INOWH = IDEPTH(J)
      INOWZ = IREFZ(J)
      I5I = I5(J)
      IPOS = 10*ITOTL + 1
      IPOS1 = 4*ITOTL + N1
      IPOS2 = 3*ITOTL + N19
      IPOS3 = 4*ITOTL + N5
      IPOS4 = 4*ITOTL + N6
      IARG1 = N3 + ITOTL
      IARG2 = N4 + ITOTL
      IARG3 = INOW + N7 - 1
      IARG4 = INOWH + N8 - 1
      IARG5 = INOWZ + N9 - 1
      IARG6 = N10 + ITOTL
      DO 20 I=1,I5I
      IF (NPLAST(J).EQ.0) GO TO 10
      K1 = IPOS3 + I - 1
      KK1= IPOS4 + I - 1
      K2 = IPOS3 + I5I + I - 1
      KK2= IPOS4 + I5I + I - 1
      K3 = IPOS3 + 2*I5I + I - 1
      KK3= IPOS4 + 2*I5I + I - 1
      K4 = IPOS3 + 3*I5I + I - 1
      KK4= IPOS4 + 3*I5I + I - 1
      INOWK2 = 2*INOWKK - 1
      IARG7 = N11 + INOWKK - 1
      IARG8 = N12 + INOWKK - 1
      IARG9 = N13 + INOWK2 - 1
      IARG10 = N14 + INOWK2 - 1
      IARG11 = N18 + INOWKK - 1
      CALL PLAST(J,I,I5I,INTTOT,T,TTT,B(IPOS),B(IPOS1),B(N2),B(IARG1),
     1B(IARG2),B(K1),B(K2),B(K3),B(K4),B(KK1),B(KK2),B(KK3),B(KK4),
     2B(IARG3),B(IARG4),B(IARG5),B(IARG6),B(IARG7),B(IARG8),B(IARG9),
     3B(IARG10), B(N15),B(N16),B(N17),B(IARG11),B(IPOS2))
      INOWKK = INOWKK + INTTOT
10    CONTINUE
20    CONTINUE
C
C
30    CONTINUE
      ITOTL = ITOTL + I5I
40    CONTINUE
50    CONTINUE
      RETURN
C     RETURN CARD NOT NEEDED IN CDC VERSION
      END
C=DECK      PRNTC
      SUBROUTINE PRNTC(JSEG,C,CSHEAR,I5)
      DIMENSION C(I5,10),CSHEAR(I5,3)
      WRITE (6,10)JSEG
10    FORMAT(//55H WALL STIFFNESS COEFFICIENTS, CIJ, FOR SEGMENT NUMBER
     1    I2,46H  TO BE USED IN BIFURCATION BUCKLING ANALYSIS         /)
      WRITE (6,20)
20    FORMAT(  130H   I     C11     C12      C14      C15      C22      
     1C24      C25      C44      C45      C55      C33      C36      C66
     2          //)
      DO 30 I=1,I5
30    WRITE (6,40)I,(C(I,J),J=1,10),(CSHEAR(I,J),J=1,3)
40    FORMAT(I4,1P13E9.2)
      RETURN
      END
C=DECK      PLAST
      SUBROUTINE PLAST(IS,I,I5,INTTOT,T,TTT,C,THERM,RING,CK1,CK2,E1,E2,
     1K1,K2,EST1,EST2,FKST1,FKST2,TSTORE,THSTOR,ZSTORE,S,SBBAR,EBARP,EP,
     2EC,SIGMA0,EPS0,EPCREP,EBARC,CSHEAR)
      REAL K1, K2
      DIMENSION C(I5,10),THERM(I5,4),T(I5,9),ZR(100),TSTORE(*)
      DIMENSION CSHEAR(I5,3),RING(*),SIGMA0(*),EPS0(*),EPCREP(*)
      DIMENSION SBBAR(*),EBARP(*),EP(2,*),EC(2,*),CK1(*),CK2(*)
      DIMENSION THSTOR(*),ZSTORE(*),TAXIAL(11,20),ITVAL(20)
      DIMENSION TPOINT(20),TTT(I5,10),S(I5),ITIN(20)
      DIMENSION EBARC(*)
      DIMENSION MTEMP(10),MPROP(10),IZIN(20)
      DIMENSION SGEFT(20),EPEFT(20),ETANT(20)
      COMMON/ALLRNG/NTOT,IPRE
      COMMON/RLSTAT/LSTAT,KRSEG,KRING,BET(99),BETS(99),WS(99),WSS(99)
      COMMON/TEMTUR/TEMP(201),P(201)
      COMMON/RPLST5/NTYP(99),NPARTS(99)
      COMMON/DEFM/EPEX1,EPEX2,FKEX1,FKEX2,JUP,IPLS(1) ,AT1
      COMMON/FANDD/ALPHA1,ALPHA2,TTURE,F1,F2,IHINGE,ITEST
      COMMON/FDATA/ S25,ECOEF,S26
      COMMON/MDATA/MP,E,U,U1,S24,S23,E11,E12,E22,EALP1,EALP2
      COMMON/IBUNCH/INOW,INOWH,INOWZ,MPROPX,NANR,NSME,NQ1,NQ2,NQ3,ICHNGE
      COMMON/THERWD/NWORD(201),NPLAST(201),NCREEP(201),NMAT(201),
     1              NALRED(201)
      COMMON/MATPRO/EPEFF(20,9),SGEFF(20,9),NITEG(9),EE(9),FNUE(9),AP(9)
      COMMON/MATP2/ETAN(20,9),MAXTRL,ITRIAL,EMAX(9),ATWEEN(95),SBRDF(95)
      COMMON/ITERS/ITER
      COMMON/TTTHK/TP(10),ZP(10),NTHICK,ZREF
      COMMON/ZGRAD/NTSGD
      COMMON/IBUKKK/IBUCKL
      COMMON/IFLOWS/IFLOW,ICREEP,IJNCT,IJNTB,ITSTOR,ITHSTR,IZSTOR,IBSTOR
      COMMON/FLSTEP/KSTEP,KSTEPM
      COMMON/NBGSTP/NBEG(201),NSTOPP(201),INTVAL(201)
      COMMON/CDATA/TFLOOR,CREEPN(9),CREEPM(9),CREEPA(9),CREEPB(9)
      COMMON/ORTHP/AL1(20),AL2(20),EXX(20),EYY(20),FNUXY(20),GS(20)
      COMMON/IOUTMN/INODMN(201,2),INODMX(201,2)
      FK1 = CK1(I)
      FK2 = CK2(I)
      G12 = 0.0
      NQ2 = 0
      NQ3 = 0
      NTSGD = 0
      IF (I.GT.1) GO TO 390
      S23 = SQRT(2.)/3.
      S26 = 2./SQRT(3.)
      KK = 0
      NTHICK = NWORD(IS)/10000000
      N2 = NTHICK * 10000000
      NTSTAT = (NWORD(IS)      - N2)/100000
      N3 = NTSTAT*100000
C  BUG FOUND AUG 25, 1986..100 CHANGED TO 2000 (SEE GEOM.NEW, NFACTS)
      NZIN =(NWORD(IS)      - N2 - N3)/2000
      N4 = NZIN*2000
C  END OF AUG 25 1986 BUG.
      NTIN = (NWORD(IS)      - N2 - N3 - N4)/10
      LAYERS = NWORD(IS)      - N2 - N3 - N4 - NTIN*10
      IF (NTSTAT.EQ.0) GO TO 80
      KUP1 = 2*(NTHICK-1) + 1
      IF(NTHICK.EQ.1) KUP1 = 2
      KK = 0
      DO 20 K=1,NTSTAT
      DO 10 J=1,KUP1
      KK = KK + 1
      TAXIAL(J,K) = TSTORE(KK)
10    CONTINUE
20    CONTINUE
      KUP = KUP1 - 1
      DO 30 K=1,NTSTAT
30    ITVAL(K) = TAXIAL(KUP1,K) + .01
      IF (NQ2.EQ.3) WRITE (6,40)(ITVAL(K),K=1,NTSTAT)
40    FORMAT(//' ITVAL=' 20I5)
      DO 70 K=1,KUP
      DO 50 L=1,NTSTAT
50    TPOINT(L) = TAXIAL(K,L)
      IF (NQ2.EQ.3) WRITE (6,60)(TPOINT(L),L=1,NTSTAT)
60    FORMAT(//' TEMP=' 1P11E11.2)
      CALL FINDZ(NTSTAT,ITVAL,TPOINT,I5,TTT(1,K),S)
70    CONTINUE
      GO TO 80
80    CONTINUE
      KCUP1 = LAYERS + 1
      KK = 0
      DO 100 K=1,NTIN
      DO 90 J=1,KCUP1
      KK = KK + 1
      TAXIAL(J,K) = THSTOR(KK)
90    CONTINUE
100   CONTINUE
      KCUP = LAYERS
      DO 110 K=1,NTIN
110   ITIN(K) = TAXIAL(KCUP1,K) + .01
      IF (NQ2.EQ.3) WRITE (6,120)(ITIN(K),K=1,NTIN)
120   FORMAT(' ITIN=' 20I5)
      DO 150 K=1,KCUP
      DO 130 L=1,NTIN
130   TPOINT(L) = TAXIAL(K,L)
      IF (NQ2.EQ.3) WRITE (6,140)(TPOINT(L),L=1,NTIN)
140   FORMAT(//' THCK=' 1P11E11.2)
      CALL FINDZ(NTIN,ITIN ,TPOINT,I5,T(1,K),S)
150   CONTINUE
      KK = 0
      DO 170 K=1,NZIN
      DO 160 J=1,2
      KK = KK + 1
      TAXIAL(J,K) = ZSTORE(KK)
160   CONTINUE
170   CONTINUE
      DO 180 K=1,NZIN
180   IZIN(K) = TAXIAL(2,K) + .01
      IF (NQ2.EQ.3) WRITE (6,190)(IZIN(K),K=1,NZIN)
190   FORMAT('  IZIN = '  20I5)
      DO 200 L=1,NZIN
200   TPOINT(L) = TAXIAL(1,L)
      IF (NQ2.EQ.3) WRITE (6,210)(TPOINT(L),L=1,NZIN)
210   FORMAT(//' ZIN =' 1P11E11.2)
      CALL FINDZ(NZIN,IZIN,TPOINT,I5,ZR,S)
      IF (NQ2.LT.3) GO TO 350
      WRITE (6,220)IS
220   FORMAT(//' REF. SURFACE, THICKNESS, AND TEMPERATURE DISTRIBUTIONS
     1IN SEGMENT ' I3//)
      WRITE (6,230)
230   FORMAT(/'  PT.   ZREF      TH1       TH2       TH3       TH4      
     1TH5      TEMP1     TEMP2     TEMP3     TEMP4     TEMP5     TEMP6  
     2'   / )
      LUP = NTHICK
      DO 340 K=1,I5
      GO TO (240,250,260,270,280),LAYERS
240   WRITE (6,290)K,ZR(K),(T(K,L),L=1,LAYERS),(TTT(K,L),L=1,LUP)
      GO TO 340
250   WRITE (6,300)K,ZR(K),(T(K,L),L=1,LAYERS),(TTT(K,L),L=1,LUP)
      GO TO 340
260   WRITE (6,310)K,ZR(K),(T(K,L),L=1,LAYERS),(TTT(K,L),L=1,LUP)
      GO TO 340
270   WRITE (6,320)K,ZR(K),(T(K,L),L=1,LAYERS),(TTT(K,L),L=1,LUP)
      GO TO 340
280   WRITE (6,330)K,ZR(K),(T(K,L),L=1,LAYERS),(TTT(K,L),L=1,LUP)
290   FORMAT(I4,1P2E10.2,40X,1P6E10.2)
300   FORMAT(I4,1P3E10.2,30X,1P6E10.2)
310   FORMAT(I4,1P4E10.2,20X,1P6E10.2)
320   FORMAT(I4,1P5E10.2,10X,1P6E10.2)
330   FORMAT(I4,1P12E10.2)
340   CONTINUE
350   CONTINUE
      MPROP(1) = NMAT(IS)
      MP = MPROP(1)
      IF (LAYERS.EQ.1) INTTOT = NITEG(MP)
      IF (LAYERS.EQ.1) GO TO 390
      DO 360 K=1,LAYERS
      KDIV = 10**(LAYERS-K)
360   MTEMP(K) = NMAT(IS)/KDIV
      MPROP(1) = MTEMP(1)
      MP = MPROP(1)
      INTTOT = NITEG(MP)
      DO 370 K=2,LAYERS
      KM = K - 1
      MPROP(K) = MTEMP(K) - MTEMP(KM)*10
      MP = MPROP(K)
370   INTTOT = INTTOT + NITEG(MP)
      DO 380 K=1,10
      TP(K) = 0.0
380   ZP(K) = 0.0
390   CONTINUE
      IFK = 45/(INTTOT+1)
      IIOUT = I - INODMN(IS,1) + 1
      ITEST=MOD(IIOUT,IFK)
      IF (NTSTAT.EQ.0) GO TO 430
      ZP(1) = 0.0
      DO 400 K=1,NTHICK
      KP = K + 1
      TP(K) = TTT(I,K)
      NTH2 = NTHICK- 2
      IF (K.GT.NTH2) GO TO 400
      KTHICK = NTHICK + K
      ZP(KP) = TTT(I,KTHICK)
400   CONTINUE
      ZP(NTHICK) = T(I,1)
      IF (LAYERS.EQ.1) GO TO 420
      DO 410 K=2,LAYERS
410   ZP(NTHICK) = ZP(NTHICK) + T(I,K)
420   CONTINUE
430   CONTINUE
      ZREF = ZR(I)
C     FIND STRAINS THROUGH THE THICKNESS.
C     STRAINI(Z) = STRAINI(0) - Z*KAPPAI(0) - ALPHA(Z)*TTURE(Z)
      IF (NQ2.EQ.3) WRITE (6,440)ZREF,(TP(K),K=1,6),(ZP(K),K=1,6)
440   FORMAT(' ZREF,TP,ZP='      13F8.3)
      IF (INODMN(IS,1).EQ.0) GO TO 470
      IF (I.LT.INODMN(IS,1)) GO TO 470
      IF (I.GT.INODMX(IS,1)) GO TO 470
      IF (ITEST.NE.0.AND.I.NE.INODMN(IS,1)) GO TO 470
      WRITE (6,450)
450   FORMAT(1H1)
      WRITE (6,460)
C460  FORMAT(  130H SEG. PT. LAYER  Z  EFFECT. MERID.  CIRC. PLASTIC STR
C    1AIN  CREEP STRAIN  EFFECT. TEMP. YIELD  TANGENT   TOTAL-THERMAL   
C    2EFFECT.      /130H          (FROM     STRESS  STRESS STRESS MERID.
C    3  CIRC.   MERID.  CIRC. PLASTIC (DEG) STRESS MODULUS STRAIN COMPON  
C    4ENTS UNIAXIAL     /130H          INNER)    (KSI)   (KSI)  (KSI) (P
C    5E R C E N T) (P E R C E N T) STRAIN        (KSI)   X10-6   MERID. 
C    6  CIRC.    STRAIN         )
  460 FORMAT(     ' SEG. PT. LAYER  Z  EFFECT. MERID.  CIRC. PLASTIC STR
     1AIN  CREEP STRAIN  EFFECT. TEMP.     YIELD TANGENT   TOTAL-THERMAL
     2    EFFECT'
     3/   '          (FROM     STRESS  STRESS STRESS  MERID.  CIRC.  MER
     4ID.  CIRC. PLASTIC (DEG)    STRESS MODULUS STRAIN COMPONENTS UNIAX
     5IAL'
     6/   '          INNER)    (KSI)   (KSI)  (KSI)    (PERCENT)       (
     7PERCENT)   STRAIN            (KSI)  X10-6    MERID.   CIRC.   STRA
     8IN'               )
470   CONTINUE
      IPLS(1) = 0
480   KK = 0
      TTOTL = 0.0
      IHINGE = 1
      DO 560 K=1,LAYERS
      EPEX1 = E1
      EPEX2 = E2
      FKEX1 = K1
      FKEX2 = K2
      MP = MPROP(K)
      NTOTL = NITEG(MP)
      THICK = T(I,K)
      TTOTL = TTOTL + THICK
      ZBEGIN = TTOTL - THICK - ZREF
      DZETA = THICK/FLOAT(NTOTL-1)
      E = EE(MP)
      U = FNUE(MP)
      U1 = 1.-U
      S24 = (2.*U-1.)/(3.*E)
      S25 = 2.*(1.+U)/(3.*E)
      ECOEF = E/(1.-U*U)
      IATW = ATWEEN(MP) + 1
      UYX = 0.0
      IF (EXX(MP).GT.0.) UYX = FNUXY(MP)*EYY(MP)/EXX(MP)
      UDEN = 1. - UYX*FNUXY(MP)
      E11 = EXX(MP)/UDEN
      E22 = EYY(MP)/UDEN
      E12 = E11*UYX
      ALPHA1 = AL1(MP)
      ALPHA2 = AL2(MP)
      GO TO (490,500,510),IATW
490   EX = E/(1.-U*U)
      EY = EX
      UP = 0.5
      GO TO 520
500   EX = E
      EY = 0.
      S24 = 0.0
      S25 = 1./E
      U = 0.
      UP = 0.
      EPEX2 = 0.0
      FKEX2 = 0.0
      EST2 = 0.0
      FKST2 = 0.0
      GO TO 520
510   EX = 0.
      EY = E
      S24 = 0.0
      S25 = 1./E
      U = 0.
      UP = 0.
      EPEX1 = 0.0
      FKEX1 = 0.0
      EST1 = 0.0
      FKST1 = 0.0
520   CONTINUE
      DO 530 J=1,20
      SGEFT(J) = SGEFF(J,MP)
      EPEFT(J) = EPEFF(J,MP)
      ETANT(J) = ETAN(J,MP)
530   CONTINUE
      Z = ZBEGIN - DZETA
      FN = CREEPN(MP)
      FM = CREEPM(MP)
      CPA = CREEPA(MP)
      CPB = CREEPB(MP)
      IF (CPA.EQ.0.0) NCREEP(IS) = 0
      DO 550 J=1,NTOTL
      KK = KK + 1
      EP1 = EP(1,KK)
      EP2 = EP(2,KK)
      EC1 = 0.0
      EC2 = 0.0
      IF (ICREEP.NE.0) EC1 = EC(1,KK)
      IF (ICREEP.NE.0) EC2 = EC(2,KK)
      Z = Z + DZETA
      FMUL = 0.0
      F1 = 1. + FMUL *Z*FK1
      F2 = 1. + FMUL *Z*FK2
      TTURE = 0.0
      IF (NTSTAT.NE.0) TTURE=FUNCT(Z)
540   CALL FLOW(IS,I,S(I),K,EP1,EP2,EC1,EC2,Z,KK,SBBAR,EBARP,
     1EPEFT,ETANT,NQ2,SGEFT,G12,EST1,EST2,FKST1,FKST2,EX,EY,UP,EBARC,
     2FN,FM,CPA,CPB,NCREEP(IS))
550   CONTINUE
560   CONTINUE
C     TEST TO SEE IF ELASTIC-PLASTIC RING IS LOCATED AT THIS POINT
      IF (KRING.GT.NTOT) GO TO 580
      IPOS = (KRING - 1)*IPRE + 1
      KSEG = RING(IPOS)/1000.
      FSEG = KSEG
      KPOINT = RING(IPOS) - FSEG*1000.
      IF (IS.NE.KSEG) GO TO 580
      IF (I.NE.KPOINT) GO TO 580
C
C     THERE IS A RING AT THIS STATION. CHECK TO SE IF IT IS AN
C     ELASTIC-PLASTIC RING.
      IF (NTYP(KRING).EQ.0) GO TO 570
C     THE RING IS AN ELASTIC-PLASTIC RING
      CALL RPLAST(RING(IPOS),IS,I,SIGMA0,EPS0,EPCREP,ITRIAL)
570   KRING = KRING + 1
580   CONTINUE
      RETURN
      END
C=DECK      FLOW
      SUBROUTINE FLOW(ISEG,IPOINT,S,LAYER,EP1,EP2,EC1,EC2,Z,KK,SBBAR,
     1EBARP,EPEFF,ETAN,NQ2,SGEFF,G12,EST1,EST2,FKST1,FKST2,EX,EY,UP,
     2EBARC,FN,FM,CPA,CPB,ICREEP)
      COMMON/ITERS/ITER
      COMMON/FUTIME/DTIMEF
      COMMON/STSS/SIG1,SIG2
      COMMON/TEMTUR/TEMP(201),P(201)
C
      COMMON/TOMER/TOME,DTIME
      COMMON/ECFFI/ECEFF(100)
      COMMON/FANDD/ALPHA1,ALPHA2,TTURE,F1,F2,IHINGE,ITEST
      COMMON/FDATA/ S25,ECOEF,S26
      COMMON/MDATA/MP,E,U,U1,S24,S23,E11,E12,E22,EALP1,EALP2
      COMMON/SVTOM/TOMES
      COMMON/DEFM/E1,E2,K1,K2,            JUP,IPLS(1) ,AT1
      COMMON/FLSTEP/KSTEP,KSTEPM
      COMMON/SVTEMP/TEMPS(201)
      COMMON/NBGSTP/NBEG(201),NSTOPP(201),INTVAL(201)
      COMMON/IOUTMN/INODMN(201,2),INODMX(201,2)
      DIMENSION SBBAR(*),EBARP(*),EPEFF(20),ETAN(20),SGEFF(20)
      DIMENSION EPS1(50),EPS2(50) ,EBARC(*)
      REAL K1,K2
C     CALCULATES NEW VALUES FOR PLASTIC STRAIN,CREEP STRAIN, YIELD
C     SURFACE WITH USE OF VON MISES YIELD AND PRANDTL-REUSS FLOW.
      KTEST = MOD(KSTEP,INTVAL(ISEG))
      IPLS(1) = 0
      EBAR = EBARP(KK)
      ET = E
C
C     FIRST GET STRAINS THRU THICKNESS
C     CURRENT STRAINS AT KKTH STATION THRU THICKNESS
      EPS1(KK) = (E1 - Z*K1)/F1
      EPS2(KK) = (E2 - Z*K2)/F2
C
C
C     THERMAL STRAINS AT PRESENT AND AT LAST LOAD STEP
      TSTR1 = ALPHA1*TTURE*TEMP(ISEG)
      TSTR2 = ALPHA2*TTURE*TEMP(ISEG)
C
C     NOW CALCULATE ELASTIC STRAINS FOR CURRENT LOAD STEP
      E1ELAS = EPS1(KK) - EP1 - EC1 - TSTR1
      E2ELAS = EPS2(KK) - EP2 - EC2 - TSTR2
C
C     CALCULATE STRESSES
      SIG1 = E11*E1ELAS + E12*E2ELAS
      SIG2 = E12*E1ELAS + E22*E2ELAS
C
C     CALCULATE EFFECTIVE STRESS
      SBAR = SQRT(SIG1*SIG1 + SIG2*SIG2 - SIG1*SIG2)
C
C     NOW FIND TANGENT MODULUS
C
C     ETOT = TOTAL EFFECTIVE STRAIN
C
      ETOT = EBAR + S25*SBAR
      JJ = 1
      DO 10 MM=2,20
      JJ = JJ + 1
      IF (ETOT.LT.EPEFF(MM)) GO TO 20
10    CONTINUE
20    JJ1 = JJ - 1
      ET = ETAN(JJ1)
      IF (SBAR*1.001.LT.SBBAR(KK)) ET=E
      IF (ET.EQ.0.0) ET = 0.001*E
C
C     NOW WRITE OUT ALL IMPORTANT QUANTITIES
C
      SK1 = 0.001
      SK2 = 0.000001
      IF (E.GT.20000.) GO TO 30
      SK1 = 1.0
      SK2 = 0.001
30    CONTINUE
      SPBAR = SBAR*SK1
      SP1 = SIG1*SK1
      SP2 = SIG2*SK1
      EPR1 = EP1*100.0
      EPR2 = EP2*100.0
      ECR1 = EC1*100.0
      ECR2 = EC2*100.0
      EBARPR = EBAR*100.0
      TPTURE = TTURE*TEMP(ISEG)
      SPBAR1 = SBBAR(KK)*SK1
      ESP = ET*SK2
      EPP1 = (EPS1(KK)-TSTR1)*100.0
      EPP2 = (EPS2(KK) - TSTR2)*100.0
      EP1D = (ETOT - SBAR*S24)*100.0
      IF (KK.EQ.1) WRITE (6,40)
40    FORMAT(1H )
      IF (IPOINT.GE.INODMN(ISEG,1).AND.IPOINT.LE.INODMX(ISEG,1))
     1WRITE (6,50)ISEG,IPOINT,LAYER,Z,SPBAR,SP1,SP2,EPR1,EPR2,ECR1,ECR2,
     1EBARPR,TPTURE,SPBAR1,ESP,EPP1,EPP2,EP1D
50    FORMAT(2I4,I3,1X,F6.3,F8.2,2F7.2,F8.3,F7.3,F8.3,F7.3,F8.3,F7.1,
     1F10.1,F8.4,F8.3,F9.3,F9.3)
C
      RETURN
      END
C=DECK      FDSBAR
      SUBROUTINE FDSBAR(HRECIP,A00,   E,U,B1,B2,C1,C2,DS1,DS2,DSBAR)
      FK = HRECIP + A00
      A11 = 1./E + B1*B1*FK
      A12 = -U/E + B1*B2*FK
      A22 = 1./E + B2*B2*FK
      DEN = A11*A22 - A12*A12
      DS1 = (C1*A22 - C2*A12)/DEN
      DS2 = (C2*A11 - C1*A12)/DEN
      DSBAR = B1*DS1 + B2*DS2
      RETURN
      END
C=DECK      RPLAST
      SUBROUTINE RPLAST(RING,IS,I,SIGMA0,EPS0,EPCREP,ITRIAL)
C     THIS SUBROUTINE CALCULATES THE CROSS-SECTION PROPERTIES OF THE
C     ELASTIC-PLASTICALLY DEFORMED RING. THESE PROPERTIES ARE STORED IN
C     THE ARRAY RING(  ) FOR USE IN SUBROUTINE PRERNG.
C
C     KRSEG = GLOBAL RING SEGMENT NUMBER
C     KRING = GLOBAL RING NUMBER
      DIMENSION RING(20),SGEFF(20),EPEFF(20),ETAN(20),EBARC(50)
      DIMENSION EBARP(50),SIGMA0(*),EPS0(*),EPCREP(*)
      COMMON/RINGRD/RC(99)
      COMMON/DEFM/EPEX1,EPEX2,FKEX1,FKEX2,JUP,IPLS(1),AT1
      COMMON/FANDD/ALPHA1,ALPHA2,TTURE,F1,F2,IHINGE,ITEST
      COMMON/FDATA/ S25,ECOEF,S26
      COMMON/MDATA/MP,E,U,U1,S24,S23,E11,E12,E22,EALP1,EALP2
      COMMON/IBUNCH/INOW,INOWH,INOWZ,MPROPX,NANR,NSME,NQ1,NQ2,NQ3,ICHNGE
      COMMON/RLSTAT/LSTAT,KRSEG,KRING,BET(99),BETS(99),WS(99),WSS(99)
      COMMON/RPLST1/D1(99),D2(99),PHI(99),TT(99),FL(99),EE(10),ALPHA(10)
      COMMON/RPLST2/TEMPR(100),EPS(100),SIGMA(100)
      COMMON/RPLST4/JBEG(99),KBEG(10),NPOINT(10) ,NSUM1(199),NSUM2(199)
      COMMON/RPLST5/NTYP(99),NPARTS(99)
      COMMON/STSS/SIG1,SIG2
      COMMON/ITERS/ITER
      COMMON/FLSTEP/KSTEP,KSTEPM
      COMMON/RCDATA/RCREEN(9),RCREEM(9),RCREEA(9),RCREEB(9)
      COMMON/IOUTMN/INODMN(201,2),INODMX(201,2)
      BETA = BET(KRING)
      WSTAR = WS(KRING)
      IF (KRSEG.EQ.0) LSTAT = 1
      F1 = 1.0
      KK = 0
      NPART = NPARTS(KRING)
C     BEGIN LOOP OVER NUMBER OF SEGMENTS IN CURRENT RING
C
      IF (INODMN(IS,1).EQ.0) GO TO 12
      IF (I.GE.INODMN(IS,1).AND.I.LE.INODMX(IS,1)) WRITE(6,10)
   12 CONTINUE
10    FORMAT(21H  SHELL    RING DIST. /                                 
     121H SEG. PT.  SEG. ALONG /                                        
     227H            NO. RING SEG.          )                           
      DO 70 K=1,NPART
      KRSEG = KRSEG + 1
      NPRE = NSUM1(KRSEG)/10000
      INTEG = (NSUM1(KRSEG) - NPRE*10000)/100
      NMATL = NSUM1(KRSEG) -  NPRE*10000 - INTEG*100
      MP = NMATL
      NTEMP = NSUM2(KRSEG)/100
      NGEOM = NSUM2(KRSEG) - NTEMP*100
C
C     FOR EACH SEGMENT OF THE DISCRETE RING THE STRAIN IS EXPRESSED
C     IN THE FORM (E2-Z*K2)/F2,  WHERE Z IS THE DISTANCE MEASURED ALONG
C     THE RING SEGMENT AND F2 IS THE RADIUS OF THE RING MEASURED TO
C     THAT POINT.  IN THIS WAY THE STRAIN IN THE RING CAN BE HANDLED
C     IN AN ANALOGOUS MANNER TO THAT IN THE SHELL....THE NUMBER OF
C     LAYERS IN THE SHELL BECOMES THE NUMBER OF SEGMENTS IN THE RING
C     AND THE NUMBER OF INTEGRATION POINTS THROUGH THE THICKNESS OF EACH
C     LAYER OF THE SHELL BECOMES THE NUMBER OF INTEGRATION POINTS ALONG
C     THE LENGTH OF EACH SEGMENT OF THE DISCRETE RING.  THEN THE
C                 PLASTIC STRAIN INCREMENTS, CREEP STRAIN INCREMENTS
C     AND TANGENT MODULUS OF THE RING ARE DETERMINED IN EXACTLY THE
C     SAME WAY FOR THE RING AS THEY ARE FOR THE SHELL.  IN FACT THE
C     SAME SUBROUTINE,  FLOW,   IS USED FOR THESE CALCULATIONS.
C     E2 AND K2 ARE DEPENDENT ON THE RADIAL DISPLACEMENT WSTAR AND
C      MERIDIONAL ROTATION BETA
C
C     SEE SUBROUTINE RNGSEG FOR DEFINITIONS OF GEOMETRICAL (D1,D2,PHI,T,
C     FL) AND OTHER RING QUANTITIES.
C
      PHIRAD = PHI(NGEOM)*3.1415927/180.
      SP = SIN(PHIRAD)
      CP = COS(PHIRAD)
      EPEX1 = 0.0
      FKEX1 = 0.0
      EPEX2 = WSTAR - D1(NGEOM)*0.5*BETA*BETA + D2(NGEOM)*BETA
      FKEX2 = -BETA*SP + 0.5*BETA*BETA*CP
      T = TT(NGEOM)
      ZBEGIN = 0.0
      DZETA = FL(NGEOM)/FLOAT(INTEG-1)
      E =  EE(NMATL)
      U = 0.0
      U1 = 1.0
      E11 = 0.
      E12 = 0.
      E22 = E
      S24 = 0.0
      S25 = 1./E
      ECOEF = E
      IATW = 3
      EX = 0.
      EY = E
      ALPHA1 = 0.
      ALPHA2 = ALPHA(NMATL)
      UP = 0.
      Z = ZBEGIN-DZETA
      DIF1 = D2(NGEOM) - RING(5)
      DIF2 = D1(NGEOM) - RING(4)
      ISETX = 0
      IF (ABS(SP).LT.0.001.AND.ABS(DIF1).LT.T) ISETX = 1
      ISETY = 0
      IF (ABS(CP).LT.0.001.AND.ABS(DIF2).LT.T) ISETY = 1
C     GET MATERIAL PROPERTY CURVE FOR THIS RING SEGMENT
      NP = NPOINT(NMATL)
      KBEGIN = KBEG(NMATL)
      DO 20 LP=1,NP
      SGEFF(LP) = SIGMA(KBEGIN+LP-1)
      EPEFF(LP) = EPS(KBEGIN+LP-1)
20    CONTINUE
      DO 30 LP=2,NP
      LP1 = LP - 1
      ETAN(LP1) = (SGEFF(LP) - SGEFF(LP1))/(EPEFF(LP) -EPEFF(LP1))
      IF (ABS(ETAN(LP1)).LT.0.001*E) ETAN(LP1) = 0.001*E
30    CONTINUE
      NP1 = NP - 1
      ETAN(NP) = ETAN(NP1)
C     JBEGIN IS BEGINNING INDEX OF TEMPERATURE DISTRIBUTION
      JBEGIN = JBEG(NTEMP)
      J1 = KK + 1
      J2 = KK + INTEG
      DO 40 J=J1,J2
      LP = LSTAT + J - 1
      EBARP(J) = ABS(EPS0(LP))
      EBARC(J) = ABS(EPCREP(LP))
40    CONTINUE
      ICREEP = 1
      FN = RCREEN(MP)
      FM = RCREEM(MP)
      CPA = RCREEA(MP)
      CPB = RCREEB(MP)
      IF (CPA.EQ.0.0) ICREEP = 0
C
      IF (INODMN(IS,1).EQ.0) GO TO 52
      IF (I.GE.INODMN(IS,1).AND.I.LE.INODMX(IS,1)) WRITE(6,50)K,KRING
   52 CONTINUE
50    FORMAT(/31H STRESSED STATE OF SEGMENT NO.   I3,21H OF DISCRETE RIN
     1G NO.          I3)                                                
C     NOW INTEGRATE OVER THIS RING SEGMENT LENGTH
C
      DO 60 J=1,INTEG
      KK = KK + 1
      LSK = LSTAT + KK - 1
C     LSTAT = BEGINNING STATION FOR PLASTIC, CREEP, YIELD QUANTITIES.
      EP1 = 0.0
      EP2 = EPS0(LSK)
      EC1 = 0.0
      EC2 = EPCREP(LSK)
      Z = Z + DZETA
      F2 = RC(KRING) - RING(4) + D1(NGEOM) + Z*CP
      TTURE = TEMPR(JBEGIN+J-1)
      CALL FLOW(IS,I,Z   ,K,EP1,EP2,EC1,EC2,Z,KK,SIGMA0(LSTAT),
     1EBARP,      EPEFF,ETAN,NQ2,SGEFF,G12R,EST1,EST2,FKST1,FKST2,
     2EX,EY,UP,EBARC,FN,FM,CPA,CPB,ICREEP)
60    CONTINUE
70    CONTINUE
      IF (INODMN(IS,1).EQ.0) GO TO 82
      IF (I.GE.INODMN(IS,1).AND.I.LE.INODMX(IS,1)) WRITE(6,80) KRING
   82 CONTINUE
80    FORMAT(/' ****** END OF OUTPUT FOR DISCRETE RING NO. 'I3, '  *****
     1******        ******       ******      ******      ****** '/)
      LSTAT = LSTAT + KK
      KKK = KRING
      RETURN
      END
