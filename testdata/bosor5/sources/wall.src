C=DECK      WALLLIB
C
C  THIS IS THE WALL LIBRARY (SOURCE FILE)
C
C
C
C=DECK      WALLCF
      SUBROUTINE WALLCF
C
C  200-SEGMENT VERSION OF BOSOR5
C
C     OVERLAY(1,5)    (CDC VERSION)
C     PROGRAM WALLCF  (CDC VERSION)
C
C     CALLED FROM SEGMNT, WHICH IS CALLED FROM READIT
C     THE WALL STIFFNESS COEFFICIENTS CIJ ARE CALCULATED FOR THE
C     CURRENT SEGMENT,
      COMMON/THERWD/NWORD(201),NPLAST(201),NCREEP(201),NMAT(201),
     1              NALRED(201)
      COMMON/CMAXS/CMAX
      COMMON/ABXXX/C11,C12,C13,C14,C15,C16,C22,C23,C24,C25,C26,C33,C34
      COMMON/ACXXX/ C35,C36,C44,C45,C46,C55,C56,C66
      COMMON/SHMASS/SMPA
      COMMON/SMASS/CMASS(2000)
      COMMON/CSTIFF/C(20000)
      COMMON/SHEAR/CSHEAR(6000)
      COMMON/THERMO/THERM(8000)
      COMMON/IPOSN/IPOS,IPOS1,IPOS2,IPOS3,IPOS4
      COMMON/RGEOM2/Z(2000),ZAX(2000),ANGLE(2000),S(2000)
      COMMON/BGEOM/ B(10000)
      COMMON/TEMPDT/TAXIAL(11,20),NTSTAT,KUP1,ITVAL(20)
      COMMON/IMISC/ISEG,ITOT,KRING
      COMMON/SEGS/NSEG,M2,I5(201),I2,I2G
      COMMON/STORTP/TSTORE(2000),THSTOR(1000),ZSTORE(1000)
      COMMON/TTTHK/TP(10),ZP(10),NTHICK,ZRF
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSOUT,ANSAVE
      CHARACTER*4 CHARAC
      character upcase
      LOGICAL ANSL1
      DIMENSION TPOINT(20),TTT(100,10)
   10 FORMAT(/48H ENTERING SUBROUTINE WALLCF FOR SEGMENT NUMBER    I3/)
      I5I = I5(ISEG)
      II = ISEG
      WRITE (IFILE4,20)II
   20 FORMAT(/40X, 35HPHYSICAL PROPERTIES OF SEGMENT NO.          I3)
      IF (NTSTAT.EQ.0) GO TO 210
      KUP = KUP1 - 1
      DO 40 K=1,KUP
      DO 30 L=1,NTSTAT
   30 TPOINT(L) = TAXIAL(K,L)
      CALL FINDZ(NTSTAT,ITVAL,TPOINT,I5I,TTT(1,K),S(ITOT))
   40 CONTINUE
      WRITE (IFILE4,50)II
   50 FORMAT(/42H TEMPERATURE RISE DISTRIBUTION IN SEGMENT        I2)
      WRITE (IFILE4,60)
   60 FORMAT(/128H  SEG   PT    TEMP(LEFT)    TEMP(2)     TEMP(3)    TE
     1MP(4)     TEMP(5)     TEMP(6)     Z(2)        Z(3)        Z(4)
     2    Z(5)                                                         )
      DO 200 L=1,I5I
      GO TO (70,90,110,130,150,170),NTHICK
   70 WRITE (IFILE4,80)II,L,(TTT(L,K),K=1,KUP)
   80 FORMAT(2I5,1PE12.3)
      GO TO 190
   90 WRITE (IFILE4,100)II,L,(TTT(L,K),K=1,KUP)
  100 FORMAT(2I5,1P2E12.3)
      GO TO 190
  110 WRITE (IFILE4,120)II,L,(TTT(L,K),K=1,KUP)
  120 FORMAT(2I5,1P3E12.3,36X,1PE12.3)
      GO TO 190
  130 WRITE (IFILE4,140)II,L,(TTT(L,K),K=1,KUP)
  140 FORMAT(2I5,1P4E12.3,24X,1P2E12.3)
      GO TO 190
  150 WRITE (IFILE4,160)II,L,(TTT(L,K),K=1,KUP)
  160 FORMAT(2I5,1P5E12.3,12X,1P3E12.3)
      GO TO 190
  170 WRITE (IFILE4,180)II,L,(TTT(L,K),K=1,KUP)
  180 FORMAT(2I5,1P6E12.3,1P4E12.3)
  190 CONTINUE
  200 CONTINUE
  210 CONTINUE
      DO 290 I=1,I5I
      I1 = ITOT + I - 1
      ZRF = Z(I1)
      IF (NTSTAT.EQ.0) GO TO 230
      ZP(1) = 0.0
      DO 220 K=1,NTHICK
      K1 = K + 1
      TP(K) = TTT(I,K)
      IF (K.GT.(NTHICK-2)) GO TO 220
      KTHICK = NTHICK + K
      IF (KTHICK.GT.KUP) GO TO 220
      ZP(K1) = TTT(I,KTHICK)
  220 CONTINUE
  230 CONTINUE
C
C     CFB5 FINDS CONSTITUTIVE LAW FOR LAYERED SHELL, EACH LAYER OF
C     WHICH MAY HAVE DIFFERENT ELASTIC-PLASTIC PROPERTIES.
C
      CALL CFB5(I,B(IPOS2),Z(I1),I5I,THERM(IPOS1),S(ITOT),B(IPOS2+I5I),
     1 II,ZAX(ITOT))
      IARG1 = IPOS + I - 1
      IARG2 = IPOS +   I5I + I - 1
      IARG3 = IPOS + 2*I5I + I - 1
      IARG4 = IPOS + 3*I5I + I - 1
      IARG5 = IPOS + 4*I5I + I - 1
      IARG6 = IPOS + 5*I5I + I - 1
      IARG7 = IPOS + 6*I5I + I - 1
      IARG8 = IPOS + 7*I5I + I - 1
      IARG9 = IPOS + 8*I5I + I - 1
      IARG10= IPOS + 9*I5I + I - 1
      C(IARG1) = C11
      C(IARG2) = C12
      C(IARG3) = C14
      C(IARG4) = C15
      C(IARG5) = C22
      C(IARG6) = C24
      C(IARG7) = C25
      C(IARG8) = C44
      C(IARG9) = C45
      C(IARG10)= C55
      IARG = ITOT + I - 1
      IARG1 = IPOS3 + I - 1
      IARG2 = IPOS3 + I5I + I - 1
      IARG3 = IPOS3 + 2*I5I + I - 1
      CSHEAR(IARG1) = C33
      CSHEAR(IARG2) = C36
      CSHEAR(IARG3) = C66
C     SHELL MASS/SURFACEAREA
      CMASS(IARG) = SMPA
      IF (I.EQ.1) GO TO 235
      IF (upcase(ANSAVE(1:1)).EQ.'N') GO TO 280
  235 CONTINUE
      IF (I.GT.1) GO TO 260
      CALL DATUM(IFILE2,470,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      WRITE(IOUT,510)
  510 FORMAT(6X,'H',9X,'$ END OF DATA FOR THIS SEGMENT')
      ANSAVE = ANSOUT
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 280
C
      WRITE (IFILE4,240)II
  240 FORMAT(//76H  WALL STIFFNESS COEFFICIENTS,CIJ, AND MASS/AREA, SMPA
     1, FOR SEGMENT NUMBER        I3)
      WRITE (IFILE4,250)
  250 FORMAT(/130H   C11      C12      C14      C15      C22      C24  
     1    C25      C44      C45      C55      C33      C36      C66   SM
     2PA                         /)
  260 CONTINUE
      WRITE(IFILE4,270)
     1C11,C12,C14,C15,C22,C24,C25,C44,C45,C55,C33,C36,C66,SMPA
  270 FORMAT(1P14E9.2)
  280 CONTINUE
      IF (II.EQ.1.AND.I.EQ.1) CMAX = ABS(C11)
      CMAX = AMAX1(ABS(C11),CMAX)
  290 CONTINUE
      NWORD(ISEG) = NWORD(ISEG) + NTSTAT*100000 +NTHICK*10000000
      RETURN
C     RETURN CARD NOT NEEDED IN CDC VERSION
      END
C=DECK      CFB5
      SUBROUTINE CFB5(K,RAD,Z,I5,THERM,S,RADD,ISEG,ZAXIAL)
C
C     SUBROUTINE FOR ORTHOTROPIC LAYERED SHELLS
C     MATERIAL PROPERTIES ARE ASSUMED TO BE TEMPERATURE-INDEPENDENT
C     THERMAL STRESS RESULTANTS	NT AND MT ARE CALCULATED
C
      DIMENSION	RAD(100),RADD(100),ALPHA1(20),ALPHA2(20),THERM(I5,4)
      DIMENSION	MPROP(10),MTEMP(10),TAXIAL(10  ,20)
      COMMON/STORTP/TSTORE(2000),THSTOR(1000),ZSTORE(1000)
      COMMON/TEMPDT/TAX(11,20),NTSTAT,KP1,ITVAL(20)
      COMMON/IBUNCH/INOW,INOWH,INOWZ,MPROPX,NANRS,NSMEAR,NQ1,NQ2,NQ3,NQ4
      COMMON/THERWD/NWORD(201),NPLAST(201),NCREEP(201),NMAT(201),
     1              NALRED(201)
      COMMON/MATPRO/EPEFF(20,9),SGEFF(20,9),NITEG(9),EE(9),FNUE(9),AP(9)
      COMMON/MATP2/ETAN(20,9),MAXTRL,ITRIAL,EMAX(9),ATWEEN(95),SBRDF(95)
      COMMON/TTTHK/TP(10),ZP(10),NTHICK,ZRF
      COMMON/IGOVN/ITTURE(201),IDEPTH(201),IREFZ(201),ILONG
      DIMENSION	ETEMP(20)
      COMMON/ZGRAD/NTSGD
      COMMON/ABXXX/C11,C12,C13,C14,C15,C16,C22,C23,C24,C25,C26,C33,C34
      COMMON/ACXXX/ C35,C36,C44,C45,C46,C55,C56,C66
      COMMON/SHMASS/SMPA
      COMMON/CDATA/TFLOOR,CREEPN(9),CREEPM(9),CREEPA(9),CREEPB(9)
      COMMON/ECFFI/ECEFF(100)
      COMMON/IFLOWS/IFLOW,ICREEP,IJNCT,IJNTB,ITSTOR,ITHSTR,IZSTOR,IBSTOR
      DIMENSION	SM(20),T(20),S(100),ZAXIAL(100)
      DIMENSION	ITIN(50),THICK(100,16),TIN(50)
      DIMENSION	G(20),EX(20),EY(20),UXY(20),UYX(20),U1(20)
C BEG AUG 2005
      DIMENSION EPSALW(20)
      COMMON/ORTHP2/SMM(20),EPSALL(20)
C END AUG 2005
      COMMON/ORTHP/AL1(20),AL2(20),EXX(20),EYY(20),FNUXY(20),GS(20)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSOUT,ANCREP(20)
      CHARACTER*4 CHARAC
      LOGICAL ANSL1
C
   10 FORMAT(10I6)
   20 FORMAT(2I6,5E12.8)
   30 FORMAT (6E12.8)
   40 FORMAT(/59X,10HMODULUS OF,7X,7HPOISSON,8X,7HDENSITY/35X,5HLAYER,5X
     1 ,9HTHICKNESS,5X,10HELASTICITY,8X,5HRATIO)
   50 FORMAT(37X,I2,2X,4E15.8)
   60 FORMAT(/28X,5HSHEAR,9X,6HYOUNGS,9X,6HYOUNGS,9X,7HPOISSON
     1 ,8X, 7HDENSITY,7X,7HTHERMAL,9X,7HTHERMAL  /
     2 1X,5HLAYER,5X,9HTHICKNESS,7X,7HMODULUS,6X,10HMODULUS(X),5X,
     310HMODULUS(Y),6X,9HRATIO(XY),20X,11HEXP.COEF(X),5X,11HEXP.COEF(Y))
   70 FORMAT(3X,I2,2X,8E15.8)
   80 FORMAT(/63H  ANALYSIS IS FOR A LAYERED SHELL.   INNER LAYER IS N
     1UMBER 1   )
C
C
      IF (K.NE.1) GO TO	560
      WRITE (IFILE4,80)
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ SHELL WALL CONSTRUCTION FOLLOWS...')
      CALL DATUM(IFILE2,282,0,0,INT,REALL,CHARAC,IOUT,0,1)
C
      CALL DATUM(IFILE2,284,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 99
      CALL DATUM(IFILE2,285,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 57
      CALL DATUM(IFILE2,286,0,0,INT,REALL,CHARAC,IOUT,0,1)
   57 CALL DATUM(IFILE2,288,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      ISTR = 0
      ISTYPE = 0
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 84
      CALL DATUM(IFILE2,289,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      ISTR = 1
      IF (ANSL1('Y',ANSOUT,INFILE)) GO TO 82
      ISTR = 2
C
   82 CALL DATUM(IFILE2,290,1,2,ISTYPE,REALL,CHARAC,IOUT,0,1)
      IF (ISTYPE.NE.1.AND.ISTYPE.NE.2.AND.ISTYPE.NE.3) THEN
       WRITE(6,*)' ISTYPE  MUST BE EITHER  1  or  2  or  3'
       CALL ERREX
      ENDIF
C
C
   84 CALL DATUM(IFILE2,292,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IRNG = 0
      IRTYPE = 0
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 88
      CALL DATUM(IFILE2,293,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IRNG = 1
      IF (ANSL1('Y',ANSOUT,INFILE)) GO TO 86
      IRNG = 2
C
   86 CONTINUE
      IF (ISTR.NE.IRNG) GO TO 55
      WRITE(6,56)
   56 FORMAT(/' SMEARED STRINGERS AND SMEARED RINGS CANNOT BE'/
     1        ' ON THE SAME SIDE OF THE SHELL WALL.'/)
      REWIND IFILE2
      GO TO 57
C
   55 CALL DATUM(IFILE2,294,1,2,IRTYPE,REALL,CHARAC,IOUT,0,1)
      IF (IRTYPE.NE.1.AND.IRTYPE.NE.2.AND.IRTYPE.NE.3) THEN
       WRITE(6,*)' IRTYPE  MUST BE EITHER  1  or  2  or  3'
       CALL ERREX
      ENDIF
C
C
   88 CONTINUE
C
      IF (ISTR.EQ.0) GO TO 52
      CALL DATUM(IFILE2,295,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 94
      GO TO (91,92,93),ISTYPE
   91 CALL DATUM(IFILE2,298,0,0,INT,REALL,CHARAC,IOUT,0,1)
      GO TO 94
   92 CALL DATUM(IFILE2,300,0,0,INT,REALL,CHARAC,IOUT,0,1)
      GO TO 94
   93 CALL DATUM(IFILE2,302,0,0,INT,REALL,CHARAC,IOUT,0,1)
   94 CONTINUE
C
      GO TO (71,76),ISTR
   71 CONTINUE
      GO TO (72,73,74),ISTYPE
   72 WRITE(6,62)
   62 FORMAT(' Smeared stringers form the first (leftmost) layer'/
     1        ' of the stringer-shell wall combination.')
      GO TO 81
   73 WRITE(6,63)
   63 FORMAT(' Smeared stringers form the first two (leftmost)'/
     1        ' layers of the stringer-shell wall combination.')
      GO TO 81
   74 WRITE(6,64)
   64 FORMAT(' Smeared stringers form the first three (leftmost)'/
     1        ' layers of the stringer-shell wall combination.')
      GO TO 81
C
   76 CONTINUE
      GO TO (77,78,79),ISTYPE
   77 WRITE(6,67)
   67 FORMAT(' Smeared stringers form the last (rightmost) layer'/
     1        ' of the shell wall-stringer combination.')
      GO TO 81
   78 WRITE(6,68)
   68 FORMAT(' Smeared stringers form the last two (rightmost)'/
     1        ' layers of the shell wall-stringer combination.')
      GO TO 81
   79 WRITE(6,69)
   69 FORMAT(' Smeared stringers form the last three (rightmost)'/
     1        ' layers of the shell wall-stringer combination.')
   81 CONTINUE
C
   52 CONTINUE
C
      IF (IRNG.EQ.0) GO TO 99
      IF (ISTR.NE.0) REWIND IFILE2
      CALL DATUM(IFILE2,296,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 54
      GO TO (96,97,98),IRTYPE
   96 CALL DATUM(IFILE2,298,0,0,INT,REALL,CHARAC,IOUT,0,1)
      GO TO 54
   97 CALL DATUM(IFILE2,300,0,0,INT,REALL,CHARAC,IOUT,0,1)
      GO TO 54
   98 CALL DATUM(IFILE2,302,0,0,INT,REALL,CHARAC,IOUT,0,1)
   54 CONTINUE
      GO TO (41,46),IRNG
   41 CONTINUE
      GO TO (42,43,44),IRTYPE
   42 WRITE(6,32)
   32 FORMAT(' Smeared rings form the first (leftmost) layer'/
     1        ' of the ring-shell wall combination.')
      GO TO 51
   43 WRITE(6,33)
   33 FORMAT(' Smeared rings form the first two (leftmost)'/
     1        ' layers of the ring-shell wall combination.')
      GO TO 51
   44 WRITE(6,34)
   34 FORMAT(' Smeared rings form the first three (leftmost)'/
     1        ' layers of the ring-shell wall combination.')
      GO TO 51
C
   46 CONTINUE
      GO TO (47,48,49),IRTYPE
   47 WRITE(6,37)
   37 FORMAT(' Smeared rings form the last (rightmost) layer'/
     1        ' of the shell wall-ring combination.')
      GO TO 51
   48 WRITE(6,38)
   38 FORMAT(' Smeared rings form the last two (rightmost)'/
     1        ' layers of the shell wall-ring combination.')
      GO TO 51
   49 WRITE(6,39)
   39 FORMAT(' Smeared rings form the last three (rightmost)'/
     1        ' layers of the shell wall-ring combination.')
   51 CONTINUE
C
   99 CONTINUE
C
      CALL DATUM(IFILE2,305,1,2,LAYERS,REALL,CHARAC,IOUT,0,1)
      IF (LAYERS.LE.0.OR.LAYERS.GT.6) THEN
       WRITE(6,*)' LAYERS  MUST BE IN THE RANGE FROM  1   TO   6'
       CALL ERREX
      ENDIF
C
      CALL DATUM(IFILE2,308,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      NTYPET = 0
      IF (ANSL1('N',ANSOUT,INFILE)) NTYPET = 1
C
      NRS = 0
      KUP1 = LAYERS + 1
C
C     LAYERS = NO. OF LAYERS
C
C
C     NTYPET = 0	CONSTANT THICKNESS LAYERS
C     NTYPET = 1	VARIABLE THICKNESS LAYERS
C
      NWORD(ISEG) = NWORD(ISEG)	+ LAYERS
      DO 90 I=1,LAYERS
   90 T(I) = 0.0
C
C     I	= 1 . .	INNER LAYER,   I = LAYERS . . OUTER LAYER
C     T	=  THICKNESS
C     G	=  SHEAR MODULUS
C     EX =  MERIDIONAL MODULUS
C     EY =  CIRCUMFERENTIAL MODULUS
C     UXY = POISSON,S RATIO . .	EY*UXY = EX*UYX
C     SM = LAYER MATERIAL MASS DENSITY
C     ALPHA1 = MERIDIONAL THERMAL EXPANSION COEFFICIENT
C     ALPHA2 = CIRCUMFERENTIAL THERMAL EXPANSION COEFFICIENT
C
C
      DO 95 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,312,1,2,MPROP(I),REALL,CHARAC,IOUT,I,IPROMP)
      IF (MPROP(I).LE.0.OR.MPROP(I).GT.9) THEN
       WRITE(6,*)' MATL   MUST BE IN THE RANGE FROM   1   TO  9'
       CALL ERREX
      ENDIF
C
   95 CONTINUE
C
      IF (NTYPET.NE.0) GO TO 110
      DO 102 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,313,1,1,INT,T(I),CHARAC,IOUT,I,IPROMP)
  102 CONTINUE
C
      NTIN = 2
      DO 100 I=1,LAYERS
      TAXIAL(I,2) = T(I)
  100 TAXIAL(I,1) = T(I)
      TAXIAL(KUP1,1) = 1
      TAXIAL(KUP1,2)= I5
  110 CONTINUE
      DO 111 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,315,1,1,INT,G(I),CHARAC,IOUT,I,IPROMP)
  111 CONTINUE
C
      DO 112 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,316,1,1,INT,EX(I),CHARAC,IOUT,I,IPROMP)
  112 CONTINUE
C
      DO 113 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,317,1,1,INT,EY(I),CHARAC,IOUT,I,IPROMP)
  113 CONTINUE
C
      DO 114 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,318,1,1,INT,UXY(I),CHARAC,IOUT,I,IPROMP)
  114 CONTINUE
C
C BEG AUG 2005
      DO 87 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,319,1,1,INT,SM(I),CHARAC,IOUT,I,IPROMP)
   87 CONTINUE
C END AUG 2005
      DO 115 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,320,1,1,INT,ALPHA1(I),CHARAC,IOUT,I,IPROMP)
  115 CONTINUE
C
      DO 116 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,321,1,1,INT,ALPHA2(I),CHARAC,IOUT,I,IPROMP)
  116 CONTINUE
C
C BEG FEB 2009
      REWIND IFILE2
C END FEB 2009
      DO 117 I = 1,LAYERS
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,324,1,1,INT,EPSALW(I),CHARAC,IOUT,I,IPROMP)
  117 CONTINUE
C
      CALL DATUM(IFILE2,330,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      NPLAST(ISEG) = 1
      IF (ANSL1('N',ANSOUT,INFILE)) NPLAST(ISEG) = 0
      CALL DATUM(IFILE2,340,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      NCREEP(ISEG) = 0
      IF (ANSL1('Y',ANSOUT,INFILE)) NCREEP(ISEG) = 1
      IF (NCREEP(ISEG).GT.0) ICREEP = 1
C
C     NPLAST(ISEG) = 1 PLASTICITY OR CREEP OR BOTH IN SEGMENT ISEG
C     NPLAST(ISEG) = 0 NO PLASTICITY NOR CREEP IN SEGMENT ISEG
C     SBRDF(ISEG) = EXTRAPOLATION MADE EVERY SBRDF(ISEG)TH TRIAL
C
      MPROPS = MPROPX
      NMAT(ISEG) = 0
      DO 120 I=1,LAYERS
C BEG AUG 2005 (comment out the following)
C     SM(I) = 0.0
C END AUG 2005
      NMAT(ISEG) = NMAT(ISEG) + MPROP(I)*10**(LAYERS-I)
  120 CONTINUE
C     MP,MPROP(I) = MATERIAL TYPE (E.G.	1,2,3,4,....)
C     NALRED(ISEG) = 1 MATERIAL	PROPERTIES HAVE	BEEN READ IN PREVIOUSLY
C     NALRED(ISEG) = 0 MATERIAL	PROPERTIES HAVE	NOT BEEN READ IN
C     SGEFF(IPOINT,MP)	= EFFECTIVE STRESS
C     EPEFF(IPOINT,MP) = EFFECTIVE UNIAXIAL STRAIN
C     NITEG(MP)	= NO. OF INTEGRATION POINTS THRU LAYER
C
      DO 340 I=1,LAYERS
      REWIND IFILE2
  150 FORMAT(35H MATERIAL PROPERTIES FOR LAYER NO.      I2,
     1  43H HAVE BEEN GIVEN PREVIOUSLY. MATERIAL TYPE      I2)
      WRITE(6,155) I
  155 FORMAT(/' Shell wall layer no.',I2,'.  A stress-strain curve'/
     1        ' the material of this layer must be provided by you'/
     1        ' if the same material has not appeared in a previous'/
     1        ' layer of this segment or in the shell wall of a'/
     1        ' previous shell segment.  Note that you must provide'/
     1        ' a stress-strain curve here even if the same material'/
     1        ' has been specified previously for a discrete ring'/
     1        ' segment.'/)
      CALL DATUM(IFILE2,350,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      ANCREP(I) = ANSOUT
      IF (ANSL1('N',ANSOUT,INFILE)) WRITE(IFILE4,150) I,MPROP(I)
      IF (ANSL1('N',ANSOUT,INFILE)) GO TO 340
      WRITE (IFILE4,160)I
  160 FORMAT(/  35H MATERIAL PROPERTIES FOR LAYER NO.  I2,  7H FOLLOW )
      MP = MPROP(I)
      EE(MP) = EX(I)
      FNUE(MP) = UXY(I)
      AP(MP) = ALPHA1(I)
      ATWEEN(MP) = 0.0
      IF (EX(I).EQ.0.) EE(MP) =	EY(I)
      IF (EX(I).EQ.0.) AP(MP) =	ALPHA2(I)
      IF (EX(I).EQ.0.) ATWEEN(MP) = 2.0
      IF (EY(I).EQ.0.) ATWEEN(MP) = 1.0
      AL1(MP) = ALPHA1(I)
      AL2(MP) = ALPHA2(I)
      GS(MP) = G(I)
      EXX(MP) = EX(I)
      EYY(MP) = EY(I)
      FNUXY(MP) = UXY(I)
C BEG AUG 2005
      EPSALL(MP) = EPSALW(I)
      SMM(MP)    = SM(I)
C END AUG 2005
C
      UYX(I) = 0.
      IF (EX(I).GT.0.)UYX(I) = UXY(I)*EY(I)/EX(I)
      IF (UXY(I).GT.0.0.AND.EX(I).EQ.0.0) GO TO 165
      UTEST = 1. - UYX(I)*UXY(I)
      IF (UTEST.LT.0.0) GO TO 165
      GO TO 168
C
  165 CONTINUE
C
C     ILLEGAL MATERIAL PROPERTIES...
C
      WRITE(6,166) I,MP,UXY(I),UYX(I)
  166 FORMAT(//43H ILLEGAL MATERIAL PROPERTIES FOR LAYER NO. ,I3/,
     1         19H MATERIAL TYPE NO. ,I3/,
     2         47H BAD POISSON RATIO. NOTE THAT (1.-UXY*UYX) MUST,
     3         14H EXCEED ZERO. /,
     4          5H UXY=,1PE12.4,5H UYX=,1PE12.4//)
      CALL ERREX
  168 CONTINUE
      NITEG(MP) = 5
      NPOINT = 2
      ISSFUN = 0
      IF (NPLAST(ISEG).EQ.0) GO TO 169
      WRITE(6,167) I
  167 FORMAT(/' Stress-strain curve for material in shell wall'/
     1        ' layer no.',I2,' . . .'/)
      CALL DATUM(IFILE2,432,1,2,NPOINT,REALL,CHARAC,IOUT,I,1)
      IF (NPOINT.LT.2.OR.NPOINT.GT.20) THEN
       WRITE(6,*)' NPOINT  MUST BE IN THE RANGE FROM  2   TO   20'
       CALL ERREX
      ENDIF
C
      CALL DATUM(IFILE2,434,1,2,NITEG(MP),REALL,CHARAC,IOUT,I,1)
      NMP = NITEG(MP)
      IF (NMP.NE.3.AND.NMP.NE.5.AND.NMP.NE.7.AND.NMP.NE.9) THEN
       WRITE(6,*)' NITEG  MUST BE EITHER  3  or  5  or  7  or  9'
       CALL ERREX
      ENDIF
C
      CALL DATUM(IFILE2,435,1,1,INT,REALL,ANSOUT,IOUT,0,1)
      ISSFUN = 0
      IF (ANSL1('Y',ANSOUT,INFILE)) ISSFUN = 1
C
      IF (ISSFUN.NE.0) CALL DATUM(IFILE2,436,1,1,INT,SYP,CHARAC,IOUT,
     1 I,1)
      IF (ISSFUN.NE.0) CALL DATUM(IFILE2,438,1,2,INT,POWER,CHARAC,IOUT,
     1 0,1)
C
  169 CONTINUE
      EMAX(MP) = 3.
C
C     NPOINT = NO. OF DATA POINTS FOR INPUT STRESS-STRAIN CURVE
C     NITEG(MP)	= NO. OF INTEGRATION PTS. THRU THICKNESS OF LAYER
C     EMAX(MP) = MAXIMUM ALLOWABLE STRAIN OF MATERIAL MP
C     ETAN(MP) = TANGENT MODULUS OF MATERIAL MP
      FTEST1 = FLOAT(NITEG(MP))/2.
      NFTEST = FTEST1
      FTEST2 = NFTEST
      IF(FTEST1.EQ.FTEST2) NITEG(MP) = NITEG(MP) + 1
C
      IF (ISSFUN.NE.0) GO TO 170
      IF (NPLAST(ISEG).EQ.0) GO TO 190
      DO 171 L = 1,NPOINT
      IPROMP = 1
      IF (L.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,440,1,1,INT,EPEFF(L,MP),CHARAC,IOUT,L,IPROMP)
  171 CONTINUE
C
  170 CONTINUE
      DO 172 L = 1,NPOINT
      IPROMP = 1
      IF (L.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,442,1,1,INT,SGEFF(L,MP),CHARAC,IOUT,L,IPROMP)
  172 CONTINUE
C
      IF (ISSFUN.EQ.0) GO TO 190
      DO 180 L=1,NPOINT
      STTT = SGEFF(L,MP)
C     SPECIAL FORMULA FOLLOWS FOR GENERATION OF	STRESS-STRAIN CURVE.
C     THIS FORMULA CAN BE CHANGED BY USER, IF HE SO WISHES.
      EPEFF(L,MP) = STTT*(1. + (3./7.)*(STTT/SYP)**POWER)/EE(MP)
  180 CONTINUE
  190 CONTINUE
      IF (NPLAST(ISEG).NE.0) GO TO 193
      EPEFF(1,MP) = 0.
      EPEFF(2,MP) = 1.
      SGEFF(1,MP) = 0.
      SGEFF(2,MP) = EE(MP)
  193 CONTINUE
      NPP = NPOINT + 1
      NPM = NPOINT - 1
      EPEFF(NPP,MP) = EPEFF(NPOINT,MP)*100.
      SGEFF(NPP,MP) = SGEFF(NPOINT,MP) +(SGEFF(NPOINT,MP)-SGEFF(NPM,MP))
     1*(EPEFF(NPP,MP)-EPEFF(NPOINT,MP))/(EPEFF(NPOINT,MP)-EPEFF(NPM,MP))
      L	= 0
  200 L	= L + 1
      L1 = L + 1
      IF (L.GT.NPOINT) GO TO 210
      EDIF = EPEFF(L1,MP) - EPEFF(L,MP)
      ETAN(L,MP) =(SGEFF(L1,MP)	- SGEFF(L,MP))/EDIF
      IF (ETAN(L,MP).GE.0.00099*EE(MP))	GO TO 200
      ETAN(L,MP) = 0.001*EE(MP)
      SGEFF(L1,MP) = SGEFF(L,MP) + ETAN(L,MP)*EDIF
      L	= L - 1
      GO TO 200
  210 CONTINUE
      SGEFF(20,MP) = SGEFF(NPP,MP)
      ETAN(NPP,MP) = ETAN(NPOINT,MP)
      NPOINT = NPP
      WRITE (IFILE4,220)ISEG,MPROP(I),NITEG(MP)
  220 FORMAT(/ 44H ELASTIC-PLASTIC PROPERTIES FOR SEGMENT NO.      I2,
     119H.  MATERIAL TYPE =    I2,  23H.  INTEGRATION POINTS=  I2   )
      WRITE (IFILE4,230)
  230 FORMAT(130H DATA POINT       UNIAXIAL STRAIN     EFFECTIVE STRESS
     1   TOTAL EFFECTIVE STRAIN    SECANT MODULUS        TANGENT MODULUS
     2                                                                /)
      DO 250 L=1,NPOINT
      EP = EPEFF(L,MP)
      SPF = SGEFF(L,MP)
      U	= UXY(I)
      E	= EX(I)
      IF(E.EQ.0.) E = EY(I)
      IF(E.EQ.0.) E = 0.0001
      S24 = (2.*U-1.)/(3.*E)
      IF (EX(I).EQ.0.0)	S24 = 0.0
      IF (EY(I).EQ.0.0)	S24 = 0.0
      ETOT = EP	+ SPF*S24
      ES = E
      IF ( EP .NE. 0.0 )  ES = SPF/EP
      WRITE (IFILE4,240)L,EP,SPF,ETOT,ES,ETAN(L,MP)
  240 FORMAT(I8,1P5E22.4)
      EPEFF(L,MP   ) = ETOT
  250 CONTINUE
      IF (EPEFF(1,MP).GT.0.0) GO TO 260
      SGEFF(1,MP   ) = 0.0
      ETAN(1,MP) = EE(MP)
      GO TO 330
  260 CONTINUE
      DO 270 L=1,NPOINT
      L1 = L + 1
  270 ETEMP(L1)	= EPEFF(L,MP)
      ETEMP(1) = 0.0
      NP1 = NPOINT + 1
      DO 280 L=1,NP1
  280 EPEFF(L,MP) = ETEMP(L)
      DO 290 L=1,NPOINT
      L1 = L + 1
  290 ETEMP(L1)	= SGEFF(L,MP)
      ETEMP(1) = 0.0
      DO 300 L=1,NP1
  300 SGEFF(L,MP) = ETEMP(L)
      DO 310 L=1,NPOINT
      L1 = L + 1
  310 ETEMP(L1)	= ETAN(L,MP)
      ETEMP(1) = EE(MP)
      DO 320 L=1,NP1
  320 ETAN(L,MP) = ETEMP(L)
      NPOINT = NP1
  330 CONTINUE
      MPROPX = MPROPX +	1
  340 CONTINUE
  350 NPLAST(ISEG) = 1
      INTTOT = 0
      DO 360 I=1,LAYERS
      MP = MPROP(I)
  360 INTTOT = INTTOT +	NITEG(MP)
      ILONG = ILONG + INTTOT*I5
C
C     ILONG = TOTAL MERIDIONAL POINTS TIMES INTEGRATION	POINTS THRU
C	      EACH LAYER SUMMED	OVER LAYERS AND	OVER SEGMENTS
C
C     NCREEP(ISEG) = 1 CREEP IN	SEGMENT	ISEG
C     NCREEP(ISEG) = 0 NO CREEP	IN SEGMENT ISEG
  370 IF (NCREEP(ISEG).EQ.0) GO	TO 450
      WRITE (IFILE4,380)ISEG
  380 FORMAT(//30H  CREEP PROPERTIES OF SEGMENT      I2//)
      WRITE (IFILE4,390)
  390 FORMAT(100H LAYER   VARIABLE NOT USEDTIME EXPONENT    STRESS EXPON
     1ENT      YIELD STRESS       INITIAL TIME                       //)
      DO 440 I=1,LAYERS
      IF (ANSL1('N',ANCREP(I),INFILE)) GO TO 440
      MP = MPROP(I)
      IF (MP.LE.MPROPS)	WRITE (IFILE4,150)I,MPROP(I)
      IF (MP.LE.MPROPS)	GO TO 440
      REWIND IFILE2
      TFLOOR = 0.
      CALL DATUM(IFILE2,444,1,2,INT,CREEPN(MP),CHARAC,IOUT,I,1)
      CALL DATUM(IFILE2,446,1,1,INT,CREEPM(MP),CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,448,1,1,INT,CREEPA(MP),CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,450,1,1,INT,CREEPB(MP),CHARAC,IOUT,0,1)
C
C
C     TFLOOR = ABSOLUTE	VALUE OF AMBIENT TEMPERATURE (EG 293 DEG C.)
C     CREEPN(MPROP) = EXPONENT ON TIME
C     CREEPM(MPROP) = EXPONENT ON EFFECTIVE STRESS
C     CREEPA(MPROP) = COEFFICIENT ,  K
C     CREEPB(MPROP) = INITIAL TIME USED	IN CREEP ANALYSIS
C
      WRITE (IFILE4,400)I,TFLOOR,CREEPN(MP),CREEPM(MP),CREEPA(MP)
     1  ,CREEPB(MP)
  400 FORMAT(I5,1P5E18.6)
      DO 410 J=1,NPOINT
  410 ECEFF(J) = 0.0
      DO 430 J=1,NPOINT
      SOCR = SGEFF(J,MP)/CREEPA(MP)
      IF (SOCR.GT.10.) SOCR = 10.
      FM = CREEPM(MP)
      RATIO = SOCR**FM/100.
      IF (RATIO.LT.0.00001) RATIO = 0.0
      IF (RATIO.EQ.0.0)	GO TO 430
      FN = CREEPN(MP)
      ECEFF(J) = RATIO*CREEPB(MP)**FN
      WRITE (IFILE4,420)J,SGEFF(J,MP),ECEFF(J)
  420 FORMAT(4H  J= I4,20H  EFFECTIVE STRESS=   1PE15.5,
     1 35H  INITIAL EFFECTIVE CREEP STRAIN=      1PE15.5)
  430 CONTINUE
      MPROPS = MPROPS +	1
  440 CONTINUE
  450 CONTINUE
  460 IF (NTYPET.EQ.0) GO TO 500
C
C     NTIN = NO. OF MERIDIONAL STATIONS	FOR WHICH LAYER	THICKNESSES
C	     TO	BE READ	IN.. LOCATION OF CALLOUTS DETERMINED IN	STA
C     TIN = THICKNESS OF GIVEN LAYER AT	THE NTIN CALLOUT POINTS	DETER-
C	    MINED IN SUBROUTINE	STA.
C
      CALL DATUM(IFILE2,460,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,462,1,2,NTIN,REALL,CHARAC,IOUT,0,1)
      IF (NTIN.LT.2.OR.NTIN.GT.20) THEN
       WRITE(6,*)' NTIN  MUST BE IN THE RANGE FROM   2   TO   20'
       CALL ERREX
      ENDIF
C
      IPRM(2) = 463
      CALL STA(ITIN,ZAXIAL,RAD,RADD,S,NTIN,I5)
C
      CALL DATUM(IFILE2,466,0,0,INT,REALL,CHARAC,IOUT,0,1)
C
      DO 480 I=1,LAYERS
      WRITE(6,463) I
  463 FORMAT(/' Thickness of layer no.',I2,' at the meridional'/
     1        ' callout points just specified...'/)
      REWIND IFILE2
      DO 465 II = 1,NTIN
      IPROMP = 1
      IF (II.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,468,1,1,INT,TAXIAL(I,II),CHARAC,IOUT,II,IPROMP)
  465 CONTINUE
C
      DO 470 II=1,NTIN
  470 TIN(II) =	TAXIAL(I,II)
      CALL FINDZ(NTIN,ITIN,TIN,I5,THICK(1,I),S)
  480 CONTINUE
      DO 490 II=1,NTIN
  490 TAXIAL(KUP1,II) =	ITIN(II)
      GO TO 500
C
C     LAYER THICKNESSES	FROM FUNCTION. . .
C
C
  500 WRITE (IFILE4,60)
      KK = INOWH - 1
      DO 510 II=1,NTIN
      DO 510 I=1,KUP1
      KK = KK +	1
  510 THSTOR(KK) = TAXIAL(I,II)
      NWORD(ISEG) = NWORD(ISEG)	+ NTIN*10
      INOWH = INOWH + NTIN*KUP1
      WRITE (IFILE4,70)(I,T(I),G(I),EX(I),EY(I),UXY(I),SM(I),ALPHA1(I),
     1 ALPHA2(I), I=1,LAYERS)
      IF (NTYPET.EQ.0) GO TO 560
      WRITE (IFILE4,520)
  520 FORMAT(//77H  THICKNESS DISTRIBUTION OF LAYERS, STARTING WITH INNE
     1R LAYER AS NUMBER 1    )
      WRITE (IFILE4,530)
  530 FORMAT(//   ' POINT    T(1)      T(2)      T(3)      T(4)      T(5
     1)      T(6)      T(7)      T(8)      T(9)      T(10)     T(11)
     2 T(12)'    )
      DO 540 I=1,I5
  540 WRITE (IFILE4,550)I,(THICK(I,JJ),JJ=1,LAYERS)
  550 FORMAT(I5,1P12E10.2)
  560 CONTINUE
      IF (NTYPET.EQ.0) GO TO 580
      DO 570 I=1,LAYERS
  570 T(I) = THICK(K,I)
  580 CONTINUE
      BI=0.5*T(1)
      CB33=0.0
      C33=0.0
      DO 590 I=1,LAYERS
      UYX(I) = 0.0
      IF (EX(I).NE.0.0)	UYX(I) = EY(I)*UXY(I)/EX(I)
      U1(I)=1.0-UXY(I)*UYX(I)
      CI33=G(I)*T(I)
      CB33 = CB33 + BI*CI33
      C33=C33+CI33
      IF (I.LT.LAYERS) BI = BI + 0.5*(T(I) + T(I+1))
  590 CONTINUE
      BI=0.5*T(1)
      C11=0.0
      C12=0.0
      C14=0.0
      C15=0.0
      C22=0.0
      C24=0.0
      C25=0.0
      C36 = 0.0
      C44=0.0
      C45=0.0
      C55=0.0
      C66=0.0
      SMPA = 0.0
      DO 620 I=1,LAYERS
      SMPA = SMPA + SM(I)*T(I)
      HI=Z-BI
      HI2=HI*HI
      CI11=EX(I)*T(I)/U1(I)
      CI22=EY(I)*T(I)/U1(I)
      CI12 = UYX(I)*CI11
      IF ((CI11*CI22).GE.(CI12**2)) GO TO 610
      WRITE (IFILE4,600)I
  600 FORMAT(//40H WALL MATERIAL PROPERTIES FOR LAYER NO.  I3,14H INCONS
     1ISTENT.  /45H EX(I)/EY(I) MUST BE GREATER THAN UXY(I)**2     //)
      CALL ERREX
  610 CONTINUE
      CI14=HI*CI11
      CI15=HI*CI12
      CI25=HI*CI22
      CI33=G(I)*T(I)
      RT=T(I)**2/12.
      CI44=CI11*RT
      CI45=CI12*RT
      CI55=CI22*RT
      CI66=    CI33*RT
      C11=C11+CI11
      C12=C12+CI12
      C14=C14+CI14
      C15=C15+CI15
      C22=C22+CI22
      C25=C25+CI25
      C36 = C36	- HI*CI33
      C44=C44+CI44+HI2*CI11
      C45=C45+CI45+HI2*CI12
      C55=C55+CI55+HI2*CI22
      C66=C66+CI66+    HI2*CI33
      IF (I.LT.LAYERS) BI = BI +0.5*(T(I) +T(I+1))
  620 CONTINUE
      NP = NTHICK
      IF (NTHICK.EQ.1) NP = 2
      IF (NTSTAT.GT.0) ZP(NP) =	BI + T(LAYERS)/2.
      C24=C15
  630 CONTINUE
C     THERMAL LOADS FOR	KTH POINT OF IITH SEGMENT,LAYERED ORTHOTROPIC
      THERM(K,1) = 0.0
      THERM(K,2) = 0.0
      THERM(K,3) = 0.0
      THERM(K,4) = 0.0
      IF (NTSTAT.EQ.0) GO TO 660
      BB = 0.0
      NUM = 25
      ZRF = Z
      DO 650 I=1,LAYERS
      I1 = I - 1
      IF (I1.EQ.0) GO TO 640
      BB = BB +	T(I1)
  640 CONTINUE
      Z1 = -(Z	    -BB)
      Z2 = - (Z	- BB - T(I))
      NTSGD = 0
      CALL FINDTH(Z1,Z2,NUM,TN1)
      NTSGD = 1
      CALL FINDTH(Z1,Z2,NUM,TM1)
      E11 = EX(I)/U1(I)
      E22 = EY(I)/U1(I)
      E12 = UYX(I)*EX(I)/U1(I)
C     THERMAL STRESS RESULTANTS	AND MOMENT RESULTANTS
      ABAR1 = -ALPHA1(I)*E11 - ALPHA2(I)*E12
      ABAR2 = -ALPHA1(I)*E12 - ALPHA2(I)*E22
      THERM(K,1) = THERM(K,1) +	TN1*ABAR1
      THERM(K,2) = THERM(K,2) +	TN1*ABAR2
      THERM(K,3) = THERM(K,3) -	TM1*ABAR1
      THERM(K,4) = THERM(K,4) -	TM1*ABAR2
  650 CONTINUE
  660 CONTINUE
      IF (NRS.EQ.0) RETURN
      TD=BI+0.5*T(LAYERS)
C     CALL CFB1(K,RAD,NWALL,Z,TD,I5,S,C,RADD)
  670 CONTINUE
      RETURN
      END
C=DECK      FINDTH
      SUBROUTINE FINDTH(Z1,Z2,NUM,FOUT)
C
C     INTEGRAL OF TEMPERATURE THRU SHELL THICKNESS CALCULATED FROM
C     SIMPSON,S RULE. THIS SUBROUTINE CALLED FROM CFB2 AND CFB5, AND
C     APPLIES FOR SHELLS WHOSE WALL PROPERTIES ARE INDEPENDENT OF THE
C     TEMPERATURE.
C
      IC = NUM - 1
      T = Z2 - Z1
      DZ = T/FLOAT(IC)
      FOUT = 0.0
      Z = Z1
      DO 10 I=1,IC,2
      ZDZ = Z + DZ
      ZDZ2 = Z + 2.*DZ
C
C     TEMPERATURE PROFILE THRU THICKNESS DETERMINED BY FUNCT
C
      F1 =  FUNCT(Z   )
      F2 =  FUNCT(ZDZ )
      F3 =  FUNCT(ZDZ2)
      Z = ZDZ2
      FOUT = FOUT + (F1 + 4.*F2 + F3)*DZ/3.
   10 CONTINUE
      RETURN
      END
C=DECK      FUNCT
      FUNCTION FUNCT(ZETA)
C     VARIABLES, FUNCT GIVES THE TEMPERATURE DISTRIBUTION THRU THE
C     THICKNESS OF THE SHELL WALL.
C
      COMMON/ZGRAD/NTSGD
      COMMON/TTTHK/TP(10),ZP(10),NTHICK,ZRF
      FUNCT = TP(1)
      IF (NTHICK.EQ.1) GO TO 30
      J = 1
      ZZ = ZRF + ZETA
      DO 10 I=2,NTHICK
      J = J + 1
      IF (ZZ.LT.ZP(I)) GO TO 20
   10 CONTINUE
   20 J1 = J - 1
      FUNCT = TP(J1)
      ZDIF = ZP(J) - ZP(J1)
      IF (ZDIF) 25,30,25
   25 CONTINUE
      FUNCT = (TP(J)-TP(J1))*(ZZ-ZP(J1))/(ZP(J)-ZP(J1))     + TP(J1)
   30 IF (NTSGD.EQ.0) RETURN
      FUNCT = FUNCT*ZETA
      RETURN
      END
