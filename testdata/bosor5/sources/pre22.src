C=DECK      PRE22LIB
C
C  THIS IS THE PRE22 LIBRARY (SOURCE FILE)
C
C
C
C=DECK      PRE22
      SUBROUTINE PRE22
C
C  200-SEGMENT VERSION OF BOSOR5
C
C     OVERLAY(4,0)    (CDC VERSION)
C     PROGRAM PRE22   (CDC VERSION)
      COMMON/      /B(160000)
      COMMON/FLSTEP/KSTEP,KSTEPM
      COMMON/TOMER/TOME,DTIME
      COMMON/RLSTAT/LSTAT,KRSEG,KRING,BET(99),BETS(99),WS(99),WSS(99)
      COMMON/RGFCES/RHF(99),RHFIX(99)
      COMMON/SEGS/NSEG,M2,I5(201),I2,NFAIL
      COMMON/INSTAB/INDIC
      COMMON/ITERS/ITER
      COMMON/ISTUFF/KK,I5TOT,IC,NUNK,KLAP
      COMMON/ALLRNG/NTOT,IPRE
      COMMON/SHEL/IWAL(201)
      COMMON/SMODE/IPMODE(99),ICMODE(99),ISMODE(99),IQMODE(99),IHMOD(99)
      COMMON/MATP2/ETAN(20,9),MAXTRL,ITRIAL,EMAX(9),ATWEEN(95),SBRDF(95)
      COMMON/NBGSTP/NBEG(201),NSTOPP(201),INTVAL(201)
C
C     HOW THE WORKING SPACE STORAGE, B(     ), IS ALLOCATED...
C
C
C     VARIABLES GOVERNING THE LENGTH OF VARIOUS ARRAYS...
C
C    I2 = NUMBER OF 'MESH' POINTS IN ENTIRE STRUCTURE
C    IPRE = NUMBER OF DIFFERENT KINDS OF VARIABLES STORED FOR EACH RING
C    NTOT = TOTAL NUMBER OF DISCRETE RINGS IN STRUCTURE
C    M2 = NUMBER OF DEGREES OF FREEDOM IN PREBUCKLING PROBLEM
C    NSEG = NUMBER OF SHELL SEGMENTS
C
C/10*I2/4*I2-/IPRE*NTOT/--I2-/--I2-/4*I2-/4*I2-/--M2-/--M2-/--I2-/
C/--C--/THERM/--RING---/-FK1-/-FK2-/--E1-/-E1S-/FNEW-/FOLD-/--DS-/
C/B(1)-/B(N1)/--B(N2)--/B(N3)/B(N4)/B(N5)/B(N6)/B(N7)/B(N8)/B(N9)/
C1     N1    N2        N3    N4    N5    N6    N7    N8    N9   N10
C
C     CONTINUE ON NEXT LINE
C
C /-5*I2-/-3*I2-/I2+2*NSEG/-3*I2-/-3*I2-/
C /---B--/---P--/---IW----/PSFIX-/PSVAR-/
C /B(N10)/B(N11)/--B(N12)-/B(N13)/B(N14)/
CN10    N11    N12       N13    N14
C
C     STARTING ADDRESSES AND DEFINITIONS OF VARIABLES...
C
C  ADD.   VAR.      DEFINITION
C
C   1     B(1)     CONSTITUTIVE LAW COEFFICIENTS, C(I,J)
C   N1    B(N1)    NEGATIVE OF PLASTIC+CREEP+THERMAL STRAINS INTEGRATED
C                  THROUGH SHELL WALL THICKNESS. LIKE THERMAL STRESS AND
C                  MOMENT RESULTANTS.
C   N2    B(N2)    DISCRETE RING VARIABLES, SUCH AS ECCENTRICITIES AND
C                  EP+EC+ET ('THERMAL STRAINS') INTEGRATED OVER RING
C                  CROSS-SECTION AREA, AND EA, EIX, EIY, ETC...
C   N3    B(N3)    MERIDIONAL CURVATURE, 1/R1
C   N4    B(N4)    CIRCUMFERENTIAL CURVATURE, 1/R2
C   N5    B(N5)    REF. SURF. STRAINS AND CURVATURE CHANGES, THIS STEP
C   N6    B(N6)    REF. SURF. STRAINS AND CURVATURE CHANGES, LAST STEP
C   N7    B(N7)    SOLUTION VECTOR FOR CURRENT TIME STEP
C   N8    B(N8)    SOLUTION VECTOR FOR LAST TIME STEP
C   N9    B(N9)    ARC LENGTH INCREMENTS (FINITE DIFFERENCE ELEMENTS)
C   N10   B(N10)   SHELL REFERENCE SURFACE GEOMETRY PARAMETERS R, R',
C                  1/R1, 1/R2, (1/R1)'
C   N11   B(N11)   NORMAL PRESSURE AND SURFACE TRACTION DISTRIBUTIONS
C   N12   B(N12)   EQUATION NUMBERS CORRESPONDING TO 'W' MESH POINTS
C   N13   B(N13)   PREBUCKLING RESULTANTS N10,N20, AND ROTATION CHI0
C                  CORRESPONDING TO LAST TIME STEP
C   N14   B(N14)   PREBUCKLING RESULTANTS N10, N20, AND ROTATION CHI0
C                  CORRESPONDING TO CURRENT TIME STEP
C
      N1 = 10*I2 + 1
      N2 = N1 + 4*I2
      N3 = N2 + IPRE*NTOT
      N4 = N3 + I2
      N5 = N4 + I2
      N6 = N5 + 4*I2
      N7 = N6 + 4*I2
      N8 = N7 + M2
      N9 = N8 + M2
      N10 = N9 + I2
      N11 = N10 + 5*I2
      N12 = N11 + 3*I2
      N13 = N12 + I2 + 2*NSEG
      N14 = N13 + 3*I2
      N31 = N3 - 1
      IARG = KSTEP
      IF (ITRIAL.EQ.1) IARG = KSTEP - 1
      IF (IARG.EQ.0) IARG = 1
      CALL GASP(B(1),N31,3,ICMODE(IARG))
      I10 = 10*I2
      CALL GASP(B(N3),I10,3,IWAL(4))
      IF (KSTEP.GT.1) GO TO 20
      DO 10 I=1,M2
      I1 = N8 + I - 1
   10 B(I1) = 0.0
      GO TO 30
   20 CALL GASP(B(N8),M2,3,IPMODE(KSTEP-1))
   30 CONTINUE
      NLONG2 = 10*I2 + 2*NSEG + 2614
      CALL GASP(B(N9),NLONG2,3,IWAL(2))
      IF (ITER.NE.1) GO TO 50
      I6 = 6*I2
      IARG = KSTEP - 1
      IF (IARG.EQ.0) IARG = 1
      CALL GASP(B(N13),I6,3,IQMODE(IARG ))
      I3 = 3*I2
      DO 40 I=1,I3
      I1 = N13 + I - 1
      I22 = N14 + I - 1
   40 B(I1) = B(I22)
   50 CONTINUE
      IFLAG = 1
   60 KK = 1
      I5TOT = 0
      IC = 3
      NUNK = 5
      KLAP = 3
      ITOTL = 0
      S = 0.0
C
C  LOOP OVER NUMBER OF SEGMENTS...
C
      DO 110 I=1,NSEG
C
      JTEST = MOD(KSTEP,INTVAL(I))
      IF (ITER.EQ.1.AND.JTEST.EQ.0) WRITE(6,70) I,KSTEP
   70 FORMAT(//66H  PREBUCKLING DISPLACEMENTS AND STRESS RESULTANTS FOR
     1SEGMENT NO.       I3,18H,   TIME STEP NO.         I3)
C
C     PRESTRESS AND DISPLACEMENTS CALCULATED FOR ITH SEGMENT IN PLOCAL.
C
      I5I = I5(I)
      IPOS = 10*ITOTL + 1
      IPOS1=  4*ITOTL + N1
      IPOS2=  5*ITOTL + N10
      IPOS4 = 3*ITOTL + N13
      IPOS3 = 3*ITOTL + N14
      IARG = ITOTL + N9
      IARG3 = 4*ITOTL + N5
      IARG4 = 4*ITOTL + N6
      GO TO (80,90),IFLAG
   80 CALL PLOCAL(I,I5I,B(IPOS),B(IPOS1),B(IARG),B(IPOS2),B(N12),
     1 B(N7 ),B(IARG3),B(IPOS3),B(N2),BET,WS,RHF,IFLAG,S)
      GO TO 100
   90 CALL PLOCAL(I,I5I,B(IPOS),B(IPOS1),B(IARG),B(IPOS2),B(N12),
     1 B(N8 ),B(IARG4),B(IPOS4),B(N2),BETS,WSS,RHFIX,IFLAG,S)
  100 ITOTL = ITOTL + I5I
  110 CONTINUE
      IF (ITRIAL.GT.1) GO TO 120
      IF (IFLAG.EQ.2) GO TO 120
      IFLAG = 2
      GO TO 60
  120 CONTINUE
      IF (ITRIAL.EQ.1) CALL GASP(B(N3),I10,1,IWAL(4))
      IF (ITER.EQ.1) CALL GASP(B(N7),M2,1,IPMODE(KSTEP))
      I6 = 6*I2
      IF (ITER.EQ.1) CALL GASP(B(N13),I6,1,IQMODE(KSTEP))
      IF (ITER.EQ.1.AND.JTEST.EQ.0) WRITE(6,130) KSTEP,TOME
  130 FORMAT(//' NEXT, UPDATE THE MATERIAL PROPERTIES.'/
     1 '  PRINT OUT STRESSES AND STRAINS THRU THE SHELL THICKNESS.'//
     2  ' TIME STEP NO. ='  I3, '   TIME = '  1PE14.4/)
      RETURN
C     RETURN CARD NOT NEEDED IN CDC VERSION
      END
C=DECK      PLOCAL
      SUBROUTINE PLOCAL(IS,I5,C,THERM,HC,B,FW,F,E1,PS,RING,BET,WS,RHF,
     1 IFLAG,S)
C
C     PREBUCKLING STRESSES AND DISPLACEMENTS CALCULATED FROM INPUT
C     SOLUTION F.
C
      DIMENSION C(I5,10),THERM(I5,4),HC(*),B(I5,5),FW(*),F(*),E1(I5,4)
      DIMENSION PS(I5,3),CSTART(10),TSTART(4)
      DIMENSION RING(*),BET(*),WS(*),RHF(*)
      COMMON/NBGSTP/NBEG(201),NSTOPP(201),INTVAL(201)
      COMMON/FLSTEP/KSTEP,KSTEPM
      COMMON/ISTUFF/KK,I5TOT,IC,NUNK,KLAP
      COMMON/ALLRNG/ NTOT,IPRE
      COMMON/ITERS/ITER
      COMMON/INSTAB/INDIC
      COMMON/RINGRD/RC(99)
      DOUBLE PRECISION C1,C2,C3,HI,H,HPAST,W,U,R,RD,FK1,FK2,CURD,UD
      DOUBLE PRECISION WD,WDD,BETA,CFNLIN,EPS1,UV,FMUL,K1,EPS12,EPS2
      DOUBLE PRECISION K2,K12,UH,N10,N20,M10,M20,F1,CN1,CM1
      ITOT = I5TOT - 2*(IS-1)
      JTEST = MOD(KSTEP,INTVAL(IS))
      HI = HC(1)
      DO 130 I=1,I5
      DO 10 JJ=1,10
   10 CSTART(JJ) = C(I,JJ)
      DO 20 JJ=1,4
   20 TSTART(JJ) = THERM(I,JJ)
      H = HC(I)
      HPAST = HI
      HI = 2.*H-HPAST
      ITOT = ITOT + 1
      II = I5TOT + I + 1
      I2M = FW(II-1)
      I2P = FW(II+1)
      I0 = FW(II)
      I1M = I0 - 1
      I1P = I0 + 1
      IF ((I2P-I0).EQ.(IC+NUNK-KLAP))I1P = I0 + IC + 1
      C1 = (HPAST-HI)*(HI + H)/(16.*HPAST*H)
      C2 = (HI + H)*(HPAST + H)/(4.*HPAST*HI)
      C3 = - (HPAST-HI)*(HPAST + H)/(16.*HI*H)
      W = C1*F(I2M) + C2*F(I0) + C3*F(I2P)
      U = (F(I1M) + F(I1P))/2.
      R = B(I,1)
      RD = B(I,2)
      FK1 = B(I,3)
      FK2 = B(I,4)
      CURD = B(I,5)
      CURD = 0.
C
C     IF (IS.EQ.121) THEN
C   C    WRITE(6,4222) IS,I,R,RD,FK1,FK2
C4222    FORMAT(' SEG=',I4,'  POINT=',I2,'  R,RD,FK1,FK2=',1P4E12.4)
C     ENDIF
C
      UD = (F(I1P) - F(I1M))/H
      C1 = -.5/HPAST
      C3 = .5/HI
      C2 = -C1 -C3
      WD = C1*F(I2M) + C2*F(I0) + C3*F(I2P)
      C1 = 1./(HPAST*H)
      C2 = -2./(HPAST*HI)
      C3 = 1./(HI*H)
      WDD = C1*F(I2M) + C2*F(I0) + C3*F(I2P)
      BETA = WD - U*FK1
      CFNLIN = 1.0
      EPS1 = UD + W*FK1 + CFNLIN*0.5*BETA**2
C
      UV = U*R*FK2 - W*RD
      FMUL = 0.0
      K1 = WDD - FK1*UD - CURD*U -FMUL*EPS1*FK1
      EPS12 = 0.0
      K12 = 0.0
      IF (R.GT.0.0) GO TO 30
      EPS2 = EPS1
      K2 = K1
      GO TO 40
   30 EPS2 = U*RD/R + W*FK2
      K2 = BETA*RD/R -FMUL*EPS2*FK2
   40 CONTINUE
      UH = EPS2*R
      E1(I,1) = EPS1
      E1(I,2) = EPS2
      E1(I,3) = K1
      E1(I,4) = K2
      IF (NTOT.EQ.0) GO TO 50
C
C     RHF(KK) CONTAINS RING HOOP FORCES WHICH APPEAR IN STABILITY EQUATI
C
      IPOS = (KK- 1)*IPRE + 1
      KSEG = RING(IPOS)/1000.
      FSEG = KSEG
      KPOINT = RING(IPOS) - FSEG*1000.
      IF (IS.NE.KSEG) GO TO 50
      IF (I.NE.KPOINT) GO TO 50
      RC(KK) = R + RING(IPOS+3)
      WS(KK) = EPS2*R
      BET(KK) = BETA
      KK = KK + 1
   50 CONTINUE
      IF (IFLAG.EQ.2) GO TO 130
      IF (ITER.NE.1) GO TO 130
      N10 = CSTART(1)*EPS1 +CSTART(2)*EPS2 +CSTART(3)*K1 +CSTART(4)*K2
      N20 = CSTART(2)*EPS1 +CSTART(5)*EPS2 +CSTART(6)*K1 +CSTART(7)*K2
      M10 = CSTART(3)*EPS1 +CSTART(6)*EPS2 +CSTART(8)*K1 +CSTART(9)*K2
      M20 = CSTART(4)*EPS1 +CSTART(7)*EPS2 +CSTART(9)*K1 +CSTART(10)*K2
      N10 = N10 + TSTART(1)
      N20 = N20 + TSTART(2)
      M10 = M10 + TSTART(3)
      M20 = M20 + TSTART(4)
      IF (I.EQ.1.OR.I.EQ.I5) GO TO 60
      GO TO 100
   60 IF (R.GT.0.0) GO TO 70
      GO TO 100
C
C     CORRECTION ADDENDS FOR TRUNCATION ERRORS AT SEGMENT ENDS.
C
   70 F1 = 0.5*RD*H/R
      CN1 = - N20*F1 +H*.5*(FK1*N10*BETA + M10*CURD)
      CM1 = - M20*F1 - H*N10*BETA/2.
      IF (I.EQ.I5) GO TO 80
      GO TO 90
   80 CN1 = - CN1
      CM1 = - CM1
   90 N10 = N10 + CN1
      M10 = M10 + CM1
      N20 = N20 + CSTART(2)*CN1/CSTART(1)
      M20 = M20 + CSTART(9)*CM1/CSTART(8)
  100 CONTINUE
      IF (JTEST.NE.0) GO TO 125
C     WRITE OUT PRESTRESSES DISPLACEMENTS
      IF (I.EQ.1) WRITE (6,110)
  110 FORMAT(//128H POINT    STATION       W0         U0          BETA
     1       UV         N10         N20         M10        M20
     2                                                /)
      WRITE (6,120)I,S,W,U,BETA,UV,N10,N20,M10,M20
  120 FORMAT(I5,    1P9E12.3)
C     PS        CONTAINS PRESTRESS QUANTITIES WHICH AFFECT THE STABIL
C     AND VIBRATION EQUATIONS.
C
  125 CONTINUE
         PS(I,1) = N10
         PS(I,2) = N20
         PS(I,3) = BETA
      IF (I.LT.I5) S = S + H/2. + HC(I+1)/2.
  130 CONTINUE
      I5TOT = I5TOT + I5 + 2
      IF (IFLAG.EQ.2) GO TO 200
      IF (ITER.NE.1) GO TO 200
C     WRITE(6,360) IS
C 360 FORMAT(//60H  WALL STIFFNESS COEFFICIENTS, CIJ, FOR SEGMENT NUMBER
C    1                                   I3)
C     WRITE(6,370)
C 370 FORMAT(  130H   I     C11     C12      C14      C15      C22
C    1C24      C25      C44      C45      C55      C33      C36      C66
C    2                                                                /)
C     DO 380 I = 1,I5
C 380 WRITE(6,390) I,(C(I,J),J=1,10)
C 390 FORMAT(I4,1P10E9.2)
C     WRITE(6,395) IS
C 395 FORMAT(//60H THERMAL LOADS, THERM, FOR SEGMENT NUMBER
C    1                                                        I3/)
C     WRITE(6,397)
C 397 FORMAT(//100H   I  THERM(I,1) THERM(I,2) THERM(I,3) THERM(I,4)
C    1                                                                /)
C     DO 400 I = 1,I5
C 400 WRITE(6,398) I,(THERM(I,J),J = 1,4)
  140 FORMAT(I4,1P4E13.4)
  150 CONTINUE
  160 CONTINUE
      IF (JTEST.NE.0) GO TO 200
      IF (INDIC.EQ.0) GO TO 200
      WRITE (6,170)IS
  170 FORMAT(//112H PRESTRESS-- MERIDIONAL RESULTANT, N10   CIRCUMFERENT
     1IAL RESULTANT,N20  MERIDIONAL ROTATION, CHIO   FOR SEGMENT
     1                   I3/)
      DO 180 I=1,I5
  180 WRITE (6,190)I,PS(I,1),PS(I,2),PS(I,3)
  190 FORMAT(I8,1P3E35.8)
  200 CONTINUE
      RETURN
      END
