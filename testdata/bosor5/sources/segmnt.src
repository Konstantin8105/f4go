C=DECK      SEGMNTLIB
C
C  THIS IS THE SEGMNT LIBRARY (SOURCE FILE)
C
C
C
C=DECK      SEGMNT
C./	 ADD   NAME=SEGMNT
      SUBROUTINE SEGMNT
C
C  200-SEGMENT VERSION OF BOSOR5
C
C     CAUSES DATA TO BE READ FOR ALL SHELL SEGMENTS.
C
C     OVERLAY(1,0)     (CDC VERSION)
C     PROGRAM SEGMNT   (CDC VERSION)
      COMMON/IBUNCH/INOW,INOWH,INOWZ,MPROPX,NANRS,NSMEAR,NQ1,NQ2,NQ3,NQ4
      COMMON/TTTHK/TP(10),ZP(10),NTHICK,ZRF
      COMMON/ZGRAD/NTSGD
      COMMON/THERMO/THERM(8000)
      COMMON/SHEAR/CSHEAR(6000)
      COMMON/CSTIFF/C(20000)
      COMMON/INTRG/NRINGS
      COMMON/PLOAD/PP(6000)
      COMMON/BGEOM/ B(10000)
      COMMON/IPOSN/IPOS,IPOS1,IPOS2,IPOS3,IPOS4
      COMMON/TEMPDT/TAXIAL(11,20),NTSTAT,KUP1,ITVAL(20)
      COMMON/IMISC/ISEG,ITOT,KRING
      COMMON/SEGS/NSEG,M2,I5(201),I2,I2G
      COMMON/ALLRNG/NTOT,IPRE
      COMMON/RCOEFS/RING(3000)
      COMMON/SSARC/SEND,DSTOT,DSS(2000)
      COMMON/SMASS/CMASS(2000)
      COMMON/IFLOWS/IFLOW,ICREEP,IJNCT,IJNTB,ITSTOR,ITHSTR,IZSTOR,IBSTOR
      COMMON/STORTP/TSTORE(2000),THSTOR(1000),ZSTORE(1000)
      COMMON/RGEOM2/Z(2000),ZAX(2000),ANGLE(2000),S(2000)
C BEG JUNE 1990
      COMMON/RPLST3/SIGMA0(900),EPS0(900),EPCREP(900)
C END JUNE 1990
      COMMON/RINDEX/JBEGIN,KBEGIN,LBEGIN,KRSEG
      COMMON/THERWD/NWORD(201),NPLAST(201),NCREEP(201),NMAT(201),
     1              NALRED(201)
      COMMON/RPLST5/NTYP(99),NPARTS(99)
      COMMON/RINTRR/NGEOM(199),NTEMP(199),NMATL(199)
      COMMON/RINTRS/INTEG(199),NCROOP(199)
      COMMON/ISETP/ISETUP
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/FNDAT/FSTIF(201)
      COMMON/JRING/JJRING
      SEND = 0.0
      KRING = 0
      ITOT = 1
      INOW = 1
      INOWH = 1
      INOWZ = 1
      MPROPX = 0
      JBEGIN = 1
      KBEGIN = 1
      LBEGIN = 1
      KRSEG = 0
      DO 5 J = 1,99
    5 NTYP(J) = 0
      DO 10 J=1,3000
   10 RING(J) = 0.0
C
C    START LOOP OVER NUMBER OF SHELL SEGMENTS...
C
      DO 30 ISEG=1,NSEG
      JJRING = 0
      NWORD(ISEG) = 0
      IPOS = 10*(ITOT-1) + 1
      IPOS1 = 4*(ITOT-1) + 1
      IPOS2 = 5*(ITOT-1) + 1
      IPOS3 = 3*(ITOT-1) + 1
C
      CALL MESH
C
C     MESH GETS POSITIONS OF 'U' AND 'W' POINTS, GIVEN SPACING
C
C     CALL OVERLAY(5HBREAD,1,1)     (CDC VERSION)
C
      CALL GEOMTY
C
C     GEOMTY GETS R, R', 1/R1, 1/R2, AND (1/R1)' , GIVEN CERTAIN INPUT
C     DATA.
C
C     CALL OVERLAY(5HBREAD,1,2)     (CDC VERSION)
C
      CALL RGDATA
C
C     RGDATA CALCULATES RING PROPERTIES GIVEN RING SEGMENT GEOMETRIES
C     AND MATERIAL PROPERTIES.
C
C     ELASTIC FOUNDATION STIFFNESS INPUT...
      FSTIF(ISEG) = 0.
      CALL DATUM(IFILE2,190,1,2,INT,FSTIF(ISEG),CHARAC,IOUT,0,1)
C
C
C     CALL OVERLAY(5HBREAD,1,3)     (CDC VERSION)
C
      CALL LOADRE
C
C     LOADRE CAUSES LINE AND DISTRIBUTED LOADS AND TEMPERATURES TO BE
C     READ IN.
C
C     CALL OVERLAY(5HBREAD,1,4)     (CDC VERSION)
C
   20 FORMAT(//' INOW = ' I6, 'ITSTOR=' I6//)
C
      CALL WALLCF
C
C     WALLCF READS IN PROPERTIES OF SHELL WALL...LAYERS, THICKNESSES,
C     AND MATERIAL PROPERTIES OF EACH LAYER.
C
C     CALL OVERLAY(5HBREAD,1,5)     (CDC VERSION)
C
      ITOT = ITOT + I5(ISEG)
      SEND = S(ITOT-1)
   30 CONTINUE
C
C     ALL INPUT DATA HAVE BEEN READ IN.
C
C
      ITSTOR = INOW - 1
      ITHSTR = INOWH - 1
      IZSTOR = INOWZ - 1
      IBSTOR = ITSTOR + ITHSTR + IZSTOR
      I2 = ITOT - 1
      JBEGIN = JBEGIN - 1
      KBEGIN = KBEGIN - 1
      LBEGIN = LBEGIN - 1
      NTOT = KRING
C
      IF (ISETUP.EQ.0) CALL STORIT
C
C     STORIT CAUSES PROPERTIES OF ALL SEGMENTS TO BE STORED ON MASS
C     STORAGE.
C
C     CALL OVERLAY(5HBREAD,1,6)     (CDC VERSION)
C
      RETURN
C     RETURN CARD NOT NEEDED IN CDC VERSION
      END
C=DECK      LOADRE
      SUBROUTINE LOADRE
C     OVERLAY(1,4) (CDC VERSION)
C     PROGRAM LOADRE  (CDC VERSION)
C     LINE LOADS AND DISTRIBUTED LOADS READ IN
      COMMON/PLOAD/PP(6000)
      COMMON/BGEOM/ B(10000)
      COMMON/RGEOM2/Z(2000),ZAX(2000),ANGLE(2000),S(2000)
      COMMON/IMISC/ISEG,ITOT,KRING
      COMMON/IPOSN/IPOS,IPOS1,IPOS2,IPOS3,IPOS4
      COMMON/SEGS/NSEG,M2,I5(201),I2,I2G
      COMMON/FORCES/V(99),HF(99),FM(99)
      COMMON/STEPS/DTEMP(201),STEP(201),STEP1(99),STEP2(99),STEP3(99)
      COMMON/INTRG/NRINGS
      COMMON/TEMPDT/TAXIAL(11,20),NTSTAT,KUP1,ITVAL(20)
      COMMON/TTTHK/TP(10),ZP(10),NTHICK,ZRF
      COMMON/IBUNCH/INOW,INOWH,INOWZ,MPROPX,NANRS,NSMEAR,NQ1,NQ2,NQ3,NQ4
      COMMON/STORTP/TSTORE(2000),THSTOR(1000),ZSTORE(1000)
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/INDAT/INFILE
      CHARACTER*4 ANSLOD
      CHARACTER*4 CHARAC
      LOGICAL ANSL1
      DIMENSION IPVAL(50),P(50)
      DIMENSION ISTEP1(99),ISTEP2(99),ISTEP3(99),ISTEP(201),IDTEMP(201)
   10 FORMAT(10I6)
   20 FORMAT(//48H ENTERING SUBROUTINE LOADRE FOR SEGMENT NUMBER    I3/)
      I5I = I5(ISEG)
C
      WRITE(IOUT,2)
    2 FORMAT(6X,'H',9X,'$ TEMPERATURE INPUT FOLLOWS...')
      CALL DATUM(IFILE2,192,1,1,INT,REALL,ANSLOD,IOUT,0,1)
      IF (ANSL1('Y',ANSLOD,INFILE))
     1CALL DATUM(IFILE2,200,0,0,INT,REALL,CHARAC,IOUT,0,1)
C
C     NTSTAT = NO. OF MERIDIONAL CALLOUTS FOR TEMPERATURE DISTRIBUTION
C              NTSTAT = 0 = NO TEMPERATURE RISE ABOVE OR BELOW ZERO STR.
C     NTHICK = NO. OF VALUES OF TEMP. READ THRU THICKNESS.
C
      NTHICK = 0
      CALL DATUM(IFILE2,220,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,221,1,2,NTSTAT,REALL,CHARAC,IOUT,0,1)
      IF (NTSTAT.LT.0.OR.NTSTAT.GT.20) THEN
       WRITE(6,*)' NTSTAT  MUST BE IN THE RANGE FROM   0   TO   20'
       CALL ERREX
      ENDIF
C
      DTEMP(ISEG) = 0.0
      IF (NTSTAT.EQ.0) GO TO 330
   25 CONTINUE
      CALL DATUM(IFILE2,222,1,2,NTHICK,REALL,CHARAC,IOUT,0,1)
      IF (NTHICK.LE.0.OR.NTHICK.GT.20) THEN
       WRITE(6,*)' NTHICK  MUST BE GREATER THAN ZERO AND LESS THAN'
       WRITE(6,*)'         THEN NUMBER OF INTEGRATION POINTS THRU THE'
       WRITE(6,*)'         SHELL WALL THICKNESS'
       CALL ERREX
      ENDIF
C
      IF (NTHICK.GT.0) GO TO 40
      WRITE (6,30)
   30 FORMAT(80H NTHICK MUST BE GREATER THAN ZERO IF NTSTAT IS GREATER T
     1HAN ZERO.                                                       /)
      REWIND IFILE2
      GO TO 25
   40 CONTINUE
      ITVAL(1) = 1
      ITVAL(2) = I5(ISEG)
      IF (NTSTAT.EQ.1) GO TO 60
C
C     IDENTIFY MERIDIONAL CALLOUTS WHERE TEMP. DISTRIB. THRU THICKNESS
C                IS TO BE READ IN.
C
   45 CONTINUE
      CALL DATUM(IFILE2,224,0,0,INT,REALL,CHARAC,IOUT,0,1)
      IPRM(2) = 226
      CALL STA(ITVAL,ZAX(ITOT),B(IPOS2),B(IPOS2+I5I),
     1  S(ITOT),NTSTAT,I5(ISEG))
      IF (ITVAL(1).EQ.1.AND.ITVAL(NTSTAT).EQ.I5(ISEG)) GO TO 60
      WRITE (6,50)ISEG
   50 FORMAT(//98H TEMPERATURE DISTRIBUTION CALLOUTS MUST INCLUDE VALUES
     1 AT FIRST AND LAST MESH PTS. IN SEG.                         I3//)
      REWIND IFILE2
      GO TO 45
   60 CONTINUE
      CALL DATUM(IFILE2,232,0,0,INT,REALL,CHARAC,IOUT,0,1)
      DO 70 I=1,NTSTAT
      REWIND IFILE2
      WRITE(6,63) I
   63 FORMAT(/' Temperature thru the thickness at meridional callout'/
     1        ' point no.',I3,' . . .'/)
C     NOW READ TEMPERATURE RISE THRU THICKNESS AT THIS MERIDIONAL STAT.
      JJJ = 0
      DO 65 J = 1,NTHICK
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,236,1,2,INT,TAXIAL(J,I),CHARAC,IOUT,JJJ,IPROMP)
   65 CONTINUE
C
   70 CONTINUE
      IF (NTSTAT.GT.1) GO TO 90
      DO 80 J=1,NTHICK
   80 TAXIAL(J,2) = TAXIAL(J,1)
   90 CONTINUE
      J1 = NTHICK + 1
      J2 = 2*NTHICK-2
      IF (J1.GT.J2) GO TO 130
      CALL DATUM(IFILE2,238,0,0,INT,REALL,CHARAC,IOUT,0,1)
      DO 100 I=1,NTSTAT
      REWIND IFILE2
C     NOW READ THICKNESS STATIONS WHERE TEMPERATURE IS CALLED OUT
C
C     YOU DON'T READ IN THE VALUES AT THE SURFACES.. ONLY THOSE
C      WITHIN THE WALL.  FOR EXAMPLE, IF YOU READ THE TEMPERATURE AT
C      5 STATIONS THRU THE THICKNESS, YOU ONLY READ 3 VALUES FOR THE
C      THICKNESS STATIONS. YOU DO NOT READ THE SURFACE VALUES.
C
      WRITE(6,93) I
   93 FORMAT(/' Thickness coordinates for temperature input at'/
     1        ' meridional callout point no.',I3,' . . . '/)
      JJJ = 0
      DO 95 J = J1,J2
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,242,1,2,INT,TAXIAL(J,I),CHARAC,IOUT,JJJ,IPROMP)
   95 CONTINUE
C
  100 CONTINUE
      IF (NTSTAT.GT.1) GO TO 120
      DO 110 J = J1,J2
  110 TAXIAL(J,2) = TAXIAL(J,1)
  120 CONTINUE
  130 CONTINUE
      IF (NTSTAT.EQ.1) NTSTAT = 2
      J3 = 2
      IF (NTHICK.GT.1) J3 = J2 + 1
      DO 140 I=1,NTSTAT
  140 TAXIAL(J3,I) = ITVAL(I)
      WRITE (IFILE4,150)ISEG,NTSTAT,NTHICK
  150 FORMAT(///43H TEMPERATURE RISE DISTRIBUTION IN SEGMENT  I2,
     131H  NO. OF MERIDIONAL CALLOUTS =  I2, 38H  NO. OF CALLOUTS THROUG
     1H THICKNESS =  I2//)
      WRITE (IFILE4,160)
  160 FORMAT(//128H  SEG   PT    TEMP(LEFT)    TEMP(2)     TEMP(3)    TE
     1MP(4)     TEMP(5)     TEMP(6)     Z(2)        Z(3)        Z(4)
     2    Z(5)                                                         )
      KK = INOW - 1
      KUP = J3 -1
      KUP1 = J3
      I = ISEG
      DO 310 J=1,NTSTAT
      DO 170 K=1,KUP1
      KK = KK + 1
  170 TSTORE(KK) = TAXIAL(K,J)
      GO TO (180,200,220,240,260,280),NTHICK
  180 WRITE (IFILE4,190)I,ITVAL(J),(TAXIAL(K,J),K=1,KUP)
  190 FORMAT(2I5,1PE12.3)
      GO TO 300
  200 WRITE (IFILE4,210)I,ITVAL(J),(TAXIAL(K,J),K=1,KUP)
  210 FORMAT(2I5,1P2E12.3)
      GO TO 300
  220 WRITE (IFILE4,230)I,ITVAL(J),(TAXIAL(K,J),K=1,KUP)
  230 FORMAT(2I5,1P3E12.3,36X,1PE12.3)
      GO TO 300
  240 WRITE (IFILE4,250)I,ITVAL(J),(TAXIAL(K,J),K=1,KUP)
  250 FORMAT(2I5,1P4E12.3,24X,1P2E12.3)
      GO TO 300
  260 WRITE (IFILE4,270)I,ITVAL(J),(TAXIAL(K,J),K=1,KUP)
  270 FORMAT(2I5,1P5E12.3,12X,1P3E12.3)
      GO TO 300
  280 WRITE (IFILE4,290)I,ITVAL(J),(TAXIAL(K,J),K=1,KUP)
  290 FORMAT(2I5,1P6E12.3,1P4E12.3)
  300 CONTINUE
  310 CONTINUE
      INOW = INOW + NTSTAT*KUP1
C
C     IDTEMP(ISEG) IS THE TIME FUNCTION TO BE ASSOCIATED WITH THE
C                  TEMPERATURE DISTRIBUTION
      CALL DATUM(IFILE2,244,1,2,IDTEMP(ISEG),REALL,CHARAC,IOUT,0,1)
      DTEMP(ISEG) = IDTEMP(ISEG)
      WRITE (IFILE4,320)IDTEMP(ISEG)
  320 FORMAT(//45H TIME VARIATION INDICATOR FOR TEMPERATURE =       I3/)
  330 CONTINUE
      STEP(ISEG) = 0.0
      PN = 0.0
      PT = 0.0
C
C
      WRITE(IOUT,3)
    3 FORMAT(6X,'H',9X,'$ PRESSURE INPUT FOLLOWS...')
      CALL DATUM(IFILE2,246,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,247,1,2,NPSTAT,REALL,CHARAC,IOUT,0,1)
      IF (NPSTAT.LT.0.OR.NPSTAT.GT.20) THEN
       WRITE(6,*)' NPSTAT  MUST BE IN THE RANGE FROM   0   TO   20'
       CALL ERREX
      ENDIF
C
C
C     NPSTAT = NUMBER OF MERIDIONAL STATIONS FOR PRESSURE CALLOUTS
C              NPSTAT = 0 MEANS NO PRESSURE OR MERIDIONAL TRACTION
C                NPSTAT = 1 MEANS UNIFORM PRESSURE
C                NPSTAT.GT. 1 MEANS NONUNIFORM PRESSURE
C
      IF (NPSTAT.GT.1) GO TO 360
      IF (NPSTAT.EQ.0) GO TO 340
C
      CALL DATUM(IFILE2,248,1,2,INT,PN,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,250,1,2,INT,PT,CHARAC,IOUT,0,1)
C
C     PN = NORMAL COMPONENT OF PRESSURE, POSITIVE IN + W DIRECTION
C     PT = MERIDIONAL COMPONENT, POSITIVE IN + U DIRECTION
  340 CONTINUE
      DO 350 I=1,I5I
      IARG1 = IPOS3 + I - 1
      IARG2 = IPOS3 + I5I + I - 1
      IARG3 = IPOS3+2*I5I + I - 1
      PP(IARG1) = PT
      PP(IARG2) = 0.0
      PP(IARG3) = PN
  350 CONTINUE
      GO TO 400
  360 CONTINUE
C
C     IDENTIFY LOCATIONS FOR CALLOUTS FOR PRESSURE DISTRIBUTION.
C     PRESSURE WILL BE INTERPOLATED LINEARLY BETWEEN THESE CALLOUTS.
C
  365 CONTINUE
      CALL DATUM(IFILE2,252,0,0,INT,REALL,CHARAC,IOUT,0,1)
      IPRM(2) = 254
      CALL STA(IPVAL,ZAX(ITOT),B(IPOS2),B(IPOS2+I5I),S(ITOT),NPSTAT,I5I)
      IF (IPVAL(1).EQ.1.AND.IPVAL(NPSTAT).EQ.I5(ISEG)) GO TO 380
      WRITE (6,370)ISEG
  370 FORMAT(//93H PRESSURE DISTRIBUTION CALLOUTS MUST INCLUDE VALUES AT
     1 FIRST AND LAST MESH PTS. IN SEG.                            I3//)
      REWIND IFILE2
      GO TO 365
  380 CONTINUE
C     NORMAL PRESSURE DISTRIBUTION READ IN
      CALL DATUM(IFILE2,258,0,0,INT,REALL,CHARAC,IOUT,0,1)
      DO 385 J = 1,NPSTAT
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,260,1,2,INT,P(J),CHARAC,IOUT,J,IPROMP)
  385 CONTINUE
C
C     FINDZ DOES THE LINEAR INTERPOLATION
      CALL FINDZ(NPSTAT,IPVAL,P,I5(ISEG),PP(IPOS3+2*I5I),S(ITOT))
C     MERIDIONAL TRACTION READ IN
      DO 387 J = 1,NPSTAT
      IPROMP = 1
      IF (J.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,262,1,2,INT,P(J),CHARAC,IOUT,J,IPROMP)
  387 CONTINUE
C
      CALL FINDZ(NPSTAT,IPVAL,P,I5(ISEG),PP(IPOS3),S(ITOT))
      DO 390 I=1,I5I
      IARG2 = IPOS3 + I5I + I - 1
  390 PP(IARG2) = 0.0
  400 CONTINUE
C     TIME-FUNCTION OF PRESSURE
      IF (NPSTAT.EQ.0) GO TO 460
C
C     ISTEP(ISEG) IS THE TIME FUNCTION OF BOTH MERIDIONAL AND NORMAL
C     PRESSURE DISTRIBUTIONS.  SAME FOR BOTH PN AND PT.
      CALL DATUM(IFILE2,264,1,2,ISTEP(ISEG),REALL,CHARAC,IOUT,0,1)
      STEP(ISEG) = ISTEP(ISEG)
      CALL DATUM(IFILE2,265,1,1,INT,REALL,ANSLOD,IOUT,0,1)
      IF (ANSL1('N',ANSLOD,INFILE)) GO TO 445
C
C     NOW PRINT OUT PRESSURE AND SURFACE TRACTIONS
      WRITE (IFILE4,410)ISEG
  410 FORMAT(//100H      PRESSURE AND MERIDIONAL SURFACE TRACTION FOR SE
     1GMENT NUMBER                                                  I3/)
      WRITE (IFILE4,420)
  420 FORMAT(100H  POINT     STATION       NORMAL PRESSURE  MERIDIONAL T
     1RACTION                                                         /)
      DO 440 I=1,I5I
      I0 = ITOT + I - 1
      I1 = IPOS3 + 2*I5I + I - 1
      I2 = IPOS3 + I - 1
      WRITE (IFILE4,430)I,S(I0),PP(I1),PP(I2)
  430 FORMAT(I5,1P3E17.8)
  440 CONTINUE
  445 CONTINUE
      WRITE (IFILE4,450)ISTEP(ISEG)
  450 FORMAT(/62H TIME VARIATION INDICATION FOR PRESSURE AND SURFACE TRA
     1CTION =                          I3//)
C
C
  460 CONTINUE
      IF (ISEG.GT.1) GO TO 480
      DO 470 I=1,99
      V(I) = 0.0
      HF(I) = 0.0
      FM(I) = 0.0
      STEP1(I) = 0.0
      STEP2(I) = 0.0
      STEP3(I) = 0.0
  470 CONTINUE
  480 CONTINUE
      WRITE(IOUT,4)
    4 FORMAT(6X,'H',9X,'$ LINE LOAD INPUT FOLLOWS...')
      CALL DATUM(IFILE2,266,0,0,INT,REALL,CHARAC,IOUT,0,1)
      CALL DATUM(IFILE2,268,1,2,LINTYP,REALL,CHARAC,IOUT,0,1)
      IF (LINTYP.NE.0.AND.LINTYP.NE.1) THEN
       WRITE(6,*)' LINTYP  MUST BE EITHER  0   or   1'
       CALL ERREX
      ENDIF
C
      IF (LINTYP.EQ.0) GO TO 570
C
C     LINTYP = 0  NO LINE LOADS
C     LINTYP = 1  YES LINE LOADS
C
      IF (NRINGS.EQ.0.AND.LINTYP.NE.0) GO TO 490
      GO TO 510
  490 WRITE (6,500)ISEG
  500 FORMAT(//117H LINE LOADS ARE ALWAYS ASSOCIATED WITH DISCRETE RINGS
     1. INTRODUCE RING AT STATION WHERE LINE LOAD IS APPLIED. SEG.NO.
     2     I3//)
      CALL ERREX
  510 CONTINUE
      KRING1 = KRING - NRINGS + 1
  520 FORMAT(6E12.8)
C     V = AXIAL LINE LOAD, POSITIVE 'DOWNWARD'
C     HF= RADIAL LINE LOAD, POSITIVE 'OUTWARD'
C     FM= LINE MOMENT, POSITIVE CLOCKWISE
C     ISTEP1 = TYPE OF TIME FUNCTION FOR V
C     ISTEP2 = TYPE OF TIME FUNCTION FOR HF
C     ISTEP3 = TYPE OF TIME FUNCTION FOR FM
C
      CALL DATUM(IFILE2,269,1,1,INT,REALL,ANSLOD,IOUT,0,1)
      IF (ANSL1('N',ANSLOD,INFILE)) GO TO 5211
      JJJ = 0
      DO 521 K = KRING1,KRING
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,270,1,2,INT,V(K),CHARAC,IOUT,JJJ,IPROMP)
  521 CONTINUE
C
      JJJ = 0
      DO 524 K = KRING1,KRING
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,271,1,3,ISTEP1(K),REALL,CHARAC,IOUT,JJJ,IPROMP)
  524 CONTINUE
C
 5211 CALL DATUM(IFILE2,272,1,1,INT,REALL,ANSLOD,IOUT,0,1)
      IF (ANSL1('N',ANSLOD,INFILE)) GO TO 5221
      JJJ = 0
      DO 522 K = KRING1,KRING
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,273,1,2,INT,HF(K),CHARAC,IOUT,JJJ,IPROMP)
  522 CONTINUE
C
      JJJ = 0
      DO 526 K = KRING1,KRING
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,274,1,2,ISTEP2(K),REALL,CHARAC,IOUT,JJJ,IPROMP)
  526 CONTINUE
C
 5221 CALL DATUM(IFILE2,275,1,1,INT,REALL,ANSLOD,IOUT,0,1)
      IF (ANSL1('N',ANSLOD,INFILE)) GO TO 529
      JJJ = 0
      DO 523 K = KRING1,KRING
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,276,1,2,INT,FM(K),CHARAC,IOUT,JJJ,IPROMP)
  523 CONTINUE
C
      JJJ = 0
      DO 528 K = KRING1,KRING
      JJJ = JJJ + 1
      IPROMP = 1
      IF (JJJ.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,280,1,2,ISTEP3(K),REALL,CHARAC,IOUT,JJJ,IPROMP)
  528 CONTINUE
  529 CONTINUE
C
      WRITE (IFILE4,530)ISEG
  530 FORMAT(//23H LINE LOADS IN SEGMENT       I3/
     1 40H THESE LOADS ACT AT THE RING CENTROIDS                   /)
      WRITE (IFILE4,540)
  540 FORMAT(                                                          '
     1 SEGMENT RING NO.   AXIAL LOAD     TIME               RADIAL LOAD'
     2,'  TIME               MERIDIONAL     TIME'                     /'
     3                                VARIATION                        '
     4,' VARIATION              MOMENT    VARIATION'                  /'
     5                                INDICATOR                        '
     6,' INDICATOR                        INDICATOR'                /)
      DO 560 K=KRING1,KRING
      WRITE (IFILE4,550)ISEG,K,V(K),ISTEP1(K),HF(K),ISTEP2(K),FM(K)
     1 ,ISTEP3(K)
  550 FORMAT(I5,I8,1PE18.6,I6,10X,1PE18.6,I6,10X,1PE18.6,I6)
      STEP1(K) = ISTEP1(K)
      STEP2(K) = ISTEP2(K)
      STEP3(K) = ISTEP3(K)
  560 CONTINUE
C
C     DISTRIBUTED THERMAL AND MECHANICAL LOAD INPUT FOR ITH SEGMENT
C
  570 CONTINUE
      RETURN
C     RETURN CARD NOT NEEDED IN CDC VERSION
      END
C=DECK      MESH
      SUBROUTINE MESH
C     OVERLAY(1,1)    (CDC VERSION)
C     PROGRAM MESH  (CDC VERSION)
C     CALLED FROM SEGMNT, WHICH IS CALLED FROM READIT
C     MESH POINT DISTRIBUTION IN ISEGTH SEGMENT IS DETERMINED.
C     SPACING CAN VARY, OF COURSE.
      COMMON/NBGSTP/NBEG(201),NSTOPP(201) ,INTVAL(201)
      COMMON/SSARC/SEND,DSTOT,DSS(2000)
      COMMON/IMISC/ISEG,ITOT,KRING
      COMMON/SEGS/NSEG,M2,I5(201),I2,I2G
      COMMON/PRMFIL/IFILE,IFILE2,IOUT,IPRM(5)
      COMMON/PRMOUT/IFILE3,IFILE4
      COMMON/ISETP/ISETUP
      COMMON/SEGNUM/ISEGNO
      CHARACTER*4 CHARAC
      DIMENSION IHVALU(100),HVALU(100),FI(100),DS(100),DW(100)
   10 FORMAT(10I6)
   20 FORMAT(6E12.8)
C     MEANINGS OF THESE INPUT VARIABLES GIVEN BELOW
   30 FORMAT(//48H ENTERING SUBROUTINE MESH   FOR SEGMENT NUMBER    I4/)
      IFACT = 0
      INTVAL(ISEG) = 0
   25 CONTINUE
      REWIND IFILE2
      IF (ISEG.EQ.1)
     1CALL DATUM(IFILE2,100,0,0,INT,REALL,CHARAC,IOUT,0,1)
      IF (ISETUP.EQ.0) ISEGNO = ISEG
      WRITE(IOUT,35) ISEGNO,ISEGNO,ISEGNO,ISEGNO
   35 FORMAT(6X,'H',9X,'$'/6X,'H',9X,'$ SEGMENT NUMBER',8I5)
      WRITE(IOUT,5)
    5 FORMAT(6X,'H',9X,'$ NODAL POINT DISTRIBUTION FOLLOWS...')
      CALL DATUM(IFILE2,101,1,2,NMESH,REALL,CHARAC,IOUT,ISEGNO,1)
      IF (NMESH.LT.5.OR.NMESH.GT.98) THEN
       WRITE(6,*)' NMESH  MUST BE IN THE RANGE FROM  5   TO   98'
       CALL ERREX
      ENDIF
C
      CALL DATUM(IFILE2,102,1,3,NTYPEH,REALL,CHARAC,IOUT,0,1)
      IF (NTYPEH.NE.1.AND.NTYPEH.NE.2.AND.NTYPEH.NE.3) THEN
       WRITE(6,*)' NTYPEH  MUST BE EITHER  1  or  2  or  3'
       CALL ERREX
      ENDIF
C
C
      NBEG(ISEG) = 1
      NSTOPP(ISEG) = NMESH+2
      IF (IFACT.LT.2) FACT = 1./20.
      IF (IFACT.GE.2) FACT = 1./FLOAT(IFACT)
      IF (INTVAL(ISEG).EQ.0) INTVAL(ISEG) = 1
      IF (NMESH.GT.2.AND.NMESH.LE.98) GO TO 50
      WRITE (6,40)
   40 FORMAT(//88H NUMBER OF MESH POINTS IN A SEGMENT MUST BE GREATER TH
     1AN 2 AND LESS THAN OR EQUAL TO 98              //)
      GO TO 25
   50 CONTINUE
C
C     NMESH = NUMBER OF MESH POINTS IN CURRENT SEGMENT
C     NTYPEH = POINTER FOR TYPE OF MESH SPACING INPUT TO FOLLOW---
C     NTYPEH = 1 -- 'NORMALIZED' VALUES OF SPACING READ IN FOR A FEW
C                   SCATTERED STATIONS AND SPACING EVERYWHERE
C                   DETERMINED BY LINEAR INTERPOLATION BETWEEN CALLOUTS
C     NTYPEH = 2- - MESH SPACING READ IN FOR ALL POINTS IN SEGMENT
C     NTYPEH = 3- - MESH SPACING CONSTANT IN CURRENT SEGMENT.
C
C     INTVAL(ISEG) SIGNIFIES PRINT AND PLOT OUTPUT FOR EVERY
C     INTVAL(ISEG)TH LOAD STEP
C     IFACT = INDICATOR FOR LOCATION OF 'W' POINTS NEXT TO EDGE 'W'
C             POINTS. IF IFACT=0, 'EXTRA' MESH POINTS WILL BE LOCATED
C             1/20 TH OF THE WAY FROM THE EDGE TO THE NEXT POINT.
C     NBEG(ISEG) = PRINT STUFF BEGINNING AT POINT NO. NBEG(ISEG).
C     NSTOPP(ISEG) = PRINT STUFF FROM NBEG TO NSTOPP, INCL. END POINTS.
C
      NMESH1 = NMESH - 1
      GO TO (60,100,110),NTYPEH
C     NHVALU = NO. OF MERIDIONAL STATIONS AT WHICH MESH SPACING HVALU
C              IS TO BE SPECIFIED.
C     IHVALU = MESH POINT TAG AT WHICH HVALU  IS TO BE SPECIFIED
C     HVALU = MESH POINT SPACING (BETWEEN W-POINTS. AT CALLOUT IHVALU.
C             SPACING WILL VARY LINEARLY BETWEEN STATIONS AT WHICH
C             IT IS CALLED OUT. IT IS EMPHASIZED THAT THIS SPACING
C             REFERS TO THE ARC LENGTH DISTANCE BETWEEN ADJACENT
C             W-POINTS.
   60 CONTINUE
      CALL DATUM(IFILE2,103,1,2,NHVALU,REALL,CHARAC,IOUT,0,1)
      IF (NHVALU.LT.2.OR.NHVALU.GT.50) THEN
       WRITE(6,*)' NHVALU  MUST BE IN THE RANGE FROM   2    TO    50'
       CALL ERREX
      ENDIF
C
      DO 55 I = 1,NHVALU
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,104,1,2,IHVALU(I),REALL,CHARAC,IOUT,I,IPROMP)
   55 CONTINUE
      IF (IHVALU(1).EQ.1.AND.IHVALU(NHVALU).EQ.NMESH1) GO TO 80
      WRITE (6,70)
   70 FORMAT(//61H MESH SPACING CALLOUTS MUST INCLUDE VALUES AT ENDS OF
     1SEGMENT   //)
      REWIND IFILE2
      GO TO 60
   80 CONTINUE
      DO 75 I = 1,NHVALU
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,105,1,2,INT,HVALU(I),CHARAC,IOUT,I,IPROMP)
   75 CONTINUE
      DO 90 I=1,NMESH
   90 FI(I) = I
      CALL FINDZ(NHVALU,IHVALU,HVALU,NMESH1,DW,FI)
      GO TO 130
  100 CONTINUE
      DO 95 I = 1,NMESH1
      IPROMP = 1
      IF (I.GT.1) IPROMP = 0
      CALL DATUM(IFILE2,105,1,2,INT,DW(I),CHARAC,IOUT,I,IPROMP)
   95 CONTINUE
      GO TO 130
  110 DO 120 I=1,NMESH1
  120 DW(I) = 1.0
  130 DSTOT = 0.0
      DO 140 I=1,NMESH1
      IF (DW(I).GT.0.0) GO TO 140
      WRITE(6,135) ISEG,I
  135 FORMAT(//82H INPUT ERROR..ZERO DISTANCE BETWEEN TWO ADJACENT W-MES
     1H POINTS IN SHELL SEG. NO.                I3,
     2 12H. POINT NO.          I3//)
      CALL ERREX
  140 DSTOT = DSTOT + DW(I)
      DO 150 I=3,NMESH1
      I1 = I - 1
  150 DS(I) = DW(I1)
      DS(1) = FACT*DW(1)
      DS(2) = (1.-FACT)*DW(1)
      NMESHP = NMESH + 1
      DS(NMESHP) = FACT*DW(NMESH1)
      DS(NMESH) = (1.-FACT)*DW(NMESH1)
      DO 160 I=1,NMESHP
  160 DW(I) = DS(I)
      NMESH = NMESHP + 1
      NMESH1 = NMESHP
      DO 170 I=2,NMESH1
      I1 = I - 1
  170 DS(I) = (DW(I1) + DW(I))/2.
      DS(1) = DW(1)
      DS(NMESH) = DW(NMESH1)
C     DS(I) NOW CONTAINS THE ENERGY INTEGRATION WEIGHTS OR LENGTHS
C     OF THE FINITE-DIFFERENCE 'ELEMENTS'.
      I5(ISEG) = NMESH
      DO 180 I=1,NMESH
      IP = I + ITOT - 1
      DSS(IP) = DS(I)
  180 CONTINUE
      RETURN
C     RETURN CARD NOT NEEDED IN CDC VERSION
      END
C=DECK      STORIT
C./	 ADD   NAME=STORIT
      SUBROUTINE STORIT
C     OVERLAY(1,6)      (CDC VERSION)
C     PROGRAM STORIT    (CDC VERSION)
      COMMON/IDENTS/IC,IT,IR,IDS,IDB,IDP,IDSH,IM,ITS,ITSH,IZST,IDARC,IZX
      COMMON/IDENT2/ IANGLE,ISIGR,IEPSR,IEPCPR
      COMMON/SEGS/NSEG,M2,I5(201),I2,I2G
      COMMON/CSTIFF/C(20000)
      COMMON/THERMO/THERM(8000)
      COMMON/ALLRNG/NTOT,IPRE
      COMMON/RCOEFS/RING(3000)
      COMMON/SSARC/SEND,DSTOT,DSS(2000)
      COMMON/BGEOM/ B(10000)
      COMMON/PLOAD/PP(6000)
      COMMON/SHEAR/CSHEAR(6000)
      COMMON/SMASS/CMASS(2000)
      COMMON/IFLOWS/IFLOW,ICREEP,IJNCT,IJNTB,ITSTOR,ITHSTR,IZSTOR,IBSTOR
      COMMON/STORTP/TSTORE(2000),THSTOR(1000),ZSTORE(1000)
      COMMON/RGEOM2/Z(2000),ZAX(2000),ANGLE(2000),S(2000)
C BEG JUNE 1990
      COMMON/RPLST3/SIGMA0(900),EPS0(900),EPCREP(900)
C END JUNE 1990
      COMMON/RINDEX/JBEGIN,KBEGIN,LBEGIN,KRSEG
      COMMON/PRMOUT/IFILE3,IFILE4
   10 FORMAT(//48H ENTERING SUBROUTINE STORIT                       I3/)
      IC = 0
      I10 = 10*I2
      CALL GASP(C,I10,1,IC)
      IT = 0
      I4 = 4*I2
      CALL GASP(THERM,I4,1,IT)
      IR = 0
      IRING = IPRE*NTOT
      CALL GASP(RING,IRING,1,IR)
      IDS = 0
      CALL GASP(DSS,I2,1,IDS)
      IDB = 0
      I55 = 5*I2
      CALL GASP(B,I55,1,IDB)
      IDP = 0
      IDSH = 0
      I3 = 3*I2
      CALL GASP(PP,I3,1,IDP)
      CALL GASP(CSHEAR,I3,1,IDSH)
      IM = 0
      CALL GASP(CMASS,I2,1,IM)
      ITS = 0
      CALL GASP(TSTORE,ITSTOR,1,ITS)
      ITSH = 0
      CALL GASP(THSTOR,ITHSTR,1,ITSH)
      IZST = 0
      CALL GASP(ZSTORE,IZSTOR,1,IZST)
      IDARC = 0
      CALL GASP(S,I2,1,IDARC)
      IZX = 0
      CALL GASP(ZAX,I2,1,IZX)
      IANGLE = 0
      CALL GASP(ANGLE,I2,1,IANGLE)
      ISIGR = 0
      DO 20 I = 1,LBEGIN
   20 SIGMA0(I) = 0.0
      CALL GASP(SIGMA0,LBEGIN,1,ISIGR)
      IEPSR = 0
      CALL GASP(SIGMA0,LBEGIN,1,IEPSR)
      IEPCPR = 0
      CALL GASP(SIGMA0,LBEGIN,1,IEPCPR)
      RETURN
C     RETURN CARD NOT NEEDED IN CDC VERSION
      END
