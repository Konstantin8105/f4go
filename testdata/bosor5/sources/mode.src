C=DECK      MODELIB
C
C  THIS IS THE MODE LIBRARY (SOURCE FILE)
C
C
C
C=DECK      POST22
      SUBROUTINE POST22
C
C  200-SEGMENT VERSION OF BOSOR5
C     CALCULATES PREBUCKLING DISPLACEMENTS AND STRESS RESULTANTS
C
C     OVERLAY(2,0)       (CDC VERSION)
C     PROGRAM POST22     (CDC VERSION)
C
      COMMON/      /B(160000)
      COMMON/FLSTEP/KSTEP,KSTEPM
      COMMON/ALLRNG/NTOT,IPRE
      COMMON/SEGS/NSEG,M2,I5(201),I2,NFAIL
      COMMON/ISTUFF/KK,I5TOT,IC,NUNK,KLAP
      COMMON/SHEL/IWAL(201)
      COMMON/SMODE/IPMODE(99),ICMODE(99),ISMODE(99),IQMODE(99),IHMOD(99)
      COMMON/SMOAD/IMOAD(2),IMMODE,FMAX,ISIG
      COMMON/RLSTAT/LSTAT,KRSEG,KRING,BET(99),BETS(99),WS(99),WSS(99)
C
C     HOW THE WORKING SPACE STORAGE, B(      ), IS ALLOCATED...
C
C
C     VARIABLES GOVERNING THE LENGTH OF VARIOUS ARRAYS...
C
C    I2 = NUMBER OF 'MESH' POINTS IN ENTIRE STRUCTURE
C    IPRE = NUMBER OF DIFFERENT KINDS OF VARIABLES STORED FOR EACH RING
C    NTOT = TOTAL NUMBER OF DISCRETE RINGS IN STRUCTURE
C    M2 = NUMBER OF DEGREES OF FREEDOM IN PREBUCKLING PROBLEM
C    NSEG = NUMBER OF SHELL SEGMENTS
C
C/10*I2/4*I2-/IPRE*NTOT/---------8*I2----------/--M2-/--M2-/--I2-/
C/--C--/THERM/--RING---/--------PMODE----------/FNEW-/FOLD-/--DS-/
C/B(1)-/B(N1)/--B(N2)--/--------B(N3)----------/B(N7)/B(N8)/B(N9)/
C1     N1    N2        N3                      N7    N8    N9   N10
C
C     CONTINUE ON NEXT LINE
C
C /-5*I2-/-3*I2-/I2+2*NSEG/-3*I2-/-3*I2-/
C /---B--/---P--/---IW----/PSFIX-/PSVAR-/
C /B(N10)/B(N11)/--B(N12)-/B(N13)/B(N14)/
CN10    N11    N12       N13    N14
C
C     STARTING ADDRESSES AND DEFINITIONS OF VARIABLES...
C
C  ADD.   VAR.      DEFINITION
C
C   1     B(1)     CONSTITUTIVE LAW COEFFICIENTS, C(I,J)
C   N1    B(N1)    NEGATIVE OF PLASTIC+CREEP+THERMAL STRAINS INTEGRATED
C                  THROUGH SHELL WALL THICKNESS. LIKE THERMAL STRESS AND
C                  MOMENT RESULTANTS.
C   N2    B(N2)    DISCRETE RING VARIABLES, SUCH AS ECCENTRICITIES AND
C                  EP+EC+ET ('THERMAL STRAINS') INTEGRATED OVER RING
C                  CROSS-SECTION AREA, AND EA, EIX, EIY, ETC...
C   N3    B(N3)    PREBUCKLING QUANTITIES--W,U,BETA,S,N10,N20,M10,M20
C   N7    B(N7)    NOT USED
C   N8    B(N8)    SOLUTION VECTOR FOR LOAD STEP NO. KSTEP
C   N9    B(N9)    ARC LENGTH INCREMENTS (FINITE DIFFERENCE ELEMENTS)
C   N10   B(N10)   SHELL REFERENCE SURFACE GEOMETRY PARAMETERS R, R',
C                  1/R1, 1/R2, (1/R1)'
C   N11   B(N11)   NORMAL PRESSURE AND SURFACE TRACTION DISTRIBUTIONS
C   N12   B(N12)   EQUATION NUMBERS CORRESPONDING TO 'W' MESH POINTS
C   N13   B(N13)   NOT USED
C   N14   B(N14)   NOT USED
C
      CALL LOADS
      N1 = 10*I2 + 1
      N2 = N1 + 4*I2
      N3 = N2 + IPRE*NTOT
      N4 = N3 + I2
      N5 = N4 + I2
      N6 = N5 + 4*I2
      N7 = N6 + 4*I2
      N8 = N7 + 0
      N9 = N8 + M2
      N10 = N9 + I2
      N11 = N10 + 5*I2
      N12 = N11 + 3*I2
      N13 = N12 + I2 + 2*NSEG
      N14 = N13 + 3*I2
      N31 = N3 - 1
      CALL GASP(B(1),N31,3,ICMODE(KSTEP))
      I10 = 10*I2
      CALL GASP(B(N3),I10,3,IWAL(4))
      CALL GASP(B(N8),M2,3,IPMODE(KSTEP))
      NLONG2 = 10*I2 + 2*NSEG + 2614
      CALL GASP(B(N9),NLONG2,3,IWAL(2))
      KK = 1
      I5TOT = 0
      IC = 3
      NUNK = 5
      KLAP = 3
      ITOTL = 0
      S = 0.0
      DO 40 I=1,NSEG
C
C     PRESTRESS AND DISPLACEMENTS CALCULATED FOR ITH SEGMENT IN PLOCAL.
C
      WRITE (6,10)I,KSTEP
10    FORMAT(//66H  PREBUCKLING DISPLACEMENTS AND STRESS RESULTANTS FOR
     1SEGMENT NO.       I3,18H,   TIME STEP NO.         I3)
      I5I = I5(I)
      IPOS = 10*ITOTL + 1
      IPOS1=  4*ITOTL + N1
      IPOS2=  5*ITOTL + N10
      IPOS4 = 3*ITOTL + N13
      IPOS3 = 3*ITOTL + N14
      IARG = ITOTL + N9
      IARG3 = 4*ITOTL + N5
      IARG4 = 4*ITOTL + N6
20    CALL PSTLOC(I,I5I,B(IPOS),B(IPOS1),B(IARG),B(IPOS2),B(N12),
     1B(N8),B(IARG3),B(N2),B(N13),I2,S,BET,WS)
30    ITOTL = ITOTL + I5I
40    CONTINUE
      NN = I2*8
      CALL GASP(B(N13),NN,1,IMMODE)
      RETURN
C     RETURN CARD NOT NEEDED IN CDC VERSION
      END
C=DECK      PSTLOC
      SUBROUTINE PSTLOC(IS,I5,C,THERM,HC,B,FW,F,E1,RING,PMODE,I2,S,
     1BET,WS)
C
C     PREBUCKLING STRESSES AND DISPLACEMENTS CALCULATED FROM INPUT
C     SOLUTION F.
C
      DIMENSION C(I5,10),THERM(I5,4),HC(*),B(I5,5),FW(*),F(*)
      DIMENSION PMODE(I2,8),CSTART(10),TSTART(4)
      DIMENSION E1(I5,4),BET(*),WS(*),RING(*)
      COMMON/RINGRD/RC(99)
      COMMON/ALLRNG/NTOT,IPRE
      COMMON/ISTUFF/KK,I5TOT,IC,NUNK,KLAP
      COMMON/IOUTMN/INODMN(201,2),INODMX(201,2)
      DOUBLE PRECISION C1,C2,C3,HI,H,HPAST,W,U,R,RD,FK1,FK2,CURD,UD
      DOUBLE PRECISION WD,WDD,BETA,CFNLIN,EPS1,UV,FMUL,K1,EPS12,EPS2
      DOUBLE PRECISION K2,K12,UH,N10,N20,M10,M20,F1,CN1,CM1
      ITOT = I5TOT - 2*(IS-1)
      HI = HC(1)
      DO 130 I=1,I5
      DO 10 JJ=1,10
10    CSTART(JJ) = C(I,JJ)
      DO 20 JJ=1,4
20    TSTART(JJ) = THERM(I,JJ)
      H = HC(I)
      HPAST = HI
      HI = 2.*H-HPAST
      ITOT = ITOT + 1
      II = I5TOT + I + 1
      I2M = FW(II-1)
      I2P = FW(II+1)
      I0 = FW(II)
      I1M = I0 - 1
      I1P = I0 + 1
      IF ((I2P-I0).EQ.(IC+NUNK-KLAP))I1P = I0 + IC + 1
      C1 = (HPAST-HI)*(HI + H)/(16.*HPAST*H)
      C2 = (HI + H)*(HPAST + H)/(4.*HPAST*HI)
      C3 = - (HPAST-HI)*(HPAST + H)/(16.*HI*H)
      W = C1*F(I2M) + C2*F(I0) + C3*F(I2P)
      U = (F(I1M) + F(I1P))/2.
      R = B(I,1)
      RD = B(I,2)
      FK1 = B(I,3)
      FK2 = B(I,4)
      CURD = B(I,5)
      CURD = 0.0
      UD = (F(I1P) - F(I1M))/H
      C1 = -.5/HPAST
      C3 = .5/HI
      C2 = -C1 -C3
      WD = C1*F(I2M) + C2*F(I0) + C3*F(I2P)
      C1 = 1./(HPAST*H)
      C2 = -2./(HPAST*HI)
      C3 = 1./(HI*H)
      WDD = C1*F(I2M) + C2*F(I0) + C3*F(I2P)
      BETA = WD - U*FK1
      CFNLIN = 1.0
      EPS1 = UD + W*FK1 + CFNLIN*0.5*BETA**2
C
      UV = U*R*FK2 - W*RD
      FMUL = 0.0
      K1 = WDD - FK1*UD - CURD*U - FMUL*EPS1*FK1
      EPS12 = 0.0
      K12 = 0.0
      IF (R.GT.0.0) GO TO 30
      EPS2 = EPS1
      K2 = K1
      GO TO 40
30    EPS2 = U*RD/R + W*FK2
      K2 = BETA*RD/R -FMUL*EPS2*FK2
40    CONTINUE
      UH = EPS2*R
      E1(I,1) = EPS1
      E1(I,2) = EPS2
      E1(I,3) = K1
      E1(I,4) = K2
      IF (NTOT.EQ.0) GO TO 50
      IPOS = (KK-1)*IPRE + 1
      KSEG = RING(IPOS)/1000.
      FSEG = KSEG
      KPOINT = RING(IPOS) - FSEG*1000.
      IF (IS.NE.KSEG) GO TO 50
      IF (I.NE.KPOINT) GO TO 50
      RC(KK) = R + RING(IPOS+3)
      WS(KK) = EPS2*R
      BET(KK) = BETA
      KK = KK + 1
50    CONTINUE
      N10 = CSTART(1)*EPS1 +CSTART(2)*EPS2 +CSTART(3)*K1 +CSTART(4)*K2
      N20 = CSTART(2)*EPS1 +CSTART(5)*EPS2 +CSTART(6)*K1 +CSTART(7)*K2
      M10 = CSTART(3)*EPS1 +CSTART(6)*EPS2 +CSTART(8)*K1 +CSTART(9)*K2
      M20 = CSTART(4)*EPS1 +CSTART(7)*EPS2 +CSTART(9)*K1 +CSTART(10)*K2
      N10 = N10 + TSTART(1)
      N20 = N20 + TSTART(2)
      M10 = M10 + TSTART(3)
      M20 = M20 + TSTART(4)
      IF (I.EQ.1.OR.I.EQ.I5) GO TO 60
      GO TO 100
60    IF (R.GT.0.0) GO TO 70
      GO TO 100
C
C     CORRECTION ADDENDS FOR TRUNCATION ERRORS AT SEGMENT ENDS.
C
70    F1 = 0.5*RD*H/R
      CN1 = - N20*F1 +H*.5*(FK1*N10*BETA + M10*CURD)
      CM1 = - M20*F1 - H*N10*BETA/2.
      IF (I.EQ.I5) GO TO 80
      GO TO 90
80    CN1 = - CN1
      CM1 = - CM1
90    N10 = N10 + CN1
      M10 = M10 + CM1
      N20 = N20 + CSTART(2)*CN1/CSTART(1)
      M20 = M20 + CSTART(9)*CM1/CSTART(8)
100   CONTINUE
C     WRITE OUT PRESTRESSES DISPLACEMENTS
      IF (I.EQ.INODMN(IS,1)) WRITE (6,110)
110   FORMAT(/   ' POINT    STATION       W0         U0          BETA ', 
     1'        UV         N10         N20         M10        M20'/)            
      IF (I.GE.INODMN(IS,1).AND.I.LE.INODMX(IS,1))
     1WRITE (6,120)I,S,W,U,BETA,UV,N10,N20,M10,M20
120   FORMAT(I5,    1P9E12.3)
      PMODE(ITOT,1) = W
      PMODE(ITOT,2) = U
      PMODE(ITOT,3) = BETA
      PMODE(ITOT,4) = S
      PMODE(ITOT,5) = N10
      PMODE(ITOT,6) = N20
      PMODE(ITOT,7) = M10
      PMODE(ITOT,8) = M20
      IF (I.LT.I5) S = S + H/2. + HC(I+1)/2.
130   CONTINUE
      I5TOT = I5TOT + I5 + 2
      RETURN
      END
C=DECK      MODE
      SUBROUTINE MODE
C
C     CALCULATES BUCKLING MODE SHAPE
C
C     OVERLAY(3,0)     (CDC VERSION)
C     PROGRAM MODE     (CDC VERSION)
C
      COMMON/     /B(160000)
      COMMON/SMOAD/IMOAD(2),IMMODE,FMAX,ISIG
      COMMON/EIGNO/NVEC,EGV(50),AXB
      COMMON/LOCATN/ILOCP,ILOCB,IROWCP(201),IROWCB(201),IIWP,IIWB
      COMMON/IDEIG/IDMODE(2,25),NTRY
      COMMON/SEGS/NSEG,M2,I5(201),I2,NFAIL
      COMMON/WAVES/N0,N,NMIN,NMAX,INCR
      COMMON/TOTPTS/M3
      COMMON/ISTUFB/KK,I5TOT,IC,NUNK,KLAP,ICALL
      COMMON/SHEL/IWAL(201)
      COMMON/SEGBND/ISEGA,ISEGB,I2AB,NCONDB
      DOUBLE PRECISION DB
#if cray
      DIMENSION DB(160000)
#else
      DIMENSION DB(80000)
#endif
      EQUIVALENCE(B(1),DB(1))
      NCOND = NCONDB
      N1 = 1
      N2 = N1 + 2*M3
      N3 = N2 + I2
      N4 = N3 + 5*I2
      N5 = N4 + 3*I2
      N6 = N5 + I2
      N7 = N6 + I2 + 2*NSEG
      N8 = N7 + 2614
      IBEG = N8
      IEND = IBEG + 3*I2 - 1
      DO 10 I=IBEG,IEND
10    B(I) = 0.0
      DO 140 II=1,NVEC
      M32 = 2*M3
      CALL GASP(DB(1),M32,3,IDMODE(II,NTRY))
      WMAX = 0.0
      I5TOT = 0
      IC = 4
      NUNK = 7
      KLAP = 4
      ICALL = 1
C
C     NORMALIZE EIGENVECTOR (BUCKLING AND VIBRATION PROBLEMS ONLY,
      J = 1
      I = 0
20    I = I + 1
      IF (J.GT.NCOND) GO TO 40
      IF (I.EQ.IROWCB(J)) GO TO 30
      GO TO 40
30    I = I + IC
      IF (I.GT.M3) GO TO 50
      J = J + 1
40    FI = DB(I)
      WMAX = AMAX1(ABS(FI),WMAX)
      IF (I.GE.M3) GO TO 50
      GO TO 20
50    DO 60 I=1,M3
60    DB(I) = DB(I)/WMAX
      DO 70 I=1,M3
      FI = DB(I)
      IF (ABS(FI).EQ.1.0) GO TO 80
70    CONTINUE
      GO TO 100
80    IF (FI.GT.0.) GO TO 100
      DO 90 I=1,M3
90    DB(I) = -DB(I)
100   CONTINUE
      ILONG = 11*I2 + 2*NSEG + 2614 + M3
      CALL GASP(B(N2),ILONG,3,IWAL(8))
      ITOTL = 0
      S = 0.0
      DO 120 I=1,NSEG
C
C     MODAL DISPLACEMENTS AND STRESSES FOR EACH SEGMENT FOUND IN LOCAL.
C
      I5I = I5(I)
      IPOS1 = ITOTL + N5
      IF (I.LT.ISEGA) GO TO 110
      IF (I.GT.ISEGB) GO TO 130
      CALL LOCAL(I,I5I,DB(1),B(IPOS1),B(N6),B(N8),I2,S)
110   CONTINUE
      ITOTL = ITOTL + I5I
120   CONTINUE
130   CONTINUE
      NN = I2*3
      CALL GASP(B(N8),NN,1,IMOAD(II))
140   CONTINUE
      RETURN
C     RETURN CARD NOT NEEDED IN CDC VERSION
      END
C=DECK      LOCAL
      SUBROUTINE LOCAL(IS,I5,F,HC,FW,BMODE,I2,S)
      DIMENSION F(*),HC(*),FW(*),BMODE(I2,3)
      COMMON/ISTUFB/KK,I5TOT,IC,NUNK,KLAP,ICALL
      COMMON/WAVES/N0,N,NMIN,NMAX,INCR
      COMMON/IOUTMN/INODMN(201,2),INODMX(201,2)
      DOUBLE PRECISION F
      ITOT = I5TOT - 2*(IS-1)
      HI = HC(1)
C     START LOOP OVER CURRENT SEGMENT MESH POINTS.
      DO 40 I=1,I5
      H = HC(I)
      HPAST = HI
      HI = 2.*H-HPAST
      ITOT = ITOT + 1
      II = I5TOT + I + 1
      I3M = FW(II-1)
      I0 = FW(II)
      I3P = FW(II+1)
      I2M = I0-2
      I1M = I0-1
      I1P = I0+1
      I2P = I0+2
      IF ((I3P-I0).EQ.(IC+NUNK-KLAP)) I1P = I0 + IC + 1
      IF ((I3P-I0).EQ.(IC+NUNK-KLAP)) I2P = I0 + IC + 2
C     DISPLACEMENTS AND DERIVATIVES FOR VARIABLE SPACING MESH
C
      C1 = (HPAST-HI)*(HI + H)/(16.*HPAST*H)
      C2 = (HI + H)*(HPAST + H)/(4.*HPAST*HI)
      C3 = - (HPAST-HI)*(HPAST + H)/(16.*HI*H)
      W = C1*F(I3M) + C2*F(I0) + C3*F(I3P)
      U = (F(I2M) + F(I1P))/2.
      V = (F(I1M) + F(I2P))/2.
C     BMODE CONTAINS GLOBAL QUANTITIES
      BMODE(ITOT,1) = U
      BMODE(ITOT,2) = V
      BMODE(ITOT,3) = W
      IF (I.EQ.1) WRITE (6,10)IS,N
10    FORMAT(//27H BUCKLING MODE FOR SEGMENT   I3,5H,     I6,30H  CIRCUM
     1FERENTIAL WAVES.                     )
      IF (I.EQ.INODMN(IS,2)) WRITE (6,20)
20    FORMAT(/52H POINT    STATION       U            V            W //)
      IF (I.GE.INODMN(IS,2).AND.I.LE.INODMX(IS,2))
     1WRITE (6,30)I,S,U,V,W
30    FORMAT(I5,    1P4E12.3)
      IF (I.LT.I5) S = S + H/2. + HC(I+1)/2.
40    CONTINUE
      I5TOT = I5TOT + I5 + 2
      RETURN
      END
