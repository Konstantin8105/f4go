COMMENT             	*> \brief \b SROTM
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =========== DOCUMENTATION ===========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	* Online html documentation available at
NEW_LINE            	

COMMENT             	*            http://www.netlib.org/lapack/explore-html/
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Definition:
NEW_LINE            	

COMMENT             	*  ===========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*       SUBROUTINE SROTM(N,SX,INCX,SY,INCY,SPARAM)
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*       .. Scalar Arguments ..
NEW_LINE            	

COMMENT             	*       INTEGER INCX,INCY,N
NEW_LINE            	

COMMENT             	*       ..
NEW_LINE            	

COMMENT             	*       .. Array Arguments ..
NEW_LINE            	

COMMENT             	*       REAL SPARAM(5),SX(*),SY(*)
NEW_LINE            	

COMMENT             	*       ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \par Purpose:
NEW_LINE            	

COMMENT             	*  =============
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>    APPLY THE MODIFIED GIVENS TRANSFORMATION, H, TO THE 2 BY N MATRIX
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>    (SX**T) , WHERE **T INDICATES TRANSPOSE. THE ELEMENTS OF SX ARE IN
NEW_LINE            	

COMMENT             	*>    (SX**T)
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>    SX(LX+I*INCX), I = 0 TO N-1, WHERE LX = 1 IF INCX .GE. 0, ELSE
NEW_LINE            	

COMMENT             	*>    LX = (-INCX)*N, AND SIMILARLY FOR SY USING USING LY AND INCY.
NEW_LINE            	

COMMENT             	*>    WITH SPARAM(1)=SFLAG, H HAS ONE OF THE FOLLOWING FORMS..
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>    SFLAG=-1.E0     SFLAG=0.E0        SFLAG=1.E0     SFLAG=-2.E0
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>      (SH11  SH12)    (1.E0  SH12)    (SH11  1.E0)    (1.E0  0.E0)
NEW_LINE            	

COMMENT             	*>    H=(          )    (          )    (          )    (          )
NEW_LINE            	

COMMENT             	*>      (SH21  SH22),   (SH21  1.E0),   (-1.E0 SH22),   (0.E0  1.E0).
NEW_LINE            	

COMMENT             	*>    SEE  SROTMG FOR A DESCRIPTION OF DATA STORAGE IN SPARAM.
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Arguments:
NEW_LINE            	

COMMENT             	*  ==========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \param[in] N
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          N is INTEGER
NEW_LINE            	

COMMENT             	*>         number of elements in input vector(s)
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in,out] SX
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          SX is REAL array, dimension ( 1 + ( N - 1 )*abs( INCX ) )
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in] INCX
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          INCX is INTEGER
NEW_LINE            	

COMMENT             	*>         storage spacing between elements of SX
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in,out] SY
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          SY is REAL array, dimension ( 1 + ( N - 1 )*abs( INCY ) )
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in] INCY
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          INCY is INTEGER
NEW_LINE            	

COMMENT             	*>         storage spacing between elements of SY
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in] SPARAM
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          SPARAM is REAL array, dimension (5)
NEW_LINE            	

COMMENT             	*>     SPARAM(1)=SFLAG
NEW_LINE            	

COMMENT             	*>     SPARAM(2)=SH11
NEW_LINE            	

COMMENT             	*>     SPARAM(3)=SH21
NEW_LINE            	

COMMENT             	*>     SPARAM(4)=SH12
NEW_LINE            	

COMMENT             	*>     SPARAM(5)=SH22
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Authors:
NEW_LINE            	

COMMENT             	*  ========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \author Univ. of Tennessee
NEW_LINE            	

COMMENT             	*> \author Univ. of California Berkeley
NEW_LINE            	

COMMENT             	*> \author Univ. of Colorado Denver
NEW_LINE            	

COMMENT             	*> \author NAG Ltd.
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \date November 2017
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \ingroup single_blas_level1
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =====================================================================
NEW_LINE            	

SUBROUTINE          	SUBROUTINE
IDENT               	SROTM
(                   	(
IDENT               	N
,                   	,
IDENT               	SX
,                   	,
IDENT               	INCX
,                   	,
IDENT               	SY
,                   	,
IDENT               	INCY
,                   	,
IDENT               	SPARAM
)                   	)
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  -- Reference BLAS level1 routine (version 3.8.0) --
NEW_LINE            	

COMMENT             	*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
NEW_LINE            	

COMMENT             	*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
NEW_LINE            	

COMMENT             	*     November 2017
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*     .. Scalar Arguments ..
NEW_LINE            	

INTEGER             	INTEGER
IDENT               	INCX
,                   	,
IDENT               	INCY
,                   	,
IDENT               	N
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*     .. Array Arguments ..
NEW_LINE            	

REAL                	REAL
IDENT               	SPARAM
(                   	(
INT                 	5
)                   	)
,                   	,
IDENT               	SX
(                   	(
*                   	*
)                   	)
,                   	,
IDENT               	SY
(                   	(
*                   	*
)                   	)
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =====================================================================
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*     .. Local Scalars ..
NEW_LINE            	

REAL                	REAL
IDENT               	SFLAG
,                   	,
IDENT               	SH11
,                   	,
IDENT               	SH12
,                   	,
IDENT               	SH21
,                   	,
IDENT               	SH22
,                   	,
IDENT               	TWO
,                   	,
IDENT               	W
,                   	,
IDENT               	Z
,                   	,
IDENT               	ZERO
NEW_LINE            	

INTEGER             	INTEGER
IDENT               	I
,                   	,
IDENT               	KX
,                   	,
IDENT               	KY
,                   	,
IDENT               	NSTEPS
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*     .. Data statements ..
NEW_LINE            	

IDENT               	DATA
IDENT               	ZERO
,                   	,
IDENT               	TWO
/                   	/
FLOAT               	0.E0
,                   	,
FLOAT               	2.E0
/                   	/
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

IDENT               	SFLAG
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	1
)                   	)
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	N
<=                  	.LE.
INT                 	0
||                  	.OR.
(                   	(
IDENT               	SFLAG
+                   	+
IDENT               	TWO
==                  	.EQ.
IDENT               	ZERO
)                   	)
)                   	)
return              	RETURN
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	INCX
==                  	.EQ.
IDENT               	INCY
&&                  	.AND.
IDENT               	INCX
>                   	.GT.
INT                 	0
)                   	)
THEN                	THEN
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

IDENT               	NSTEPS
=                   	=
IDENT               	N
*                   	*
IDENT               	INCX
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SFLAG
<                   	.LT.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SH11
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	2
)                   	)
NEW_LINE            	

IDENT               	SH12
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	4
)                   	)
NEW_LINE            	

IDENT               	SH21
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	3
)                   	)
NEW_LINE            	

IDENT               	SH22
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	5
)                   	)
NEW_LINE            	

DO                  	DO
IDENT               	I
=                   	=
INT                 	1
,                   	,
IDENT               	NSTEPS
,                   	,
IDENT               	INCX
NEW_LINE            	

IDENT               	W
=                   	=
IDENT               	SX
(                   	(
IDENT               	I
)                   	)
NEW_LINE            	

IDENT               	Z
=                   	=
IDENT               	SY
(                   	(
IDENT               	I
)                   	)
NEW_LINE            	

IDENT               	SX
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	W
*                   	*
IDENT               	SH11
+                   	+
IDENT               	Z
*                   	*
IDENT               	SH12
NEW_LINE            	

IDENT               	SY
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	W
*                   	*
IDENT               	SH21
+                   	+
IDENT               	Z
*                   	*
IDENT               	SH22
NEW_LINE            	

END                 	END
DO                  	DO
NEW_LINE            	

else                	ELSE
if                  	IF
(                   	(
IDENT               	SFLAG
==                  	.EQ.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SH12
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	4
)                   	)
NEW_LINE            	

IDENT               	SH21
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	3
)                   	)
NEW_LINE            	

DO                  	DO
IDENT               	I
=                   	=
INT                 	1
,                   	,
IDENT               	NSTEPS
,                   	,
IDENT               	INCX
NEW_LINE            	

IDENT               	W
=                   	=
IDENT               	SX
(                   	(
IDENT               	I
)                   	)
NEW_LINE            	

IDENT               	Z
=                   	=
IDENT               	SY
(                   	(
IDENT               	I
)                   	)
NEW_LINE            	

IDENT               	SX
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	W
+                   	+
IDENT               	Z
*                   	*
IDENT               	SH12
NEW_LINE            	

IDENT               	SY
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	W
*                   	*
IDENT               	SH21
+                   	+
IDENT               	Z
NEW_LINE            	

END                 	END
DO                  	DO
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	SH11
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	2
)                   	)
NEW_LINE            	

IDENT               	SH22
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	5
)                   	)
NEW_LINE            	

DO                  	DO
IDENT               	I
=                   	=
INT                 	1
,                   	,
IDENT               	NSTEPS
,                   	,
IDENT               	INCX
NEW_LINE            	

IDENT               	W
=                   	=
IDENT               	SX
(                   	(
IDENT               	I
)                   	)
NEW_LINE            	

IDENT               	Z
=                   	=
IDENT               	SY
(                   	(
IDENT               	I
)                   	)
NEW_LINE            	

IDENT               	SX
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	W
*                   	*
IDENT               	SH11
+                   	+
IDENT               	Z
NEW_LINE            	

IDENT               	SY
(                   	(
IDENT               	I
)                   	)
=                   	=
-                   	-
IDENT               	W
+                   	+
IDENT               	SH22
*                   	*
IDENT               	Z
NEW_LINE            	

END                 	END
DO                  	DO
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	KX
=                   	=
INT                 	1
NEW_LINE            	

IDENT               	KY
=                   	=
INT                 	1
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	INCX
<                   	.LT.
INT                 	0
)                   	)
IDENT               	KX
=                   	=
INT                 	1
+                   	+
(                   	(
INT                 	1
-                   	-
IDENT               	N
)                   	)
*                   	*
IDENT               	INCX
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	INCY
<                   	.LT.
INT                 	0
)                   	)
IDENT               	KY
=                   	=
INT                 	1
+                   	+
(                   	(
INT                 	1
-                   	-
IDENT               	N
)                   	)
*                   	*
IDENT               	INCY
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SFLAG
<                   	.LT.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SH11
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	2
)                   	)
NEW_LINE            	

IDENT               	SH12
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	4
)                   	)
NEW_LINE            	

IDENT               	SH21
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	3
)                   	)
NEW_LINE            	

IDENT               	SH22
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	5
)                   	)
NEW_LINE            	

DO                  	DO
IDENT               	I
=                   	=
INT                 	1
,                   	,
IDENT               	N
NEW_LINE            	

IDENT               	W
=                   	=
IDENT               	SX
(                   	(
IDENT               	KX
)                   	)
NEW_LINE            	

IDENT               	Z
=                   	=
IDENT               	SY
(                   	(
IDENT               	KY
)                   	)
NEW_LINE            	

IDENT               	SX
(                   	(
IDENT               	KX
)                   	)
=                   	=
IDENT               	W
*                   	*
IDENT               	SH11
+                   	+
IDENT               	Z
*                   	*
IDENT               	SH12
NEW_LINE            	

IDENT               	SY
(                   	(
IDENT               	KY
)                   	)
=                   	=
IDENT               	W
*                   	*
IDENT               	SH21
+                   	+
IDENT               	Z
*                   	*
IDENT               	SH22
NEW_LINE            	

IDENT               	KX
=                   	=
IDENT               	KX
+                   	+
IDENT               	INCX
NEW_LINE            	

IDENT               	KY
=                   	=
IDENT               	KY
+                   	+
IDENT               	INCY
NEW_LINE            	

END                 	END
DO                  	DO
NEW_LINE            	

else                	ELSE
if                  	IF
(                   	(
IDENT               	SFLAG
==                  	.EQ.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SH12
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	4
)                   	)
NEW_LINE            	

IDENT               	SH21
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	3
)                   	)
NEW_LINE            	

DO                  	DO
IDENT               	I
=                   	=
INT                 	1
,                   	,
IDENT               	N
NEW_LINE            	

IDENT               	W
=                   	=
IDENT               	SX
(                   	(
IDENT               	KX
)                   	)
NEW_LINE            	

IDENT               	Z
=                   	=
IDENT               	SY
(                   	(
IDENT               	KY
)                   	)
NEW_LINE            	

IDENT               	SX
(                   	(
IDENT               	KX
)                   	)
=                   	=
IDENT               	W
+                   	+
IDENT               	Z
*                   	*
IDENT               	SH12
NEW_LINE            	

IDENT               	SY
(                   	(
IDENT               	KY
)                   	)
=                   	=
IDENT               	W
*                   	*
IDENT               	SH21
+                   	+
IDENT               	Z
NEW_LINE            	

IDENT               	KX
=                   	=
IDENT               	KX
+                   	+
IDENT               	INCX
NEW_LINE            	

IDENT               	KY
=                   	=
IDENT               	KY
+                   	+
IDENT               	INCY
NEW_LINE            	

END                 	END
DO                  	DO
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	SH11
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	2
)                   	)
NEW_LINE            	

IDENT               	SH22
=                   	=
IDENT               	SPARAM
(                   	(
INT                 	5
)                   	)
NEW_LINE            	

DO                  	DO
IDENT               	I
=                   	=
INT                 	1
,                   	,
IDENT               	N
NEW_LINE            	

IDENT               	W
=                   	=
IDENT               	SX
(                   	(
IDENT               	KX
)                   	)
NEW_LINE            	

IDENT               	Z
=                   	=
IDENT               	SY
(                   	(
IDENT               	KY
)                   	)
NEW_LINE            	

IDENT               	SX
(                   	(
IDENT               	KX
)                   	)
=                   	=
IDENT               	W
*                   	*
IDENT               	SH11
+                   	+
IDENT               	Z
NEW_LINE            	

IDENT               	SY
(                   	(
IDENT               	KY
)                   	)
=                   	=
-                   	-
IDENT               	W
+                   	+
IDENT               	SH22
*                   	*
IDENT               	Z
NEW_LINE            	

IDENT               	KX
=                   	=
IDENT               	KX
+                   	+
IDENT               	INCX
NEW_LINE            	

IDENT               	KY
=                   	=
IDENT               	KY
+                   	+
IDENT               	INCY
NEW_LINE            	

END                 	END
DO                  	DO
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

return              	RETURN
NEW_LINE            	

END                 	END
NEW_LINE            	

