COMMENT             	*> \brief \b CSCAL
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =========== DOCUMENTATION ===========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	* Online html documentation available at
NEW_LINE            	

COMMENT             	*            http://www.netlib.org/lapack/explore-html/
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Definition:
NEW_LINE            	

COMMENT             	*  ===========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*       SUBROUTINE CSCAL(N,CA,CX,INCX)
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*       .. Scalar Arguments ..
NEW_LINE            	

COMMENT             	*       COMPLEX CA
NEW_LINE            	

COMMENT             	*       INTEGER INCX,N
NEW_LINE            	

COMMENT             	*       ..
NEW_LINE            	

COMMENT             	*       .. Array Arguments ..
NEW_LINE            	

COMMENT             	*       COMPLEX CX(*)
NEW_LINE            	

COMMENT             	*       ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \par Purpose:
NEW_LINE            	

COMMENT             	*  =============
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>    CSCAL scales a vector by a constant.
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Arguments:
NEW_LINE            	

COMMENT             	*  ==========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \param[in] N
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          N is INTEGER
NEW_LINE            	

COMMENT             	*>         number of elements in input vector(s)
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in] CA
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          CA is COMPLEX
NEW_LINE            	

COMMENT             	*>           On entry, CA specifies the scalar alpha.
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in,out] CX
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          CX is COMPLEX array, dimension ( 1 + ( N - 1 )*abs( INCX ) )
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in] INCX
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          INCX is INTEGER
NEW_LINE            	

COMMENT             	*>         storage spacing between elements of CX
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Authors:
NEW_LINE            	

COMMENT             	*  ========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \author Univ. of Tennessee
NEW_LINE            	

COMMENT             	*> \author Univ. of California Berkeley
NEW_LINE            	

COMMENT             	*> \author Univ. of Colorado Denver
NEW_LINE            	

COMMENT             	*> \author NAG Ltd.
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \date November 2017
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \ingroup complex_blas_level1
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \par Further Details:
NEW_LINE            	

COMMENT             	*  =====================
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>     jack dongarra, linpack,  3/11/78.
NEW_LINE            	

COMMENT             	*>     modified 3/93 to return if incx .le. 0.
NEW_LINE            	

COMMENT             	*>     modified 12/3/93, array(1) declarations changed to array(*)
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*  =====================================================================
NEW_LINE            	

SUBROUTINE          	SUBROUTINE
IDENT               	CSCAL
(                   	(
IDENT               	N
,                   	,
IDENT               	CA
,                   	,
IDENT               	CX
,                   	,
IDENT               	INCX
)                   	)
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  -- Reference BLAS level1 routine (version 3.8.0) --
NEW_LINE            	

COMMENT             	*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
NEW_LINE            	

COMMENT             	*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
NEW_LINE            	

COMMENT             	*     November 2017
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*     .. Scalar Arguments ..
NEW_LINE            	

IDENT               	COMPLEX
IDENT               	CA
NEW_LINE            	

INTEGER             	INTEGER
IDENT               	INCX
,                   	,
IDENT               	N
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*     .. Array Arguments ..
NEW_LINE            	

IDENT               	COMPLEX
IDENT               	CX
(                   	(
*                   	*
)                   	)
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =====================================================================
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*     .. Local Scalars ..
NEW_LINE            	

INTEGER             	INTEGER
IDENT               	I
,                   	,
IDENT               	NINCX
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	N
<=                  	.LE.
INT                 	0
||                  	.OR.
IDENT               	INCX
<=                  	.LE.
INT                 	0
)                   	)
return              	RETURN
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	INCX
==                  	.EQ.
INT                 	1
)                   	)
THEN                	THEN
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*        code for increment equal to 1
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

DO                  	DO
IDENT               	I
=                   	=
INT                 	1
,                   	,
IDENT               	N
NEW_LINE            	

IDENT               	CX
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	CA
*                   	*
IDENT               	CX
(                   	(
IDENT               	I
)                   	)
NEW_LINE            	

END                 	END
DO                  	DO
NEW_LINE            	

else                	ELSE
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*        code for increment not equal to 1
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

IDENT               	NINCX
=                   	=
IDENT               	N
*                   	*
IDENT               	INCX
NEW_LINE            	

DO                  	DO
IDENT               	I
=                   	=
INT                 	1
,                   	,
IDENT               	NINCX
,                   	,
IDENT               	INCX
NEW_LINE            	

IDENT               	CX
(                   	(
IDENT               	I
)                   	)
=                   	=
IDENT               	CA
*                   	*
IDENT               	CX
(                   	(
IDENT               	I
)                   	)
NEW_LINE            	

END                 	END
DO                  	DO
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

return              	RETURN
NEW_LINE            	

END                 	END
NEW_LINE            	

