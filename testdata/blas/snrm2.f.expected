COMMENT             	*> \brief \b SNRM2
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =========== DOCUMENTATION ===========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	* Online html documentation available at
NEW_LINE            	

COMMENT             	*            http://www.netlib.org/lapack/explore-html/
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Definition:
NEW_LINE            	

COMMENT             	*  ===========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*       REAL FUNCTION SNRM2(N,X,INCX)
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*       .. Scalar Arguments ..
NEW_LINE            	

COMMENT             	*       INTEGER INCX,N
NEW_LINE            	

COMMENT             	*       ..
NEW_LINE            	

COMMENT             	*       .. Array Arguments ..
NEW_LINE            	

COMMENT             	*       REAL X(*)
NEW_LINE            	

COMMENT             	*       ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \par Purpose:
NEW_LINE            	

COMMENT             	*  =============
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> SNRM2 returns the euclidean norm of a vector via the function
NEW_LINE            	

COMMENT             	*> name, so that
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>    SNRM2 := sqrt( x'*x ).
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Arguments:
NEW_LINE            	

COMMENT             	*  ==========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \param[in] N
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          N is INTEGER
NEW_LINE            	

COMMENT             	*>         number of elements in input vector(s)
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in] X
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          X is REAL array, dimension ( 1 + ( N - 1 )*abs( INCX ) )
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in] INCX
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          INCX is INTEGER
NEW_LINE            	

COMMENT             	*>         storage spacing between elements of SX
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Authors:
NEW_LINE            	

COMMENT             	*  ========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \author Univ. of Tennessee
NEW_LINE            	

COMMENT             	*> \author Univ. of California Berkeley
NEW_LINE            	

COMMENT             	*> \author Univ. of Colorado Denver
NEW_LINE            	

COMMENT             	*> \author NAG Ltd.
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \date November 2017
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \ingroup single_blas_level1
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \par Further Details:
NEW_LINE            	

COMMENT             	*  =====================
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>  -- This version written on 25-October-1982.
NEW_LINE            	

COMMENT             	*>     Modified on 14-October-1993 to inline the call to SLASSQ.
NEW_LINE            	

COMMENT             	*>     Sven Hammarling, Nag Ltd.
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*  =====================================================================
NEW_LINE            	

REAL                	REAL
FUNCTION            	FUNCTION
IDENT               	SNRM2
(                   	(
IDENT               	N
,                   	,
IDENT               	X
,                   	,
IDENT               	INCX
)                   	)
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  -- Reference BLAS level1 routine (version 3.8.0) --
NEW_LINE            	

COMMENT             	*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
NEW_LINE            	

COMMENT             	*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
NEW_LINE            	

COMMENT             	*     November 2017
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*     .. Scalar Arguments ..
NEW_LINE            	

INTEGER             	INTEGER
IDENT               	INCX
,                   	,
IDENT               	N
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*     .. Array Arguments ..
NEW_LINE            	

REAL                	REAL
IDENT               	X
(                   	(
*                   	*
)                   	)
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =====================================================================
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*     .. Parameters ..
NEW_LINE            	

REAL                	REAL
IDENT               	ONE
,                   	,
IDENT               	ZERO
NEW_LINE            	

PARAMETER           	PARAMETER
(                   	(
IDENT               	ONE
=                   	=
FLOAT               	1.0E+0
,                   	,
IDENT               	ZERO
=                   	=
FLOAT               	0.0E+0
)                   	)
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*     .. Local Scalars ..
NEW_LINE            	

REAL                	REAL
IDENT               	ABSXI
,                   	,
IDENT               	NORM
,                   	,
IDENT               	SCALE
,                   	,
IDENT               	SSQ
NEW_LINE            	

INTEGER             	INTEGER
IDENT               	IX
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*     .. Intrinsic Functions ..
NEW_LINE            	

INTRINSIC           	INTRINSIC
IDENT               	ABS
,                   	,
IDENT               	SQRT
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	N
<                   	.LT.
INT                 	1
||                  	.OR.
IDENT               	INCX
<                   	.LT.
INT                 	1
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	NORM
=                   	=
IDENT               	ZERO
NEW_LINE            	

else                	ELSE
if                  	IF
(                   	(
IDENT               	N
==                  	.EQ.
INT                 	1
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	NORM
=                   	=
IDENT               	ABS
(                   	(
IDENT               	X
(                   	(
INT                 	1
)                   	)
)                   	)
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	SCALE
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SSQ
=                   	=
IDENT               	ONE
NEW_LINE            	

COMMENT             	*        The following loop is equivalent to this call to the LAPACK
NEW_LINE            	

COMMENT             	*        auxiliary routine:
NEW_LINE            	

COMMENT             	*        CALL SLASSQ( N, X, INCX, SCALE, SSQ )
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

DO                  	DO
INT                 	10
IDENT               	IX
=                   	=
INT                 	1
,                   	,
INT                 	1
+                   	+
(                   	(
IDENT               	N
-                   	-
INT                 	1
)                   	)
*                   	*
IDENT               	INCX
,                   	,
IDENT               	INCX
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	X
(                   	(
IDENT               	IX
)                   	)
!=                  	.NE.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	ABSXI
=                   	=
IDENT               	ABS
(                   	(
IDENT               	X
(                   	(
IDENT               	IX
)                   	)
)                   	)
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SCALE
<                   	.LT.
IDENT               	ABSXI
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SSQ
=                   	=
IDENT               	ONE
+                   	+
IDENT               	SSQ
*                   	*
(                   	(
IDENT               	SCALE
/                   	/
IDENT               	ABSXI
)                   	)
                    	**
INT                 	2
NEW_LINE            	

IDENT               	SCALE
=                   	=
IDENT               	ABSXI
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	SSQ
=                   	=
IDENT               	SSQ
+                   	+
(                   	(
IDENT               	ABSXI
/                   	/
IDENT               	SCALE
)                   	)
                    	**
INT                 	2
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

INT                 	10
continue            	CONTINUE
NEW_LINE            	

IDENT               	NORM
=                   	=
IDENT               	SCALE
*                   	*
IDENT               	SQRT
(                   	(
IDENT               	SSQ
)                   	)
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

IDENT               	SNRM2
=                   	=
IDENT               	NORM
NEW_LINE            	

return              	RETURN
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*     End of SNRM2.
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

END                 	END
NEW_LINE            	

