 SUBROUTINE ZSYR2K ( UPLO , TRANS , N , K , ALPHA , A , LDA , B , LDB , BETA , C , LDC )
 COMPLEX * 16 ALPHA , BETA
 INTEGER K , LDA , LDB , LDC , N
 CHARACTER TRANS , UPLO
 COMPLEX * 16 A ( LDA , * ) , B ( LDB , * ) , C ( LDC , * )
 LOGICAL LSAME
 EXTERNAL LSAME
 EXTERNAL XERBLA
 INTRINSIC MAX
 COMPLEX * 16 TEMP1 , TEMP2
 INTEGER I , INFO , J , L , NROWA
 LOGICAL UPPER
 COMPLEX * 16 ONE
 PARAMETER ( ONE = ( 1.0D+0 , 0.0D+0 ) )
 COMPLEX * 16 ZERO
 PARAMETER ( ZERO = ( 0.0D+0 , 0.0D+0 ) )
 IF ( LSAME ( TRANS , 'N' ) ) THEN
 NROWA = N
 ELSE
 NROWA = K
 END
 UPPER = LSAME ( UPLO , 'U' )
 INFO = 0
 IF ( ( .NOT. UPPER ) .AND. ( .NOT. LSAME ( UPLO , 'L' ) ) ) THEN
 INFO = 1
 ELSE IF ( ( .NOT. LSAME ( TRANS , 'N' ) ) .AND. ( .NOT. LSAME ( TRANS , 'T' ) ) ) THEN
 INFO = 2
 ELSE IF ( N .LT. 0 ) THEN
 INFO = 3
 ELSE IF ( K .LT. 0 ) THEN
 INFO = 4
 ELSE IF ( LDA .LT. MAX ( 1 , NROWA ) ) THEN
 INFO = 7
 ELSE IF ( LDB .LT. MAX ( 1 , NROWA ) ) THEN
 INFO = 9
 ELSE IF ( LDC .LT. MAX ( 1 , N ) ) THEN
 INFO = 12
 END
 IF ( INFO .NE. 0 ) THEN
 CALL XERBLA ( 'ZSYR2K' , INFO )
 RETURN
 END
 IF ( ( N .EQ. 0 ) .OR. ( ( ( ALPHA .EQ. ZERO ) .OR. ( K .EQ. 0 ) ) .AND. ( BETA .EQ. ONE ) ) ) RETURN
 IF ( ALPHA .EQ. ZERO ) THEN
 IF ( UPPER ) THEN
 IF ( BETA .EQ. ZERO ) THEN
 DO J = 1 , N
 DO I = 1 , J
 C ( I , J ) = ZERO
 end

 end

 ELSE
 DO J = 1 , N
 DO I = 1 , J
 C ( I , J ) = BETA * C ( I , J )
 end

 end

 END
 ELSE
 IF ( BETA .EQ. ZERO ) THEN
 DO J = 1 , N
 DO I = J , N
 C ( I , J ) = ZERO
 end

 end

 ELSE
 DO J = 1 , N
 DO I = J , N
 C ( I , J ) = BETA * C ( I , J )
 end

 end

 END
 END
 RETURN
 END
 IF ( LSAME ( TRANS , 'N' ) ) THEN
 IF ( UPPER ) THEN
 DO J = 1 , N
 IF ( BETA .EQ. ZERO ) THEN
 DO I = 1 , J
 C ( I , J ) = ZERO
 end

 ELSE IF ( BETA .NE. ONE ) THEN
 DO I = 1 , J
 C ( I , J ) = BETA * C ( I , J )
 end

 END
 DO L = 1 , K
 IF ( ( A ( J , L ) .NE. ZERO ) .OR. ( B ( J , L ) .NE. ZERO ) ) THEN
 TEMP1 = ALPHA * B ( J , L )
 TEMP2 = ALPHA * A ( J , L )
 DO I = 1 , J
 C ( I , J ) = C ( I , J ) + A ( I , L ) * TEMP1 + B ( I , L ) * TEMP2
 end

 END
 end

 end

 ELSE
 DO J = 1 , N
 IF ( BETA .EQ. ZERO ) THEN
 DO I = J , N
 C ( I , J ) = ZERO
 end

 ELSE IF ( BETA .NE. ONE ) THEN
 DO I = J , N
 C ( I , J ) = BETA * C ( I , J )
 end

 END
 DO L = 1 , K
 IF ( ( A ( J , L ) .NE. ZERO ) .OR. ( B ( J , L ) .NE. ZERO ) ) THEN
 TEMP1 = ALPHA * B ( J , L )
 TEMP2 = ALPHA * A ( J , L )
 DO I = J , N
 C ( I , J ) = C ( I , J ) + A ( I , L ) * TEMP1 + B ( I , L ) * TEMP2
 end

 END
 end

 end

 END
 ELSE
 IF ( UPPER ) THEN
 DO J = 1 , N
 DO I = 1 , J
 TEMP1 = ZERO
 TEMP2 = ZERO
 DO L = 1 , K
 TEMP1 = TEMP1 + A ( L , I ) * B ( L , J )
 TEMP2 = TEMP2 + B ( L , I ) * A ( L , J )
 end

 IF ( BETA .EQ. ZERO ) THEN
 C ( I , J ) = ALPHA * TEMP1 + ALPHA * TEMP2
 ELSE
 C ( I , J ) = BETA * C ( I , J ) + ALPHA * TEMP1 + ALPHA * TEMP2
 END
 end

 end

 ELSE
 DO J = 1 , N
 DO I = J , N
 TEMP1 = ZERO
 TEMP2 = ZERO
 DO L = 1 , K
 TEMP1 = TEMP1 + A ( L , I ) * B ( L , J )
 TEMP2 = TEMP2 + B ( L , I ) * A ( L , J )
 end

 IF ( BETA .EQ. ZERO ) THEN
 C ( I , J ) = ALPHA * TEMP1 + ALPHA * TEMP2
 ELSE
 C ( I , J ) = BETA * C ( I , J ) + ALPHA * TEMP1 + ALPHA * TEMP2
 END
 end

 end

 END
 END
 RETURN
 END
