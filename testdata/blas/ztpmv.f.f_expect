
 SUBROUTINE ZTPMV ( UPLO , TRANS , DIAG , N , AP , X , INCX )
 INTEGER INCX , N
 CHARACTER DIAG , TRANS , UPLO
 COMPLEX * 16 AP ( * ) , X ( * )
 COMPLEX * 16 ZERO
 PARAMETER ( ZERO = ( 0.0D+0 , 0.0D+0 ) )
 COMPLEX * 16 TEMP
 INTEGER I , INFO , IX , J , JX , K , KK , KX
 LOGICAL NOCONJ , NOUNIT
 LOGICAL LSAME
 EXTERNAL LSAME
 EXTERNAL XERBLA
 INTRINSIC DCONJG
 INFO = 0
 IF ( .NOT. LSAME ( UPLO , 'U' ) .AND. .NOT. LSAME ( UPLO , 'L' ) ) THEN
 INFO = 1
 ELSE IF ( .NOT. LSAME ( TRANS , 'N' ) .AND. .NOT. LSAME ( TRANS , 'T' ) .AND.
 + .NOT. LSAME ( TRANS , 'C' ) ) THEN
 INFO = 2
 ELSE IF ( .NOT. LSAME ( DIAG , 'U' ) .AND. .NOT. LSAME ( DIAG , 'N' ) ) THEN
 INFO = 3
 ELSE IF ( N .LT. 0 ) THEN
 INFO = 4
 ELSE IF ( INCX .EQ. 0 ) THEN
 INFO = 7
 END IF
 IF ( INFO .NE. 0 ) THEN
 CALL XERBLA ( 'ZTPMV ' , INFO )
 RETURN
 END IF
 IF ( N .EQ. 0 ) RETURN
 NOCONJ = LSAME ( TRANS , 'T' )
 NOUNIT = LSAME ( DIAG , 'N' )
 IF ( INCX .LE. 0 ) THEN
 KX = 1 - ( N - 1 ) * INCX
 ELSE IF ( INCX .NE. 1 ) THEN
 KX = 1
 END IF
 IF ( LSAME ( TRANS , 'N' ) ) THEN
 IF ( LSAME ( UPLO , 'U' ) ) THEN
 KK = 1
 IF ( INCX .EQ. 1 ) THEN
 DO 20 J = 1 , N
 IF ( X ( J ) .NE. ZERO ) THEN
 TEMP = X ( J )
 K = KK
 DO 10 I = 1 , J - 1
 X ( I ) = X ( I ) + TEMP * AP ( K )
 K = K + 1
 10 CONTINUE
 IF ( NOUNIT ) X ( J ) = X ( J ) * AP ( KK + J - 1 )
 END IF
 KK = KK + J
 20 CONTINUE
 ELSE
 JX = KX
 DO 40 J = 1 , N
 IF ( X ( JX ) .NE. ZERO ) THEN
 TEMP = X ( JX )
 IX = KX
 DO 30 K = KK , KK + J - 2
 X ( IX ) = X ( IX ) + TEMP * AP ( K )
 IX = IX + INCX
 30 CONTINUE
 IF ( NOUNIT ) X ( JX ) = X ( JX ) * AP ( KK + J - 1 )
 END IF
 JX = JX + INCX
 KK = KK + J
 40 CONTINUE
 END IF
 ELSE
 KK = ( N * ( N + 1 ) ) / 2
 IF ( INCX .EQ. 1 ) THEN
 DO 60 J = N , 1 , - 1
 IF ( X ( J ) .NE. ZERO ) THEN
 TEMP = X ( J )
 K = KK
 DO 50 I = N , J + 1 , - 1
 X ( I ) = X ( I ) + TEMP * AP ( K )
 K = K - 1
 50 CONTINUE
 IF ( NOUNIT ) X ( J ) = X ( J ) * AP ( KK - N + J )
 END IF
 KK = KK - ( N - J + 1 )
 60 CONTINUE
 ELSE
 KX = KX + ( N - 1 ) * INCX
 JX = KX
 DO 80 J = N , 1 , - 1
 IF ( X ( JX ) .NE. ZERO ) THEN
 TEMP = X ( JX )
 IX = KX
 DO 70 K = KK , KK - ( N - ( J + 1 ) ) , - 1
 X ( IX ) = X ( IX ) + TEMP * AP ( K )
 IX = IX - INCX
 70 CONTINUE
 IF ( NOUNIT ) X ( JX ) = X ( JX ) * AP ( KK - N + J )
 END IF
 JX = JX - INCX
 KK = KK - ( N - J + 1 )
 80 CONTINUE
 END IF
 END IF
 ELSE
 IF ( LSAME ( UPLO , 'U' ) ) THEN
 KK = ( N * ( N + 1 ) ) / 2
 IF ( INCX .EQ. 1 ) THEN
 DO 110 J = N , 1 , - 1
 TEMP = X ( J )
 K = KK - 1
 IF ( NOCONJ ) THEN
 IF ( NOUNIT ) TEMP = TEMP * AP ( KK )
 DO 90 I = J - 1 , 1 , - 1
 TEMP = TEMP + AP ( K ) * X ( I )
 K = K - 1
 90 CONTINUE
 ELSE
 IF ( NOUNIT ) TEMP = TEMP * DCONJG ( AP ( KK ) )
 DO 100 I = J - 1 , 1 , - 1
 TEMP = TEMP + DCONJG ( AP ( K ) ) * X ( I )
 K = K - 1
 100 CONTINUE
 END IF
 X ( J ) = TEMP
 KK = KK - J
 110 CONTINUE
 ELSE
 JX = KX + ( N - 1 ) * INCX
 DO 140 J = N , 1 , - 1
 TEMP = X ( JX )
 IX = JX
 IF ( NOCONJ ) THEN
 IF ( NOUNIT ) TEMP = TEMP * AP ( KK )
 DO 120 K = KK - 1 , KK - J + 1 , - 1
 IX = IX - INCX
 TEMP = TEMP + AP ( K ) * X ( IX )
 120 CONTINUE
 ELSE
 IF ( NOUNIT ) TEMP = TEMP * DCONJG ( AP ( KK ) )
 DO 130 K = KK - 1 , KK - J + 1 , - 1
 IX = IX - INCX
 TEMP = TEMP + DCONJG ( AP ( K ) ) * X ( IX )
 130 CONTINUE
 END IF
 X ( JX ) = TEMP
 JX = JX - INCX
 KK = KK - J
 140 CONTINUE
 END IF
 ELSE
 KK = 1
 IF ( INCX .EQ. 1 ) THEN
 DO 170 J = 1 , N
 TEMP = X ( J )
 K = KK + 1
 IF ( NOCONJ ) THEN
 IF ( NOUNIT ) TEMP = TEMP * AP ( KK )
 DO 150 I = J + 1 , N
 TEMP = TEMP + AP ( K ) * X ( I )
 K = K + 1
 150 CONTINUE
 ELSE
 IF ( NOUNIT ) TEMP = TEMP * DCONJG ( AP ( KK ) )
 DO 160 I = J + 1 , N
 TEMP = TEMP + DCONJG ( AP ( K ) ) * X ( I )
 K = K + 1
 160 CONTINUE
 END IF
 X ( J ) = TEMP
 KK = KK + ( N - J + 1 )
 170 CONTINUE
 ELSE
 JX = KX
 DO 200 J = 1 , N
 TEMP = X ( JX )
 IX = JX
 IF ( NOCONJ ) THEN
 IF ( NOUNIT ) TEMP = TEMP * AP ( KK )
 DO 180 K = KK + 1 , KK + N - J
 IX = IX + INCX
 TEMP = TEMP + AP ( K ) * X ( IX )
 180 CONTINUE
 ELSE
 IF ( NOUNIT ) TEMP = TEMP * DCONJG ( AP ( KK ) )
 DO 190 K = KK + 1 , KK + N - J
 IX = IX + INCX
 TEMP = TEMP + DCONJG ( AP ( K ) ) * X ( IX )
 190 CONTINUE
 END IF
 X ( JX ) = TEMP
 JX = JX + INCX
 KK = KK + ( N - J + 1 )
 200 CONTINUE
 END IF
 END IF
 END IF
 RETURN
 END
