 SUBROUTINE STRSV ( UPLO , TRANS , DIAG , N , A , LDA , X , INCX )
 INTEGER INCX , LDA , N
 CHARACTER DIAG , TRANS , UPLO
 REAL A ( LDA , * ) , X ( * )
 REAL ZERO
 PARAMETER ( ZERO = 0.0E+0 )
 REAL TEMP
 INTEGER I , INFO , IX , J , JX , KX
 LOGICAL NOUNIT
 LOGICAL LSAME
 EXTERNAL LSAME
 EXTERNAL XERBLA
 INTRINSIC MAX
 INFO = 0
 IF ( .NOT. LSAME ( UPLO , 'U' ) .AND. .NOT. LSAME ( UPLO , 'L' ) ) THEN
 INFO = 1
 ELSE IF ( .NOT. LSAME ( TRANS , 'N' ) .AND. .NOT. LSAME ( TRANS , 'T' ) .AND. .NOT. LSAME ( TRANS , 'C' ) ) THEN
 INFO = 2
 ELSE IF ( .NOT. LSAME ( DIAG , 'U' ) .AND. .NOT. LSAME ( DIAG , 'N' ) ) THEN
 INFO = 3
 ELSE IF ( N .LT. 0 ) THEN
 INFO = 4
 ELSE IF ( LDA .LT. MAX ( 1 , N ) ) THEN
 INFO = 6
 ELSE IF ( INCX .EQ. 0 ) THEN
 INFO = 8
 END
 IF ( INFO .NE. 0 ) THEN
 CALL XERBLA ( 'STRSV ' , INFO )
 RETURN
 END
 IF ( N .EQ. 0 ) RETURN
 NOUNIT = LSAME ( DIAG , 'N' )
 IF ( INCX .LE. 0 ) THEN
 KX = 1 - ( N - 1 ) * INCX
 ELSE IF ( INCX .NE. 1 ) THEN
 KX = 1
 END
 IF ( LSAME ( TRANS , 'N' ) ) THEN
 IF ( LSAME ( UPLO , 'U' ) ) THEN
 IF ( INCX .EQ. 1 ) THEN
 DO J = N , 1 , - 1
 IF ( X ( J ) .NE. ZERO ) THEN
 IF ( NOUNIT ) X ( J ) = X ( J ) / A ( J , J )
 TEMP = X ( J )
 DO I = J - 1 , 1 , - 1
 X ( I ) = X ( I ) - TEMP * A ( I , J )
 end

 END
 end

 ELSE
 JX = KX + ( N - 1 ) * INCX
 DO J = N , 1 , - 1
 IF ( X ( JX ) .NE. ZERO ) THEN
 IF ( NOUNIT ) X ( JX ) = X ( JX ) / A ( J , J )
 TEMP = X ( JX )
 IX = JX
 DO I = J - 1 , 1 , - 1
 IX = IX - INCX
 X ( IX ) = X ( IX ) - TEMP * A ( I , J )
 end

 END
 JX = JX - INCX
 end

 END
 ELSE
 IF ( INCX .EQ. 1 ) THEN
 DO J = 1 , N
 IF ( X ( J ) .NE. ZERO ) THEN
 IF ( NOUNIT ) X ( J ) = X ( J ) / A ( J , J )
 TEMP = X ( J )
 DO I = J + 1 , N
 X ( I ) = X ( I ) - TEMP * A ( I , J )
 end

 END
 end

 ELSE
 JX = KX
 DO J = 1 , N
 IF ( X ( JX ) .NE. ZERO ) THEN
 IF ( NOUNIT ) X ( JX ) = X ( JX ) / A ( J , J )
 TEMP = X ( JX )
 IX = JX
 DO I = J + 1 , N
 IX = IX + INCX
 X ( IX ) = X ( IX ) - TEMP * A ( I , J )
 end

 END
 JX = JX + INCX
 end

 END
 END
 ELSE
 IF ( LSAME ( UPLO , 'U' ) ) THEN
 IF ( INCX .EQ. 1 ) THEN
 DO J = 1 , N
 TEMP = X ( J )
 DO I = 1 , J - 1
 TEMP = TEMP - A ( I , J ) * X ( I )
 end

 IF ( NOUNIT ) TEMP = TEMP / A ( J , J )
 X ( J ) = TEMP
 end

 ELSE
 JX = KX
 DO J = 1 , N
 TEMP = X ( JX )
 IX = KX
 DO I = 1 , J - 1
 TEMP = TEMP - A ( I , J ) * X ( IX )
 IX = IX + INCX
 end

 IF ( NOUNIT ) TEMP = TEMP / A ( J , J )
 X ( JX ) = TEMP
 JX = JX + INCX
 end

 END
 ELSE
 IF ( INCX .EQ. 1 ) THEN
 DO J = N , 1 , - 1
 TEMP = X ( J )
 DO I = N , J + 1 , - 1
 TEMP = TEMP - A ( I , J ) * X ( I )
 end

 IF ( NOUNIT ) TEMP = TEMP / A ( J , J )
 X ( J ) = TEMP
 end

 ELSE
 KX = KX + ( N - 1 ) * INCX
 JX = KX
 DO J = N , 1 , - 1
 TEMP = X ( JX )
 IX = KX
 DO I = N , J + 1 , - 1
 TEMP = TEMP - A ( I , J ) * X ( IX )
 IX = IX - INCX
 end

 IF ( NOUNIT ) TEMP = TEMP / A ( J , J )
 X ( JX ) = TEMP
 JX = JX - INCX
 end

 END
 END
 END
 RETURN
 END
