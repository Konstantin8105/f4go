COMMENT             	*> \brief \b SROTMG
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =========== DOCUMENTATION ===========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	* Online html documentation available at
NEW_LINE            	

COMMENT             	*            http://www.netlib.org/lapack/explore-html/
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Definition:
NEW_LINE            	

COMMENT             	*  ===========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*       SUBROUTINE SROTMG(SD1,SD2,SX1,SY1,SPARAM)
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*       .. Scalar Arguments ..
NEW_LINE            	

COMMENT             	*       REAL SD1,SD2,SX1,SY1
NEW_LINE            	

COMMENT             	*       ..
NEW_LINE            	

COMMENT             	*       .. Array Arguments ..
NEW_LINE            	

COMMENT             	*       REAL SPARAM(5)
NEW_LINE            	

COMMENT             	*       ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \par Purpose:
NEW_LINE            	

COMMENT             	*  =============
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>    CONSTRUCT THE MODIFIED GIVENS TRANSFORMATION MATRIX H WHICH ZEROS
NEW_LINE            	

COMMENT             	*>    THE SECOND COMPONENT OF THE 2-VECTOR  (SQRT(SD1)*SX1,SQRT(SD2)*>    SY2)**T.
NEW_LINE            	

COMMENT             	*>    WITH SPARAM(1)=SFLAG, H HAS ONE OF THE FOLLOWING FORMS..
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>    SFLAG=-1.E0     SFLAG=0.E0        SFLAG=1.E0     SFLAG=-2.E0
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>      (SH11  SH12)    (1.E0  SH12)    (SH11  1.E0)    (1.E0  0.E0)
NEW_LINE            	

COMMENT             	*>    H=(          )    (          )    (          )    (          )
NEW_LINE            	

COMMENT             	*>      (SH21  SH22),   (SH21  1.E0),   (-1.E0 SH22),   (0.E0  1.E0).
NEW_LINE            	

COMMENT             	*>    LOCATIONS 2-4 OF SPARAM CONTAIN SH11,SH21,SH12, AND SH22
NEW_LINE            	

COMMENT             	*>    RESPECTIVELY. (VALUES OF 1.E0, -1.E0, OR 0.E0 IMPLIED BY THE
NEW_LINE            	

COMMENT             	*>    VALUE OF SPARAM(1) ARE NOT STORED IN SPARAM.)
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>    THE VALUES OF GAMSQ AND RGAMSQ SET IN THE DATA STATEMENT MAY BE
NEW_LINE            	

COMMENT             	*>    INEXACT.  THIS IS OK AS THEY ARE ONLY USED FOR TESTING THE SIZE
NEW_LINE            	

COMMENT             	*>    OF SD1 AND SD2.  ALL ACTUAL SCALING OF DATA IS DONE USING GAM.
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Arguments:
NEW_LINE            	

COMMENT             	*  ==========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \param[in,out] SD1
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          SD1 is REAL
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in,out] SD2
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          SD2 is REAL
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in,out] SX1
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          SX1 is REAL
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in] SY1
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          SY1 is REAL
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[out] SPARAM
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          SPARAM is REAL array, dimension (5)
NEW_LINE            	

COMMENT             	*>     SPARAM(1)=SFLAG
NEW_LINE            	

COMMENT             	*>     SPARAM(2)=SH11
NEW_LINE            	

COMMENT             	*>     SPARAM(3)=SH21
NEW_LINE            	

COMMENT             	*>     SPARAM(4)=SH12
NEW_LINE            	

COMMENT             	*>     SPARAM(5)=SH22
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Authors:
NEW_LINE            	

COMMENT             	*  ========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \author Univ. of Tennessee
NEW_LINE            	

COMMENT             	*> \author Univ. of California Berkeley
NEW_LINE            	

COMMENT             	*> \author Univ. of Colorado Denver
NEW_LINE            	

COMMENT             	*> \author NAG Ltd.
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \date November 2017
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \ingroup single_blas_level1
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =====================================================================
NEW_LINE            	

SUBROUTINE          	SUBROUTINE
IDENT               	SROTMG
(                   	(
IDENT               	SD1
,                   	,
IDENT               	SD2
,                   	,
IDENT               	SX1
,                   	,
IDENT               	SY1
,                   	,
IDENT               	SPARAM
)                   	)
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  -- Reference BLAS level1 routine (version 3.8.0) --
NEW_LINE            	

COMMENT             	*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
NEW_LINE            	

COMMENT             	*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
NEW_LINE            	

COMMENT             	*     November 2017
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*     .. Scalar Arguments ..
NEW_LINE            	

REAL                	REAL
IDENT               	SD1
,                   	,
IDENT               	SD2
,                   	,
IDENT               	SX1
,                   	,
IDENT               	SY1
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*     .. Array Arguments ..
NEW_LINE            	

REAL                	REAL
IDENT               	SPARAM
(                   	(
INT                 	5
)                   	)
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =====================================================================
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*     .. Local Scalars ..
NEW_LINE            	

REAL                	REAL
IDENT               	GAM
,                   	,
IDENT               	GAMSQ
,                   	,
IDENT               	ONE
,                   	,
IDENT               	RGAMSQ
,                   	,
IDENT               	SFLAG
,                   	,
IDENT               	SH11
,                   	,
IDENT               	SH12
,                   	,
IDENT               	SH21
,                   	,
IDENT               	SH22
,                   	,
IDENT               	SP1
,                   	,
IDENT               	SP2
,                   	,
IDENT               	SQ1
,                   	,
NEW_LINE            	

IDENT               	SQ2
,                   	,
IDENT               	STEMP
,                   	,
IDENT               	SU
,                   	,
IDENT               	TWO
,                   	,
IDENT               	ZERO
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*     .. Intrinsic Functions ..
NEW_LINE            	

IDENT               	INTRINSIC
IDENT               	ABS
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*     .. Data statements ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

IDENT               	DATA
IDENT               	ZERO
,                   	,
IDENT               	ONE
,                   	,
IDENT               	TWO
/                   	/
FLOAT               	0.E0
,                   	,
FLOAT               	1.E0
,                   	,
FLOAT               	2.E0
/                   	/
NEW_LINE            	

IDENT               	DATA
IDENT               	GAM
,                   	,
IDENT               	GAMSQ
,                   	,
IDENT               	RGAMSQ
/                   	/
FLOAT               	4096.E0
,                   	,
FLOAT               	1.67772E7
,                   	,
FLOAT               	5.96046E-8
/                   	/
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SD1
<                   	.LT.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

COMMENT             	*        GO ZERO-H-D-AND-SX1..
NEW_LINE            	

IDENT               	SFLAG
=                   	=
-                   	-
IDENT               	ONE
NEW_LINE            	

IDENT               	SH11
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SH12
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SH21
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SH22
=                   	=
IDENT               	ZERO
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

IDENT               	SD1
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SD2
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SX1
=                   	=
IDENT               	ZERO
NEW_LINE            	

else                	ELSE
NEW_LINE            	

COMMENT             	*        CASE-SD1-NONNEGATIVE
NEW_LINE            	

IDENT               	SP2
=                   	=
IDENT               	SD2
*                   	*
IDENT               	SY1
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SP2
==                  	.EQ.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SFLAG
=                   	=
-                   	-
IDENT               	TWO
NEW_LINE            	

IDENT               	SPARAM
(                   	(
INT                 	1
)                   	)
=                   	=
IDENT               	SFLAG
NEW_LINE            	

return              	RETURN
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

COMMENT             	*        REGULAR-CASE..
NEW_LINE            	

IDENT               	SP1
=                   	=
IDENT               	SD1
*                   	*
IDENT               	SX1
NEW_LINE            	

IDENT               	SQ2
=                   	=
IDENT               	SP2
*                   	*
IDENT               	SY1
NEW_LINE            	

IDENT               	SQ1
=                   	=
IDENT               	SP1
*                   	*
IDENT               	SX1
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	ABS
(                   	(
IDENT               	SQ1
)                   	)
>                   	.GT.
IDENT               	ABS
(                   	(
IDENT               	SQ2
)                   	)
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SH21
=                   	=
-                   	-
IDENT               	SY1
/                   	/
IDENT               	SX1
NEW_LINE            	

IDENT               	SH12
=                   	=
IDENT               	SP2
/                   	/
IDENT               	SP1
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

IDENT               	SU
=                   	=
IDENT               	ONE
-                   	-
IDENT               	SH12
*                   	*
IDENT               	SH21
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SU
>                   	.GT.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SFLAG
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SD1
=                   	=
IDENT               	SD1
/                   	/
IDENT               	SU
NEW_LINE            	

IDENT               	SD2
=                   	=
IDENT               	SD2
/                   	/
IDENT               	SU
NEW_LINE            	

IDENT               	SX1
=                   	=
IDENT               	SX1
*                   	*
IDENT               	SU
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

else                	ELSE
NEW_LINE            	

NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SQ2
<                   	.LT.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

COMMENT             	*              GO ZERO-H-D-AND-SX1..
NEW_LINE            	

IDENT               	SFLAG
=                   	=
-                   	-
IDENT               	ONE
NEW_LINE            	

IDENT               	SH11
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SH12
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SH21
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SH22
=                   	=
IDENT               	ZERO
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

IDENT               	SD1
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SD2
=                   	=
IDENT               	ZERO
NEW_LINE            	

IDENT               	SX1
=                   	=
IDENT               	ZERO
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	SFLAG
=                   	=
IDENT               	ONE
NEW_LINE            	

IDENT               	SH11
=                   	=
IDENT               	SP1
/                   	/
IDENT               	SP2
NEW_LINE            	

IDENT               	SH22
=                   	=
IDENT               	SX1
/                   	/
IDENT               	SY1
NEW_LINE            	

IDENT               	SU
=                   	=
IDENT               	ONE
+                   	+
IDENT               	SH11
*                   	*
IDENT               	SH22
NEW_LINE            	

IDENT               	STEMP
=                   	=
IDENT               	SD2
/                   	/
IDENT               	SU
NEW_LINE            	

IDENT               	SD2
=                   	=
IDENT               	SD1
/                   	/
IDENT               	SU
NEW_LINE            	

IDENT               	SD1
=                   	=
IDENT               	STEMP
NEW_LINE            	

IDENT               	SX1
=                   	=
IDENT               	SY1
*                   	*
IDENT               	SU
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

NEW_LINE            	

COMMENT             	*     PROCESURE..SCALE-CHECK
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SD1
!=                  	.NE.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

DO                  	DO
IDENT               	WHILE
(                   	(
(                   	(
IDENT               	SD1
<=                  	.LE.
IDENT               	RGAMSQ
)                   	)
||                  	.OR.
(                   	(
IDENT               	SD1
>=                  	.GE.
IDENT               	GAMSQ
)                   	)
)                   	)
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SFLAG
==                  	.EQ.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SH11
=                   	=
IDENT               	ONE
NEW_LINE            	

IDENT               	SH22
=                   	=
IDENT               	ONE
NEW_LINE            	

IDENT               	SFLAG
=                   	=
-                   	-
IDENT               	ONE
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	SH21
=                   	=
-                   	-
IDENT               	ONE
NEW_LINE            	

IDENT               	SH12
=                   	=
IDENT               	ONE
NEW_LINE            	

IDENT               	SFLAG
=                   	=
-                   	-
IDENT               	ONE
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SD1
<=                  	.LE.
IDENT               	RGAMSQ
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SD1
=                   	=
IDENT               	SD1
*                   	*
IDENT               	GAM
                    	**
INT                 	2
NEW_LINE            	

IDENT               	SX1
=                   	=
IDENT               	SX1
/                   	/
IDENT               	GAM
NEW_LINE            	

IDENT               	SH11
=                   	=
IDENT               	SH11
/                   	/
IDENT               	GAM
NEW_LINE            	

IDENT               	SH12
=                   	=
IDENT               	SH12
/                   	/
IDENT               	GAM
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	SD1
=                   	=
IDENT               	SD1
/                   	/
IDENT               	GAM
                    	**
INT                 	2
NEW_LINE            	

IDENT               	SX1
=                   	=
IDENT               	SX1
*                   	*
IDENT               	GAM
NEW_LINE            	

IDENT               	SH11
=                   	=
IDENT               	SH11
*                   	*
IDENT               	GAM
NEW_LINE            	

IDENT               	SH12
=                   	=
IDENT               	SH12
*                   	*
IDENT               	GAM
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

END                 	ENDDO
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SD2
!=                  	.NE.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

DO                  	DO
IDENT               	WHILE
(                   	(
(                   	(
IDENT               	ABS
(                   	(
IDENT               	SD2
)                   	)
<=                  	.LE.
IDENT               	RGAMSQ
)                   	)
||                  	.OR.
(                   	(
IDENT               	ABS
(                   	(
IDENT               	SD2
)                   	)
>=                  	.GE.
IDENT               	GAMSQ
)                   	)
)                   	)
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SFLAG
==                  	.EQ.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SH11
=                   	=
IDENT               	ONE
NEW_LINE            	

IDENT               	SH22
=                   	=
IDENT               	ONE
NEW_LINE            	

IDENT               	SFLAG
=                   	=
-                   	-
IDENT               	ONE
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	SH21
=                   	=
-                   	-
IDENT               	ONE
NEW_LINE            	

IDENT               	SH12
=                   	=
IDENT               	ONE
NEW_LINE            	

IDENT               	SFLAG
=                   	=
-                   	-
IDENT               	ONE
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	ABS
(                   	(
IDENT               	SD2
)                   	)
<=                  	.LE.
IDENT               	RGAMSQ
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SD2
=                   	=
IDENT               	SD2
*                   	*
IDENT               	GAM
                    	**
INT                 	2
NEW_LINE            	

IDENT               	SH21
=                   	=
IDENT               	SH21
/                   	/
IDENT               	GAM
NEW_LINE            	

IDENT               	SH22
=                   	=
IDENT               	SH22
/                   	/
IDENT               	GAM
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	SD2
=                   	=
IDENT               	SD2
/                   	/
IDENT               	GAM
                    	**
INT                 	2
NEW_LINE            	

IDENT               	SH21
=                   	=
IDENT               	SH21
*                   	*
IDENT               	GAM
NEW_LINE            	

IDENT               	SH22
=                   	=
IDENT               	SH22
*                   	*
IDENT               	GAM
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

END                 	END
DO                  	DO
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SFLAG
<                   	.LT.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SPARAM
(                   	(
INT                 	2
)                   	)
=                   	=
IDENT               	SH11
NEW_LINE            	

IDENT               	SPARAM
(                   	(
INT                 	3
)                   	)
=                   	=
IDENT               	SH21
NEW_LINE            	

IDENT               	SPARAM
(                   	(
INT                 	4
)                   	)
=                   	=
IDENT               	SH12
NEW_LINE            	

IDENT               	SPARAM
(                   	(
INT                 	5
)                   	)
=                   	=
IDENT               	SH22
NEW_LINE            	

else                	ELSE
if                  	IF
(                   	(
IDENT               	SFLAG
==                  	.EQ.
IDENT               	ZERO
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	SPARAM
(                   	(
INT                 	3
)                   	)
=                   	=
IDENT               	SH21
NEW_LINE            	

IDENT               	SPARAM
(                   	(
INT                 	4
)                   	)
=                   	=
IDENT               	SH12
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	SPARAM
(                   	(
INT                 	2
)                   	)
=                   	=
IDENT               	SH11
NEW_LINE            	

IDENT               	SPARAM
(                   	(
INT                 	5
)                   	)
=                   	=
IDENT               	SH22
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

NEW_LINE            	

IDENT               	SPARAM
(                   	(
INT                 	1
)                   	)
=                   	=
IDENT               	SFLAG
NEW_LINE            	

return              	RETURN
NEW_LINE            	

END                 	END
NEW_LINE            	

NEW_LINE            	

NEW_LINE            	

NEW_LINE            	

NEW_LINE            	

