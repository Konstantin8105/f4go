 SUBROUTINE CHEMV ( UPLO , N , ALPHA , A , LDA , X , INCX , BETA , Y , INCY )
 COMPLEX ALPHA , BETA
 INTEGER INCX , INCY , LDA , N
 CHARACTER UPLO
 COMPLEX A ( LDA , * ) , X ( * ) , Y ( * )
 COMPLEX ONE


 ONE = ( 1.0E+0 , 0.0E+0 )

 COMPLEX ZERO


 ZERO = ( 0.0E+0 , 0.0E+0 )

 COMPLEX TEMP1 , TEMP2
 INTEGER I , INFO , IX , IY , J , JX , JY , KX , KY
 LOGICAL LSAME
 EXTERNAL LSAME
 EXTERNAL XERBLA
 INTRINSIC CONJG , MAX , REAL
 INFO = 0
 IF ( .NOT. LSAME ( UPLO , 'U' ) .AND. .NOT. LSAME ( UPLO , 'L' ) ) THEN
 INFO = 1
 ELSE IF ( N .LT. 0 ) THEN
 INFO = 2
 ELSE IF ( LDA .LT. MAX ( 1 , N ) ) THEN
 INFO = 5
 ELSE IF ( INCX .EQ. 0 ) THEN
 INFO = 7
 ELSE IF ( INCY .EQ. 0 ) THEN
 INFO = 10
 END
 IF ( INFO .NE. 0 ) THEN
 CALL XERBLA ( 'CHEMV ' , INFO )
 RETURN
 END
 IF ( ( N .EQ. 0 ) .OR. ( ( ALPHA .EQ. ZERO ) .AND. ( BETA .EQ. ONE ) ) ) RETURN
 IF ( INCX .GT. 0 ) THEN
 KX = 1
 ELSE
 KX = 1 - ( N - 1 ) * INCX
 END
 IF ( INCY .GT. 0 ) THEN
 KY = 1
 ELSE
 KY = 1 - ( N - 1 ) * INCY
 END
 IF ( BETA .NE. ONE ) THEN
 IF ( INCY .EQ. 1 ) THEN
 IF ( BETA .EQ. ZERO ) THEN
 DO I = 1 , N
 Y ( I ) = ZERO
 end

 ELSE
 DO I = 1 , N
 Y ( I ) = BETA * Y ( I )
 end

 END
 ELSE
 IY = KY
 IF ( BETA .EQ. ZERO ) THEN
 DO I = 1 , N
 Y ( IY ) = ZERO
 IY = IY + INCY
 end

 ELSE
 DO I = 1 , N
 Y ( IY ) = BETA * Y ( IY )
 IY = IY + INCY
 end

 END
 END
 END
 IF ( ALPHA .EQ. ZERO ) RETURN
 IF ( LSAME ( UPLO , 'U' ) ) THEN
 IF ( ( INCX .EQ. 1 ) .AND. ( INCY .EQ. 1 ) ) THEN
 DO J = 1 , N
 TEMP1 = ALPHA * X ( J )
 TEMP2 = ZERO
 DO I = 1 , J - 1
 Y ( I ) = Y ( I ) + TEMP1 * A ( I , J )
 TEMP2 = TEMP2 + CONJG ( A ( I , J ) ) * X ( I )
 end

 Y ( J ) = Y ( J ) + TEMP1 * REAL ( A ( J , J ) ) + ALPHA * TEMP2
 end

 ELSE
 JX = KX
 JY = KY
 DO J = 1 , N
 TEMP1 = ALPHA * X ( JX )
 TEMP2 = ZERO
 IX = KX
 IY = KY
 DO I = 1 , J - 1
 Y ( IY ) = Y ( IY ) + TEMP1 * A ( I , J )
 TEMP2 = TEMP2 + CONJG ( A ( I , J ) ) * X ( IX )
 IX = IX + INCX
 IY = IY + INCY
 end

 Y ( JY ) = Y ( JY ) + TEMP1 * REAL ( A ( J , J ) ) + ALPHA * TEMP2
 JX = JX + INCX
 JY = JY + INCY
 end

 END
 ELSE
 IF ( ( INCX .EQ. 1 ) .AND. ( INCY .EQ. 1 ) ) THEN
 DO J = 1 , N
 TEMP1 = ALPHA * X ( J )
 TEMP2 = ZERO
 Y ( J ) = Y ( J ) + TEMP1 * REAL ( A ( J , J ) )
 DO I = J + 1 , N
 Y ( I ) = Y ( I ) + TEMP1 * A ( I , J )
 TEMP2 = TEMP2 + CONJG ( A ( I , J ) ) * X ( I )
 end

 Y ( J ) = Y ( J ) + ALPHA * TEMP2
 end

 ELSE
 JX = KX
 JY = KY
 DO J = 1 , N
 TEMP1 = ALPHA * X ( JX )
 TEMP2 = ZERO
 Y ( JY ) = Y ( JY ) + TEMP1 * REAL ( A ( J , J ) )
 IX = JX
 IY = JY
 DO I = J + 1 , N
 IX = IX + INCX
 IY = IY + INCY
 Y ( IY ) = Y ( IY ) + TEMP1 * A ( I , J )
 TEMP2 = TEMP2 + CONJG ( A ( I , J ) ) * X ( IX )
 end

 Y ( JY ) = Y ( JY ) + ALPHA * TEMP2
 JX = JX + INCX
 JY = JY + INCY
 end

 END
 END
 RETURN
 END
