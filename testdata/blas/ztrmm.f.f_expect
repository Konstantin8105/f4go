 SUBROUTINE ZTRMM ( SIDE , UPLO , TRANSA , DIAG , M , N , ALPHA , A , LDA , B , LDB )
 COMPLEX * 16 ALPHA
 INTEGER LDA , LDB , M , N
 CHARACTER DIAG , SIDE , TRANSA , UPLO
 COMPLEX * 16 A ( LDA , * ) , B ( LDB , * )
 LOGICAL LSAME
 EXTERNAL LSAME
 EXTERNAL XERBLA
 INTRINSIC DCONJG , MAX
 COMPLEX * 16 TEMP
 INTEGER I , INFO , J , K , NROWA
 LOGICAL LSIDE , NOCONJ , NOUNIT , UPPER
 COMPLEX * 16 ONE


 ONE = ( 1.0D+0 , 0.0D+0 )

 COMPLEX * 16 ZERO


 ZERO = ( 0.0D+0 , 0.0D+0 )

 LSIDE = LSAME ( SIDE , 'L' )
 IF ( LSIDE ) THEN
 NROWA = M
 ELSE
 NROWA = N
 END
 NOCONJ = LSAME ( TRANSA , 'T' )
 NOUNIT = LSAME ( DIAG , 'N' )
 UPPER = LSAME ( UPLO , 'U' )
 INFO = 0
 IF ( ( .NOT. LSIDE ) .AND. ( .NOT. LSAME ( SIDE , 'R' ) ) ) THEN
 INFO = 1
 ELSE IF ( ( .NOT. UPPER ) .AND. ( .NOT. LSAME ( UPLO , 'L' ) ) ) THEN
 INFO = 2
 ELSE IF ( ( .NOT. LSAME ( TRANSA , 'N' ) ) .AND. ( .NOT. LSAME ( TRANSA , 'T' ) ) .AND. ( .NOT. LSAME ( TRANSA , 'C' ) ) ) THEN
 INFO = 3
 ELSE IF ( ( .NOT. LSAME ( DIAG , 'U' ) ) .AND. ( .NOT. LSAME ( DIAG , 'N' ) ) ) THEN
 INFO = 4
 ELSE IF ( M .LT. 0 ) THEN
 INFO = 5
 ELSE IF ( N .LT. 0 ) THEN
 INFO = 6
 ELSE IF ( LDA .LT. MAX ( 1 , NROWA ) ) THEN
 INFO = 9
 ELSE IF ( LDB .LT. MAX ( 1 , M ) ) THEN
 INFO = 11
 END
 IF ( INFO .NE. 0 ) THEN
 CALL XERBLA ( 'ZTRMM ' , INFO )
 RETURN
 END
 IF ( M .EQ. 0 .OR. N .EQ. 0 ) RETURN
 IF ( ALPHA .EQ. ZERO ) THEN
 DO J = 1 , N
 DO I = 1 , M
 B ( I , J ) = ZERO
 end

 end

 RETURN
 END
 IF ( LSIDE ) THEN
 IF ( LSAME ( TRANSA , 'N' ) ) THEN
 IF ( UPPER ) THEN
 DO J = 1 , N
 DO K = 1 , M
 IF ( B ( K , J ) .NE. ZERO ) THEN
 TEMP = ALPHA * B ( K , J )
 DO I = 1 , K - 1
 B ( I , J ) = B ( I , J ) + TEMP * A ( I , K )
 end

 IF ( NOUNIT ) TEMP = TEMP * A ( K , K )
 B ( K , J ) = TEMP
 END
 end

 end

 ELSE
 DO J = 1 , N
 DO K = M , 1 , - 1
 IF ( B ( K , J ) .NE. ZERO ) THEN
 TEMP = ALPHA * B ( K , J )
 B ( K , J ) = TEMP
 IF ( NOUNIT ) B ( K , J ) = B ( K , J ) * A ( K , K )
 DO I = K + 1 , M
 B ( I , J ) = B ( I , J ) + TEMP * A ( I , K )
 end

 END
 end

 end

 END
 ELSE
 IF ( UPPER ) THEN
 DO J = 1 , N
 DO I = M , 1 , - 1
 TEMP = B ( I , J )
 IF ( NOCONJ ) THEN
 IF ( NOUNIT ) TEMP = TEMP * A ( I , I )
 DO K = 1 , I - 1
 TEMP = TEMP + A ( K , I ) * B ( K , J )
 end

 ELSE
 IF ( NOUNIT ) TEMP = TEMP * DCONJG ( A ( I , I ) )
 DO K = 1 , I - 1
 TEMP = TEMP + DCONJG ( A ( K , I ) ) * B ( K , J )
 end

 END
 B ( I , J ) = ALPHA * TEMP
 end

 end

 ELSE
 DO J = 1 , N
 DO I = 1 , M
 TEMP = B ( I , J )
 IF ( NOCONJ ) THEN
 IF ( NOUNIT ) TEMP = TEMP * A ( I , I )
 DO K = I + 1 , M
 TEMP = TEMP + A ( K , I ) * B ( K , J )
 end

 ELSE
 IF ( NOUNIT ) TEMP = TEMP * DCONJG ( A ( I , I ) )
 DO K = I + 1 , M
 TEMP = TEMP + DCONJG ( A ( K , I ) ) * B ( K , J )
 end

 END
 B ( I , J ) = ALPHA * TEMP
 end

 end

 END
 END
 ELSE
 IF ( LSAME ( TRANSA , 'N' ) ) THEN
 IF ( UPPER ) THEN
 DO J = N , 1 , - 1
 TEMP = ALPHA
 IF ( NOUNIT ) TEMP = TEMP * A ( J , J )
 DO I = 1 , M
 B ( I , J ) = TEMP * B ( I , J )
 end

 DO K = 1 , J - 1
 IF ( A ( K , J ) .NE. ZERO ) THEN
 TEMP = ALPHA * A ( K , J )
 DO I = 1 , M
 B ( I , J ) = B ( I , J ) + TEMP * B ( I , K )
 end

 END
 end

 end

 ELSE
 DO J = 1 , N
 TEMP = ALPHA
 IF ( NOUNIT ) TEMP = TEMP * A ( J , J )
 DO I = 1 , M
 B ( I , J ) = TEMP * B ( I , J )
 end

 DO K = J + 1 , N
 IF ( A ( K , J ) .NE. ZERO ) THEN
 TEMP = ALPHA * A ( K , J )
 DO I = 1 , M
 B ( I , J ) = B ( I , J ) + TEMP * B ( I , K )
 end

 END
 end

 end

 END
 ELSE
 IF ( UPPER ) THEN
 DO K = 1 , N
 DO J = 1 , K - 1
 IF ( A ( J , K ) .NE. ZERO ) THEN
 IF ( NOCONJ ) THEN
 TEMP = ALPHA * A ( J , K )
 ELSE
 TEMP = ALPHA * DCONJG ( A ( J , K ) )
 END
 DO I = 1 , M
 B ( I , J ) = B ( I , J ) + TEMP * B ( I , K )
 end

 END
 end

 TEMP = ALPHA
 IF ( NOUNIT ) THEN
 IF ( NOCONJ ) THEN
 TEMP = TEMP * A ( K , K )
 ELSE
 TEMP = TEMP * DCONJG ( A ( K , K ) )
 END
 END
 IF ( TEMP .NE. ONE ) THEN
 DO I = 1 , M
 B ( I , K ) = TEMP * B ( I , K )
 end

 END
 end

 ELSE
 DO K = N , 1 , - 1
 DO J = K + 1 , N
 IF ( A ( J , K ) .NE. ZERO ) THEN
 IF ( NOCONJ ) THEN
 TEMP = ALPHA * A ( J , K )
 ELSE
 TEMP = ALPHA * DCONJG ( A ( J , K ) )
 END
 DO I = 1 , M
 B ( I , J ) = B ( I , J ) + TEMP * B ( I , K )
 end

 END
 end

 TEMP = ALPHA
 IF ( NOUNIT ) THEN
 IF ( NOCONJ ) THEN
 TEMP = TEMP * A ( K , K )
 ELSE
 TEMP = TEMP * DCONJG ( A ( K , K ) )
 END
 END
 IF ( TEMP .NE. ONE ) THEN
 DO I = 1 , M
 B ( I , K ) = TEMP * B ( I , K )
 end

 END
 end

 END
 END
 END
 RETURN
 END
