COMMENT             	*> \brief \b DROTG
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =========== DOCUMENTATION ===========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	* Online html documentation available at
NEW_LINE            	

COMMENT             	*            http://www.netlib.org/lapack/explore-html/
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Definition:
NEW_LINE            	

COMMENT             	*  ===========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*       SUBROUTINE DROTG(DA,DB,C,S)
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*       .. Scalar Arguments ..
NEW_LINE            	

COMMENT             	*       DOUBLE PRECISION C,DA,DB,S
NEW_LINE            	

COMMENT             	*       ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \par Purpose:
NEW_LINE            	

COMMENT             	*  =============
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>    DROTG construct givens plane rotation.
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Arguments:
NEW_LINE            	

COMMENT             	*  ==========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \param[in] DA
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          DA is DOUBLE PRECISION
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[in] DB
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          DB is DOUBLE PRECISION
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[out] C
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          C is DOUBLE PRECISION
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \param[out] S
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>          S is DOUBLE PRECISION
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  Authors:
NEW_LINE            	

COMMENT             	*  ========
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \author Univ. of Tennessee
NEW_LINE            	

COMMENT             	*> \author Univ. of California Berkeley
NEW_LINE            	

COMMENT             	*> \author Univ. of Colorado Denver
NEW_LINE            	

COMMENT             	*> \author NAG Ltd.
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \date November 2017
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \ingroup double_blas_level1
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*> \par Further Details:
NEW_LINE            	

COMMENT             	*  =====================
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*> \verbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*>     jack dongarra, linpack, 3/11/78.
NEW_LINE            	

COMMENT             	*> \endverbatim
NEW_LINE            	

COMMENT             	*>
NEW_LINE            	

COMMENT             	*  =====================================================================
NEW_LINE            	

SUBROUTINE          	SUBROUTINE
IDENT               	DROTG
(                   	(
IDENT               	DA
,                   	,
IDENT               	DB
,                   	,
IDENT               	C
,                   	,
IDENT               	S
)                   	)
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  -- Reference BLAS level1 routine (version 3.8.0) --
NEW_LINE            	

COMMENT             	*  -- Reference BLAS is a software package provided by Univ. of Tennessee,    --
NEW_LINE            	

COMMENT             	*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
NEW_LINE            	

COMMENT             	*     November 2017
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*     .. Scalar Arguments ..
NEW_LINE            	

REAL                	DOUBLE
IDENT               	PRECISION
IDENT               	C
,                   	,
IDENT               	DA
,                   	,
IDENT               	DB
,                   	,
IDENT               	S
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*  =====================================================================
NEW_LINE            	

COMMENT             	*
NEW_LINE            	

COMMENT             	*     .. Local Scalars ..
NEW_LINE            	

REAL                	DOUBLE
IDENT               	PRECISION
IDENT               	R
,                   	,
IDENT               	ROE
,                   	,
IDENT               	SCALE
,                   	,
IDENT               	Z
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

COMMENT             	*     .. Intrinsic Functions ..
NEW_LINE            	

IDENT               	INTRINSIC
IDENT               	DABS
,                   	,
IDENT               	DSIGN
,                   	,
IDENT               	DSQRT
NEW_LINE            	

COMMENT             	*     ..
NEW_LINE            	

IDENT               	ROE
=                   	=
IDENT               	DB
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	DABS
(                   	(
IDENT               	DA
)                   	)
>                   	.GT.
IDENT               	DABS
(                   	(
IDENT               	DB
)                   	)
)                   	)
IDENT               	ROE
=                   	=
IDENT               	DA
NEW_LINE            	

IDENT               	SCALE
=                   	=
IDENT               	DABS
(                   	(
IDENT               	DA
)                   	)
+                   	+
IDENT               	DABS
(                   	(
IDENT               	DB
)                   	)
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	SCALE
==                  	.EQ.
FLOAT               	0.0d0
)                   	)
THEN                	THEN
NEW_LINE            	

IDENT               	C
=                   	=
FLOAT               	1.0d0
NEW_LINE            	

IDENT               	S
=                   	=
FLOAT               	0.0d0
NEW_LINE            	

IDENT               	R
=                   	=
FLOAT               	0.0d0
NEW_LINE            	

IDENT               	Z
=                   	=
FLOAT               	0.0d0
NEW_LINE            	

else                	ELSE
NEW_LINE            	

IDENT               	R
=                   	=
IDENT               	SCALE
*                   	*
IDENT               	DSQRT
(                   	(
(                   	(
IDENT               	DA
/                   	/
IDENT               	SCALE
)                   	)
                    	**
INT                 	2
+                   	+
(                   	(
IDENT               	DB
/                   	/
IDENT               	SCALE
)                   	)
                    	**
INT                 	2
)                   	)
NEW_LINE            	

IDENT               	R
=                   	=
IDENT               	DSIGN
(                   	(
FLOAT               	1.0d0
,                   	,
IDENT               	ROE
)                   	)
*                   	*
IDENT               	R
NEW_LINE            	

IDENT               	C
=                   	=
IDENT               	DA
/                   	/
IDENT               	R
NEW_LINE            	

IDENT               	S
=                   	=
IDENT               	DB
/                   	/
IDENT               	R
NEW_LINE            	

IDENT               	Z
=                   	=
FLOAT               	1.0d0
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	DABS
(                   	(
IDENT               	DA
)                   	)
>                   	.GT.
IDENT               	DABS
(                   	(
IDENT               	DB
)                   	)
)                   	)
IDENT               	Z
=                   	=
IDENT               	S
NEW_LINE            	

if                  	IF
(                   	(
IDENT               	DABS
(                   	(
IDENT               	DB
)                   	)
>=                  	.GE.
IDENT               	DABS
(                   	(
IDENT               	DA
)                   	)
&&                  	.AND.
IDENT               	C
!=                  	.NE.
FLOAT               	0.0d0
)                   	)
IDENT               	Z
=                   	=
FLOAT               	1.0d0
/                   	/
IDENT               	C
NEW_LINE            	

END                 	END
if                  	IF
NEW_LINE            	

IDENT               	DA
=                   	=
IDENT               	R
NEW_LINE            	

IDENT               	DB
=                   	=
IDENT               	Z
NEW_LINE            	

return              	RETURN
NEW_LINE            	

END                 	END
NEW_LINE            	

